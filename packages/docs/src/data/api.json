{
	"id": 0,
	"name": "@meshsdk/core",
	"variant": "project",
	"kind": 1,
	"flags": {},
	"children": [
		{
			"id": 1176,
			"name": "AppWallet",
			"variant": "declaration",
			"kind": 128,
			"flags": {},
			"children": [
				{
					"id": 1180,
					"name": "constructor",
					"variant": "declaration",
					"kind": 512,
					"flags": {},
					"sources": [
						{
							"fileName": "wallet/app.service.ts",
							"line": 46,
							"character": 2,
							"url": "https://github.com/MeshJS/mesh/blob/1cc00f9/packages/module/src/wallet/app.service.ts#L46"
						}
					],
					"signatures": [
						{
							"id": 1181,
							"name": "new AppWallet",
							"variant": "signature",
							"kind": 16384,
							"flags": {},
							"sources": [
								{
									"fileName": "wallet/app.service.ts",
									"line": 46,
									"character": 2,
									"url": "https://github.com/MeshJS/mesh/blob/1cc00f9/packages/module/src/wallet/app.service.ts#L46"
								}
							],
							"parameters": [
								{
									"id": 1182,
									"name": "options",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"type": {
										"type": "reference",
										"target": 1160,
										"name": "CreateAppWalletOptions",
										"package": "@meshsdk/core"
									}
								}
							],
							"type": {
								"type": "reference",
								"target": 1176,
								"name": "AppWallet",
								"package": "@meshsdk/core"
							}
						}
					]
				},
				{
					"id": 1183,
					"name": "_fetcher",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isPrivate": true,
						"isReadonly": true
					},
					"sources": [
						{
							"fileName": "wallet/app.service.ts",
							"line": 42,
							"character": 19,
							"url": "https://github.com/MeshJS/mesh/blob/1cc00f9/packages/module/src/wallet/app.service.ts#L42"
						}
					],
					"type": {
						"type": "reference",
						"target": 17,
						"name": "IFetcher",
						"package": "@meshsdk/core"
					}
				},
				{
					"id": 1184,
					"name": "_submitter",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isPrivate": true,
						"isReadonly": true
					},
					"sources": [
						{
							"fileName": "wallet/app.service.ts",
							"line": 43,
							"character": 19,
							"url": "https://github.com/MeshJS/mesh/blob/1cc00f9/packages/module/src/wallet/app.service.ts#L43"
						}
					],
					"type": {
						"type": "reference",
						"target": 85,
						"name": "ISubmitter",
						"package": "@meshsdk/core"
					}
				},
				{
					"id": 1185,
					"name": "_wallet",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isPrivate": true,
						"isReadonly": true
					},
					"sources": [
						{
							"fileName": "wallet/app.service.ts",
							"line": 44,
							"character": 19,
							"url": "https://github.com/MeshJS/mesh/blob/1cc00f9/packages/module/src/wallet/app.service.ts#L44"
						}
					],
					"type": {
						"type": "reference",
						"target": 1293,
						"name": "EmbeddedWallet",
						"package": "@meshsdk/core"
					}
				},
				{
					"id": 1186,
					"name": "getBaseAddress",
					"variant": "declaration",
					"kind": 2048,
					"flags": {},
					"sources": [
						{
							"fileName": "wallet/app.service.ts",
							"line": 75,
							"character": 2,
							"url": "https://github.com/MeshJS/mesh/blob/1cc00f9/packages/module/src/wallet/app.service.ts#L75"
						}
					],
					"signatures": [
						{
							"id": 1187,
							"name": "getBaseAddress",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"sources": [
								{
									"fileName": "wallet/app.service.ts",
									"line": 75,
									"character": 2,
									"url": "https://github.com/MeshJS/mesh/blob/1cc00f9/packages/module/src/wallet/app.service.ts#L75"
								}
							],
							"parameters": [
								{
									"id": 1188,
									"name": "accountIndex",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "number"
									},
									"defaultValue": "0"
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						}
					]
				},
				{
					"id": 1223,
					"name": "getCollateral",
					"variant": "declaration",
					"kind": 2048,
					"flags": {},
					"sources": [
						{
							"fileName": "wallet/app.service.ts",
							"line": 187,
							"character": 8,
							"url": "https://github.com/MeshJS/mesh/blob/1cc00f9/packages/module/src/wallet/app.service.ts#L187"
						}
					],
					"signatures": [
						{
							"id": 1224,
							"name": "getCollateral",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"sources": [
								{
									"fileName": "wallet/app.service.ts",
									"line": 187,
									"character": 8,
									"url": "https://github.com/MeshJS/mesh/blob/1cc00f9/packages/module/src/wallet/app.service.ts#L187"
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Promise"
								},
								"typeArguments": [
									{
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/@sidan-lab/sidan-csl-rs-nodejs/sidan_csl_rs.d.ts",
											"qualifiedName": "TransactionUnspentOutput"
										},
										"name": "TransactionUnspentOutput",
										"package": "@sidan-lab/sidan-csl-rs-nodejs"
									}
								],
								"name": "Promise",
								"package": "typescript"
							}
						}
					]
				},
				{
					"id": 1189,
					"name": "getPaymentAddress",
					"variant": "declaration",
					"kind": 2048,
					"flags": {},
					"sources": [
						{
							"fileName": "wallet/app.service.ts",
							"line": 80,
							"character": 2,
							"url": "https://github.com/MeshJS/mesh/blob/1cc00f9/packages/module/src/wallet/app.service.ts#L80"
						}
					],
					"signatures": [
						{
							"id": 1190,
							"name": "getPaymentAddress",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"sources": [
								{
									"fileName": "wallet/app.service.ts",
									"line": 80,
									"character": 2,
									"url": "https://github.com/MeshJS/mesh/blob/1cc00f9/packages/module/src/wallet/app.service.ts#L80"
								}
							],
							"parameters": [
								{
									"id": 1191,
									"name": "accountIndex",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "number"
									},
									"defaultValue": "0"
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						}
					]
				},
				{
					"id": 1192,
					"name": "getRewardAddress",
					"variant": "declaration",
					"kind": 2048,
					"flags": {},
					"sources": [
						{
							"fileName": "wallet/app.service.ts",
							"line": 85,
							"character": 2,
							"url": "https://github.com/MeshJS/mesh/blob/1cc00f9/packages/module/src/wallet/app.service.ts#L85"
						}
					],
					"signatures": [
						{
							"id": 1193,
							"name": "getRewardAddress",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"sources": [
								{
									"fileName": "wallet/app.service.ts",
									"line": 85,
									"character": 2,
									"url": "https://github.com/MeshJS/mesh/blob/1cc00f9/packages/module/src/wallet/app.service.ts#L85"
								}
							],
							"parameters": [
								{
									"id": 1194,
									"name": "accountIndex",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "number"
									},
									"defaultValue": "0"
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						}
					]
				},
				{
					"id": 1195,
					"name": "getUsedAddress",
					"variant": "declaration",
					"kind": 2048,
					"flags": {},
					"sources": [
						{
							"fileName": "wallet/app.service.ts",
							"line": 90,
							"character": 2,
							"url": "https://github.com/MeshJS/mesh/blob/1cc00f9/packages/module/src/wallet/app.service.ts#L90"
						}
					],
					"signatures": [
						{
							"id": 1196,
							"name": "getUsedAddress",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"sources": [
								{
									"fileName": "wallet/app.service.ts",
									"line": 90,
									"character": 2,
									"url": "https://github.com/MeshJS/mesh/blob/1cc00f9/packages/module/src/wallet/app.service.ts#L90"
								}
							],
							"parameters": [
								{
									"id": 1197,
									"name": "accountIndex",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "number"
									},
									"defaultValue": "0"
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/@sidan-lab/sidan-csl-rs-nodejs/sidan_csl_rs.d.ts",
									"qualifiedName": "Address"
								},
								"name": "Address",
								"package": "@sidan-lab/sidan-csl-rs-nodejs"
							},
							"implementationOf": {
								"type": "reference",
								"target": 58,
								"name": "IInitiator.getUsedAddress"
							}
						}
					],
					"implementationOf": {
						"type": "reference",
						"target": 57,
						"name": "IInitiator.getUsedAddress"
					}
				},
				{
					"id": 1225,
					"name": "getUsedAddresses",
					"variant": "declaration",
					"kind": 2048,
					"flags": {},
					"sources": [
						{
							"fileName": "wallet/app.service.ts",
							"line": 191,
							"character": 8,
							"url": "https://github.com/MeshJS/mesh/blob/1cc00f9/packages/module/src/wallet/app.service.ts#L191"
						}
					],
					"signatures": [
						{
							"id": 1226,
							"name": "getUsedAddresses",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"sources": [
								{
									"fileName": "wallet/app.service.ts",
									"line": 191,
									"character": 8,
									"url": "https://github.com/MeshJS/mesh/blob/1cc00f9/packages/module/src/wallet/app.service.ts#L191"
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Promise"
								},
								"typeArguments": [
									{
										"type": "array",
										"elementType": {
											"type": "intrinsic",
											"name": "string"
										}
									}
								],
								"name": "Promise",
								"package": "typescript"
							}
						}
					]
				},
				{
					"id": 1198,
					"name": "getUsedCollateral",
					"variant": "declaration",
					"kind": 2048,
					"flags": {},
					"sources": [
						{
							"fileName": "wallet/app.service.ts",
							"line": 95,
							"character": 2,
							"url": "https://github.com/MeshJS/mesh/blob/1cc00f9/packages/module/src/wallet/app.service.ts#L95"
						}
					],
					"signatures": [
						{
							"id": 1199,
							"name": "getUsedCollateral",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"sources": [
								{
									"fileName": "wallet/app.service.ts",
									"line": 95,
									"character": 2,
									"url": "https://github.com/MeshJS/mesh/blob/1cc00f9/packages/module/src/wallet/app.service.ts#L95"
								}
							],
							"parameters": [
								{
									"id": 1200,
									"name": "_limit",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "number"
									},
									"defaultValue": "DEFAULT_PROTOCOL_PARAMETERS.maxCollateralInputs"
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Promise"
								},
								"typeArguments": [
									{
										"type": "array",
										"elementType": {
											"type": "reference",
											"target": {
												"sourceFileName": "../../node_modules/@sidan-lab/sidan-csl-rs-nodejs/sidan_csl_rs.d.ts",
												"qualifiedName": "TransactionUnspentOutput"
											},
											"name": "TransactionUnspentOutput",
											"package": "@sidan-lab/sidan-csl-rs-nodejs"
										}
									}
								],
								"name": "Promise",
								"package": "typescript"
							},
							"implementationOf": {
								"type": "reference",
								"target": 60,
								"name": "IInitiator.getUsedCollateral"
							}
						}
					],
					"implementationOf": {
						"type": "reference",
						"target": 59,
						"name": "IInitiator.getUsedCollateral"
					}
				},
				{
					"id": 1201,
					"name": "getUsedUTxOs",
					"variant": "declaration",
					"kind": 2048,
					"flags": {},
					"sources": [
						{
							"fileName": "wallet/app.service.ts",
							"line": 101,
							"character": 8,
							"url": "https://github.com/MeshJS/mesh/blob/1cc00f9/packages/module/src/wallet/app.service.ts#L101"
						}
					],
					"signatures": [
						{
							"id": 1202,
							"name": "getUsedUTxOs",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"sources": [
								{
									"fileName": "wallet/app.service.ts",
									"line": 101,
									"character": 8,
									"url": "https://github.com/MeshJS/mesh/blob/1cc00f9/packages/module/src/wallet/app.service.ts#L101"
								}
							],
							"parameters": [
								{
									"id": 1203,
									"name": "accountIndex",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "number"
									},
									"defaultValue": "0"
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Promise"
								},
								"typeArguments": [
									{
										"type": "array",
										"elementType": {
											"type": "reference",
											"target": {
												"sourceFileName": "../../node_modules/@sidan-lab/sidan-csl-rs-nodejs/sidan_csl_rs.d.ts",
												"qualifiedName": "TransactionUnspentOutput"
											},
											"name": "TransactionUnspentOutput",
											"package": "@sidan-lab/sidan-csl-rs-nodejs"
										}
									}
								],
								"name": "Promise",
								"package": "typescript"
							},
							"implementationOf": {
								"type": "reference",
								"target": 63,
								"name": "IInitiator.getUsedUTxOs"
							}
						}
					],
					"implementationOf": {
						"type": "reference",
						"target": 62,
						"name": "IInitiator.getUsedUTxOs"
					}
				},
				{
					"id": 1221,
					"name": "getUtxos",
					"variant": "declaration",
					"kind": 2048,
					"flags": {},
					"sources": [
						{
							"fileName": "wallet/app.service.ts",
							"line": 183,
							"character": 8,
							"url": "https://github.com/MeshJS/mesh/blob/1cc00f9/packages/module/src/wallet/app.service.ts#L183"
						}
					],
					"signatures": [
						{
							"id": 1222,
							"name": "getUtxos",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "development: browser wallets apis"
									}
								]
							},
							"sources": [
								{
									"fileName": "wallet/app.service.ts",
									"line": 183,
									"character": 8,
									"url": "https://github.com/MeshJS/mesh/blob/1cc00f9/packages/module/src/wallet/app.service.ts#L183"
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Promise"
								},
								"typeArguments": [
									{
										"type": "array",
										"elementType": {
											"type": "reference",
											"target": {
												"sourceFileName": "../../node_modules/@sidan-lab/sidan-csl-rs-nodejs/sidan_csl_rs.d.ts",
												"qualifiedName": "TransactionUnspentOutput"
											},
											"name": "TransactionUnspentOutput",
											"package": "@sidan-lab/sidan-csl-rs-nodejs"
										}
									}
								],
								"name": "Promise",
								"package": "typescript"
							}
						}
					]
				},
				{
					"id": 1204,
					"name": "signData",
					"variant": "declaration",
					"kind": 2048,
					"flags": {},
					"sources": [
						{
							"fileName": "wallet/app.service.ts",
							"line": 110,
							"character": 2,
							"url": "https://github.com/MeshJS/mesh/blob/1cc00f9/packages/module/src/wallet/app.service.ts#L110"
						}
					],
					"signatures": [
						{
							"id": 1205,
							"name": "signData",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"sources": [
								{
									"fileName": "wallet/app.service.ts",
									"line": 110,
									"character": 2,
									"url": "https://github.com/MeshJS/mesh/blob/1cc00f9/packages/module/src/wallet/app.service.ts#L110"
								}
							],
							"parameters": [
								{
									"id": 1206,
									"name": "address",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 1207,
									"name": "payload",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 1208,
									"name": "accountIndex",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "number"
									},
									"defaultValue": "0"
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "src/types/DataSignature.ts",
									"qualifiedName": "DataSignature"
								},
								"name": "DataSignature",
								"package": "@meshsdk/core"
							},
							"implementationOf": {
								"type": "reference",
								"target": 74,
								"name": "ISigner.signData"
							}
						}
					],
					"implementationOf": {
						"type": "reference",
						"target": 73,
						"name": "ISigner.signData"
					}
				},
				{
					"id": 1209,
					"name": "signTx",
					"variant": "declaration",
					"kind": 2048,
					"flags": {},
					"sources": [
						{
							"fileName": "wallet/app.service.ts",
							"line": 125,
							"character": 8,
							"url": "https://github.com/MeshJS/mesh/blob/1cc00f9/packages/module/src/wallet/app.service.ts#L125"
						}
					],
					"signatures": [
						{
							"id": 1210,
							"name": "signTx",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"sources": [
								{
									"fileName": "wallet/app.service.ts",
									"line": 125,
									"character": 8,
									"url": "https://github.com/MeshJS/mesh/blob/1cc00f9/packages/module/src/wallet/app.service.ts#L125"
								}
							],
							"parameters": [
								{
									"id": 1211,
									"name": "unsignedTx",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 1212,
									"name": "partialSign",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "boolean"
									},
									"defaultValue": "false"
								},
								{
									"id": 1213,
									"name": "accountIndex",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "number"
									},
									"defaultValue": "0"
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Promise"
								},
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "string"
									}
								],
								"name": "Promise",
								"package": "typescript"
							},
							"implementationOf": {
								"type": "reference",
								"target": 78,
								"name": "ISigner.signTx"
							}
						}
					],
					"implementationOf": {
						"type": "reference",
						"target": 77,
						"name": "ISigner.signTx"
					}
				},
				{
					"id": 1214,
					"name": "signTxs",
					"variant": "declaration",
					"kind": 2048,
					"flags": {},
					"sources": [
						{
							"fileName": "wallet/app.service.ts",
							"line": 163,
							"character": 8,
							"url": "https://github.com/MeshJS/mesh/blob/1cc00f9/packages/module/src/wallet/app.service.ts#L163"
						}
					],
					"signatures": [
						{
							"id": 1215,
							"name": "signTxs",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"sources": [
								{
									"fileName": "wallet/app.service.ts",
									"line": 163,
									"character": 8,
									"url": "https://github.com/MeshJS/mesh/blob/1cc00f9/packages/module/src/wallet/app.service.ts#L163"
								}
							],
							"parameters": [
								{
									"id": 1216,
									"name": "unsignedTxs",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"type": {
										"type": "array",
										"elementType": {
											"type": "intrinsic",
											"name": "string"
										}
									}
								},
								{
									"id": 1217,
									"name": "partialSign",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "boolean"
									}
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Promise"
								},
								"typeArguments": [
									{
										"type": "array",
										"elementType": {
											"type": "intrinsic",
											"name": "string"
										}
									}
								],
								"name": "Promise",
								"package": "typescript"
							},
							"implementationOf": {
								"type": "reference",
								"target": 82,
								"name": "ISigner.signTxs"
							}
						}
					],
					"implementationOf": {
						"type": "reference",
						"target": 81,
						"name": "ISigner.signTxs"
					}
				},
				{
					"id": 1218,
					"name": "submitTx",
					"variant": "declaration",
					"kind": 2048,
					"flags": {},
					"sources": [
						{
							"fileName": "wallet/app.service.ts",
							"line": 171,
							"character": 2,
							"url": "https://github.com/MeshJS/mesh/blob/1cc00f9/packages/module/src/wallet/app.service.ts#L171"
						}
					],
					"signatures": [
						{
							"id": 1219,
							"name": "submitTx",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"sources": [
								{
									"fileName": "wallet/app.service.ts",
									"line": 171,
									"character": 2,
									"url": "https://github.com/MeshJS/mesh/blob/1cc00f9/packages/module/src/wallet/app.service.ts#L171"
								}
							],
							"parameters": [
								{
									"id": 1220,
									"name": "tx",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Promise"
								},
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "string"
									}
								],
								"name": "Promise",
								"package": "typescript"
							},
							"implementationOf": {
								"type": "reference",
								"target": 87,
								"name": "ISubmitter.submitTx"
							}
						}
					],
					"implementationOf": {
						"type": "reference",
						"target": 86,
						"name": "ISubmitter.submitTx"
					}
				},
				{
					"id": 1177,
					"name": "brew",
					"variant": "declaration",
					"kind": 2048,
					"flags": {
						"isStatic": true
					},
					"sources": [
						{
							"fileName": "wallet/app.service.ts",
							"line": 175,
							"character": 9,
							"url": "https://github.com/MeshJS/mesh/blob/1cc00f9/packages/module/src/wallet/app.service.ts#L175"
						}
					],
					"signatures": [
						{
							"id": 1178,
							"name": "brew",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"sources": [
								{
									"fileName": "wallet/app.service.ts",
									"line": 175,
									"character": 9,
									"url": "https://github.com/MeshJS/mesh/blob/1cc00f9/packages/module/src/wallet/app.service.ts#L175"
								}
							],
							"parameters": [
								{
									"id": 1179,
									"name": "strength",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "number"
									},
									"defaultValue": "256"
								}
							],
							"type": {
								"type": "array",
								"elementType": {
									"type": "intrinsic",
									"name": "string"
								}
							}
						}
					]
				}
			],
			"groups": [
				{
					"title": "Constructors",
					"children": [
						1180
					]
				},
				{
					"title": "Properties",
					"children": [
						1183,
						1184,
						1185
					]
				},
				{
					"title": "Methods",
					"children": [
						1186,
						1223,
						1189,
						1192,
						1195,
						1225,
						1198,
						1201,
						1221,
						1204,
						1209,
						1214,
						1218,
						1177
					]
				}
			],
			"sources": [
				{
					"fileName": "wallet/app.service.ts",
					"line": 41,
					"character": 13,
					"url": "https://github.com/MeshJS/mesh/blob/1cc00f9/packages/module/src/wallet/app.service.ts#L41"
				}
			],
			"implementedTypes": [
				{
					"type": "reference",
					"target": 56,
					"name": "IInitiator",
					"package": "@meshsdk/core"
				},
				{
					"type": "reference",
					"target": 72,
					"name": "ISigner",
					"package": "@meshsdk/core"
				},
				{
					"type": "reference",
					"target": 85,
					"name": "ISubmitter",
					"package": "@meshsdk/core"
				}
			]
		},
		{
			"id": 349,
			"name": "BlockfrostProvider",
			"variant": "declaration",
			"kind": 128,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "[Blockfrost](https://blockfrost.io/) provides restful APIs which allows your app to access information stored on the blockchain.\n\nGet started:\n"
					},
					{
						"kind": "code",
						"text": "```ts\nconst blockfrostProvider = new BlockfrostProvider('<BLOCKFROST_API_KEY>');\n```"
					}
				]
			},
			"children": [
				{
					"id": 350,
					"name": "constructor",
					"variant": "declaration",
					"kind": 512,
					"flags": {},
					"sources": [
						{
							"fileName": "providers/blockfrost.provider.ts",
							"line": 39,
							"character": 2,
							"url": "https://github.com/MeshJS/mesh/blob/1cc00f9/packages/module/src/providers/blockfrost.provider.ts#L39"
						},
						{
							"fileName": "providers/blockfrost.provider.ts",
							"line": 46,
							"character": 2,
							"url": "https://github.com/MeshJS/mesh/blob/1cc00f9/packages/module/src/providers/blockfrost.provider.ts#L46"
						},
						{
							"fileName": "providers/blockfrost.provider.ts",
							"line": 48,
							"character": 2,
							"url": "https://github.com/MeshJS/mesh/blob/1cc00f9/packages/module/src/providers/blockfrost.provider.ts#L48"
						}
					],
					"signatures": [
						{
							"id": 351,
							"name": "new BlockfrostProvider",
							"variant": "signature",
							"kind": 16384,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "If you are using a privately hosted Blockfrost instance, you can set the URL in the parameter."
									}
								]
							},
							"sources": [
								{
									"fileName": "providers/blockfrost.provider.ts",
									"line": 39,
									"character": 2,
									"url": "https://github.com/MeshJS/mesh/blob/1cc00f9/packages/module/src/providers/blockfrost.provider.ts#L39"
								}
							],
							"parameters": [
								{
									"id": 352,
									"name": "baseUrl",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The base URL of the instance."
											}
										]
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								}
							],
							"type": {
								"type": "reference",
								"target": 349,
								"name": "BlockfrostProvider",
								"package": "@meshsdk/core"
							}
						},
						{
							"id": 353,
							"name": "new BlockfrostProvider",
							"variant": "signature",
							"kind": 16384,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "If you are using [Blockfrost](https://blockfrost.io/) hosted instance, you can set the project ID in the parameter."
									}
								]
							},
							"sources": [
								{
									"fileName": "providers/blockfrost.provider.ts",
									"line": 46,
									"character": 2,
									"url": "https://github.com/MeshJS/mesh/blob/1cc00f9/packages/module/src/providers/blockfrost.provider.ts#L46"
								}
							],
							"parameters": [
								{
									"id": 354,
									"name": "projectId",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The project ID of the instance."
											}
										]
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 355,
									"name": "version",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The version of the API. Default is 0."
											}
										]
									},
									"type": {
										"type": "intrinsic",
										"name": "number"
									}
								}
							],
							"type": {
								"type": "reference",
								"target": 349,
								"name": "BlockfrostProvider",
								"package": "@meshsdk/core"
							}
						}
					]
				},
				{
					"id": 356,
					"name": "_axiosInstance",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isPrivate": true,
						"isReadonly": true
					},
					"sources": [
						{
							"fileName": "providers/blockfrost.provider.ts",
							"line": 33,
							"character": 19,
							"url": "https://github.com/MeshJS/mesh/blob/1cc00f9/packages/module/src/providers/blockfrost.provider.ts#L33"
						}
					],
					"type": {
						"type": "reference",
						"target": {
							"sourceFileName": "../../node_modules/axios/index.d.ts",
							"qualifiedName": "AxiosInstance"
						},
						"name": "AxiosInstance",
						"package": "axios"
					}
				},
				{
					"id": 357,
					"name": "fetchAccountInfo",
					"variant": "declaration",
					"kind": 2048,
					"flags": {},
					"sources": [
						{
							"fileName": "providers/blockfrost.provider.ts",
							"line": 63,
							"character": 8,
							"url": "https://github.com/MeshJS/mesh/blob/1cc00f9/packages/module/src/providers/blockfrost.provider.ts#L63"
						}
					],
					"signatures": [
						{
							"id": 358,
							"name": "fetchAccountInfo",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"sources": [
								{
									"fileName": "providers/blockfrost.provider.ts",
									"line": 63,
									"character": 8,
									"url": "https://github.com/MeshJS/mesh/blob/1cc00f9/packages/module/src/providers/blockfrost.provider.ts#L63"
								}
							],
							"parameters": [
								{
									"id": 359,
									"name": "address",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Promise"
								},
								"typeArguments": [
									{
										"type": "reference",
										"target": {
											"sourceFileName": "src/types/AccountInfo.ts",
											"qualifiedName": "AccountInfo"
										},
										"name": "AccountInfo",
										"package": "@meshsdk/core"
									}
								],
								"name": "Promise",
								"package": "typescript"
							},
							"implementationOf": {
								"type": "reference",
								"target": 19,
								"name": "IFetcher.fetchAccountInfo"
							}
						}
					],
					"implementationOf": {
						"type": "reference",
						"target": 18,
						"name": "IFetcher.fetchAccountInfo"
					}
				},
				{
					"id": 367,
					"name": "fetchAddressUTxOs",
					"variant": "declaration",
					"kind": 2048,
					"flags": {},
					"sources": [
						{
							"fileName": "providers/blockfrost.provider.ts",
							"line": 131,
							"character": 8,
							"url": "https://github.com/MeshJS/mesh/blob/1cc00f9/packages/module/src/providers/blockfrost.provider.ts#L131"
						}
					],
					"signatures": [
						{
							"id": 368,
							"name": "fetchAddressUTxOs",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"sources": [
								{
									"fileName": "providers/blockfrost.provider.ts",
									"line": 131,
									"character": 8,
									"url": "https://github.com/MeshJS/mesh/blob/1cc00f9/packages/module/src/providers/blockfrost.provider.ts#L131"
								}
							],
							"parameters": [
								{
									"id": 369,
									"name": "address",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 370,
									"name": "asset",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Promise"
								},
								"typeArguments": [
									{
										"type": "array",
										"elementType": {
											"type": "reference",
											"target": {
												"sourceFileName": "src/types/UTxO.ts",
												"qualifiedName": "UTxO"
											},
											"name": "UTxO",
											"package": "@meshsdk/core"
										}
									}
								],
								"name": "Promise",
								"package": "typescript"
							},
							"implementationOf": {
								"type": "reference",
								"target": 22,
								"name": "IFetcher.fetchAddressUTxOs"
							}
						}
					],
					"implementationOf": {
						"type": "reference",
						"target": 21,
						"name": "IFetcher.fetchAddressUTxOs"
					}
				},
				{
					"id": 371,
					"name": "fetchAssetAddresses",
					"variant": "declaration",
					"kind": 2048,
					"flags": {},
					"sources": [
						{
							"fileName": "providers/blockfrost.provider.ts",
							"line": 163,
							"character": 8,
							"url": "https://github.com/MeshJS/mesh/blob/1cc00f9/packages/module/src/providers/blockfrost.provider.ts#L163"
						}
					],
					"signatures": [
						{
							"id": 372,
							"name": "fetchAssetAddresses",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"sources": [
								{
									"fileName": "providers/blockfrost.provider.ts",
									"line": 163,
									"character": 8,
									"url": "https://github.com/MeshJS/mesh/blob/1cc00f9/packages/module/src/providers/blockfrost.provider.ts#L163"
								}
							],
							"parameters": [
								{
									"id": 373,
									"name": "asset",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Promise"
								},
								"typeArguments": [
									{
										"type": "array",
										"elementType": {
											"type": "reflection",
											"declaration": {
												"id": 374,
												"name": "__type",
												"variant": "declaration",
												"kind": 65536,
												"flags": {},
												"children": [
													{
														"id": 375,
														"name": "address",
														"variant": "declaration",
														"kind": 1024,
														"flags": {},
														"sources": [
															{
																"fileName": "providers/blockfrost.provider.ts",
																"line": 165,
																"character": 15,
																"url": "https://github.com/MeshJS/mesh/blob/1cc00f9/packages/module/src/providers/blockfrost.provider.ts#L165"
															}
														],
														"type": {
															"type": "intrinsic",
															"name": "string"
														}
													},
													{
														"id": 376,
														"name": "quantity",
														"variant": "declaration",
														"kind": 1024,
														"flags": {},
														"sources": [
															{
																"fileName": "providers/blockfrost.provider.ts",
																"line": 165,
																"character": 32,
																"url": "https://github.com/MeshJS/mesh/blob/1cc00f9/packages/module/src/providers/blockfrost.provider.ts#L165"
															}
														],
														"type": {
															"type": "intrinsic",
															"name": "string"
														}
													}
												],
												"groups": [
													{
														"title": "Properties",
														"children": [
															375,
															376
														]
													}
												],
												"sources": [
													{
														"fileName": "providers/blockfrost.provider.ts",
														"line": 165,
														"character": 13,
														"url": "https://github.com/MeshJS/mesh/blob/1cc00f9/packages/module/src/providers/blockfrost.provider.ts#L165"
													}
												]
											}
										}
									}
								],
								"name": "Promise",
								"package": "typescript"
							},
							"implementationOf": {
								"type": "reference",
								"target": 26,
								"name": "IFetcher.fetchAssetAddresses"
							}
						}
					],
					"implementationOf": {
						"type": "reference",
						"target": 25,
						"name": "IFetcher.fetchAssetAddresses"
					}
				},
				{
					"id": 377,
					"name": "fetchAssetMetadata",
					"variant": "declaration",
					"kind": 2048,
					"flags": {},
					"sources": [
						{
							"fileName": "providers/blockfrost.provider.ts",
							"line": 190,
							"character": 8,
							"url": "https://github.com/MeshJS/mesh/blob/1cc00f9/packages/module/src/providers/blockfrost.provider.ts#L190"
						}
					],
					"signatures": [
						{
							"id": 378,
							"name": "fetchAssetMetadata",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"sources": [
								{
									"fileName": "providers/blockfrost.provider.ts",
									"line": 190,
									"character": 8,
									"url": "https://github.com/MeshJS/mesh/blob/1cc00f9/packages/module/src/providers/blockfrost.provider.ts#L190"
								}
							],
							"parameters": [
								{
									"id": 379,
									"name": "asset",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Promise"
								},
								"typeArguments": [
									{
										"type": "reference",
										"target": {
											"sourceFileName": "src/types/AssetMetadata.ts",
											"qualifiedName": "AssetMetadata"
										},
										"name": "AssetMetadata",
										"package": "@meshsdk/core"
									}
								],
								"name": "Promise",
								"package": "typescript"
							},
							"implementationOf": {
								"type": "reference",
								"target": 32,
								"name": "IFetcher.fetchAssetMetadata"
							}
						}
					],
					"implementationOf": {
						"type": "reference",
						"target": 31,
						"name": "IFetcher.fetchAssetMetadata"
					}
				},
				{
					"id": 380,
					"name": "fetchBlockInfo",
					"variant": "declaration",
					"kind": 2048,
					"flags": {},
					"sources": [
						{
							"fileName": "providers/blockfrost.provider.ts",
							"line": 208,
							"character": 8,
							"url": "https://github.com/MeshJS/mesh/blob/1cc00f9/packages/module/src/providers/blockfrost.provider.ts#L208"
						}
					],
					"signatures": [
						{
							"id": 381,
							"name": "fetchBlockInfo",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"sources": [
								{
									"fileName": "providers/blockfrost.provider.ts",
									"line": 208,
									"character": 8,
									"url": "https://github.com/MeshJS/mesh/blob/1cc00f9/packages/module/src/providers/blockfrost.provider.ts#L208"
								}
							],
							"parameters": [
								{
									"id": 382,
									"name": "hash",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Promise"
								},
								"typeArguments": [
									{
										"type": "reference",
										"target": {
											"sourceFileName": "src/types/BlockInfo.ts",
											"qualifiedName": "BlockInfo"
										},
										"name": "BlockInfo",
										"package": "@meshsdk/core"
									}
								],
								"name": "Promise",
								"package": "typescript"
							},
							"implementationOf": {
								"type": "reference",
								"target": 35,
								"name": "IFetcher.fetchBlockInfo"
							}
						}
					],
					"implementationOf": {
						"type": "reference",
						"target": 34,
						"name": "IFetcher.fetchBlockInfo"
					}
				},
				{
					"id": 383,
					"name": "fetchCollectionAssets",
					"variant": "declaration",
					"kind": 2048,
					"flags": {},
					"sources": [
						{
							"fileName": "providers/blockfrost.provider.ts",
							"line": 237,
							"character": 8,
							"url": "https://github.com/MeshJS/mesh/blob/1cc00f9/packages/module/src/providers/blockfrost.provider.ts#L237"
						}
					],
					"signatures": [
						{
							"id": 384,
							"name": "fetchCollectionAssets",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"sources": [
								{
									"fileName": "providers/blockfrost.provider.ts",
									"line": 237,
									"character": 8,
									"url": "https://github.com/MeshJS/mesh/blob/1cc00f9/packages/module/src/providers/blockfrost.provider.ts#L237"
								}
							],
							"parameters": [
								{
									"id": 385,
									"name": "policyId",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 386,
									"name": "cursor",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "number"
									},
									"defaultValue": "1"
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Promise"
								},
								"typeArguments": [
									{
										"type": "reflection",
										"declaration": {
											"id": 387,
											"name": "__type",
											"variant": "declaration",
											"kind": 65536,
											"flags": {},
											"children": [
												{
													"id": 388,
													"name": "assets",
													"variant": "declaration",
													"kind": 1024,
													"flags": {},
													"sources": [
														{
															"fileName": "providers/blockfrost.provider.ts",
															"line": 240,
															"character": 15,
															"url": "https://github.com/MeshJS/mesh/blob/1cc00f9/packages/module/src/providers/blockfrost.provider.ts#L240"
														}
													],
													"type": {
														"type": "array",
														"elementType": {
															"type": "reference",
															"target": {
																"sourceFileName": "src/types/Asset.ts",
																"qualifiedName": "Asset"
															},
															"name": "Asset",
															"package": "@meshsdk/core"
														}
													}
												},
												{
													"id": 389,
													"name": "next",
													"variant": "declaration",
													"kind": 1024,
													"flags": {},
													"sources": [
														{
															"fileName": "providers/blockfrost.provider.ts",
															"line": 240,
															"character": 32,
															"url": "https://github.com/MeshJS/mesh/blob/1cc00f9/packages/module/src/providers/blockfrost.provider.ts#L240"
														}
													],
													"type": {
														"type": "union",
														"types": [
															{
																"type": "literal",
																"value": null
															},
															{
																"type": "intrinsic",
																"name": "string"
															},
															{
																"type": "intrinsic",
																"name": "number"
															}
														]
													}
												}
											],
											"groups": [
												{
													"title": "Properties",
													"children": [
														388,
														389
													]
												}
											],
											"sources": [
												{
													"fileName": "providers/blockfrost.provider.ts",
													"line": 240,
													"character": 13,
													"url": "https://github.com/MeshJS/mesh/blob/1cc00f9/packages/module/src/providers/blockfrost.provider.ts#L240"
												}
											]
										}
									}
								],
								"name": "Promise",
								"package": "typescript"
							},
							"implementationOf": {
								"type": "reference",
								"target": 38,
								"name": "IFetcher.fetchCollectionAssets"
							}
						}
					],
					"implementationOf": {
						"type": "reference",
						"target": 37,
						"name": "IFetcher.fetchCollectionAssets"
					}
				},
				{
					"id": 390,
					"name": "fetchHandleAddress",
					"variant": "declaration",
					"kind": 2048,
					"flags": {},
					"sources": [
						{
							"fileName": "providers/blockfrost.provider.ts",
							"line": 261,
							"character": 8,
							"url": "https://github.com/MeshJS/mesh/blob/1cc00f9/packages/module/src/providers/blockfrost.provider.ts#L261"
						}
					],
					"signatures": [
						{
							"id": 391,
							"name": "fetchHandleAddress",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"sources": [
								{
									"fileName": "providers/blockfrost.provider.ts",
									"line": 261,
									"character": 8,
									"url": "https://github.com/MeshJS/mesh/blob/1cc00f9/packages/module/src/providers/blockfrost.provider.ts#L261"
								}
							],
							"parameters": [
								{
									"id": 392,
									"name": "handle",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Promise"
								},
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "string"
									}
								],
								"name": "Promise",
								"package": "typescript"
							},
							"implementationOf": {
								"type": "reference",
								"target": 45,
								"name": "IFetcher.fetchHandleAddress"
							}
						}
					],
					"implementationOf": {
						"type": "reference",
						"target": 44,
						"name": "IFetcher.fetchHandleAddress"
					}
				},
				{
					"id": 415,
					"name": "fetchNativeScriptJSON",
					"variant": "declaration",
					"kind": 2048,
					"flags": {
						"isPrivate": true
					},
					"sources": [
						{
							"fileName": "providers/blockfrost.provider.ts",
							"line": 407,
							"character": 16,
							"url": "https://github.com/MeshJS/mesh/blob/1cc00f9/packages/module/src/providers/blockfrost.provider.ts#L407"
						}
					],
					"signatures": [
						{
							"id": 416,
							"name": "fetchNativeScriptJSON",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"sources": [
								{
									"fileName": "providers/blockfrost.provider.ts",
									"line": 407,
									"character": 16,
									"url": "https://github.com/MeshJS/mesh/blob/1cc00f9/packages/module/src/providers/blockfrost.provider.ts#L407"
								}
							],
							"parameters": [
								{
									"id": 417,
									"name": "scriptHash",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Promise"
								},
								"typeArguments": [
									{
										"type": "reference",
										"target": {
											"sourceFileName": "src/types/NativeScript.ts",
											"qualifiedName": "NativeScript"
										},
										"name": "NativeScript",
										"package": "@meshsdk/core"
									}
								],
								"name": "Promise",
								"package": "typescript"
							}
						}
					]
				},
				{
					"id": 412,
					"name": "fetchPlutusScriptCBOR",
					"variant": "declaration",
					"kind": 2048,
					"flags": {
						"isPrivate": true
					},
					"sources": [
						{
							"fileName": "providers/blockfrost.provider.ts",
							"line": 397,
							"character": 16,
							"url": "https://github.com/MeshJS/mesh/blob/1cc00f9/packages/module/src/providers/blockfrost.provider.ts#L397"
						}
					],
					"signatures": [
						{
							"id": 413,
							"name": "fetchPlutusScriptCBOR",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"sources": [
								{
									"fileName": "providers/blockfrost.provider.ts",
									"line": 397,
									"character": 16,
									"url": "https://github.com/MeshJS/mesh/blob/1cc00f9/packages/module/src/providers/blockfrost.provider.ts#L397"
								}
							],
							"parameters": [
								{
									"id": 414,
									"name": "scriptHash",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Promise"
								},
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "string"
									}
								],
								"name": "Promise",
								"package": "typescript"
							}
						}
					]
				},
				{
					"id": 393,
					"name": "fetchProtocolParameters",
					"variant": "declaration",
					"kind": 2048,
					"flags": {},
					"sources": [
						{
							"fileName": "providers/blockfrost.provider.ts",
							"line": 276,
							"character": 8,
							"url": "https://github.com/MeshJS/mesh/blob/1cc00f9/packages/module/src/providers/blockfrost.provider.ts#L276"
						}
					],
					"signatures": [
						{
							"id": 394,
							"name": "fetchProtocolParameters",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"sources": [
								{
									"fileName": "providers/blockfrost.provider.ts",
									"line": 276,
									"character": 8,
									"url": "https://github.com/MeshJS/mesh/blob/1cc00f9/packages/module/src/providers/blockfrost.provider.ts#L276"
								}
							],
							"parameters": [
								{
									"id": 395,
									"name": "epoch",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "number"
									},
									"defaultValue": "Number.NaN"
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Promise"
								},
								"typeArguments": [
									{
										"type": "reference",
										"target": {
											"sourceFileName": "src/types/Protocol.ts",
											"qualifiedName": "Protocol"
										},
										"name": "Protocol",
										"package": "@meshsdk/core"
									}
								],
								"name": "Promise",
								"package": "typescript"
							},
							"implementationOf": {
								"type": "reference",
								"target": 48,
								"name": "IFetcher.fetchProtocolParameters"
							}
						}
					],
					"implementationOf": {
						"type": "reference",
						"target": 47,
						"name": "IFetcher.fetchProtocolParameters"
					}
				},
				{
					"id": 396,
					"name": "fetchTxInfo",
					"variant": "declaration",
					"kind": 2048,
					"flags": {},
					"sources": [
						{
							"fileName": "providers/blockfrost.provider.ts",
							"line": 312,
							"character": 8,
							"url": "https://github.com/MeshJS/mesh/blob/1cc00f9/packages/module/src/providers/blockfrost.provider.ts#L312"
						}
					],
					"signatures": [
						{
							"id": 397,
							"name": "fetchTxInfo",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"sources": [
								{
									"fileName": "providers/blockfrost.provider.ts",
									"line": 312,
									"character": 8,
									"url": "https://github.com/MeshJS/mesh/blob/1cc00f9/packages/module/src/providers/blockfrost.provider.ts#L312"
								}
							],
							"parameters": [
								{
									"id": 398,
									"name": "hash",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Promise"
								},
								"typeArguments": [
									{
										"type": "reference",
										"target": {
											"sourceFileName": "src/types/TransactionInfo.ts",
											"qualifiedName": "TransactionInfo"
										},
										"name": "TransactionInfo",
										"package": "@meshsdk/core"
									}
								],
								"name": "Promise",
								"package": "typescript"
							},
							"implementationOf": {
								"type": "reference",
								"target": 51,
								"name": "IFetcher.fetchTxInfo"
							}
						}
					],
					"implementationOf": {
						"type": "reference",
						"target": 50,
						"name": "IFetcher.fetchTxInfo"
					}
				},
				{
					"id": 399,
					"name": "fetchUTxOs",
					"variant": "declaration",
					"kind": 2048,
					"flags": {},
					"sources": [
						{
							"fileName": "providers/blockfrost.provider.ts",
							"line": 335,
							"character": 8,
							"url": "https://github.com/MeshJS/mesh/blob/1cc00f9/packages/module/src/providers/blockfrost.provider.ts#L335"
						}
					],
					"signatures": [
						{
							"id": 400,
							"name": "fetchUTxOs",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"sources": [
								{
									"fileName": "providers/blockfrost.provider.ts",
									"line": 335,
									"character": 8,
									"url": "https://github.com/MeshJS/mesh/blob/1cc00f9/packages/module/src/providers/blockfrost.provider.ts#L335"
								}
							],
							"parameters": [
								{
									"id": 401,
									"name": "hash",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Promise"
								},
								"typeArguments": [
									{
										"type": "array",
										"elementType": {
											"type": "reference",
											"target": {
												"sourceFileName": "src/types/UTxO.ts",
												"qualifiedName": "UTxO"
											},
											"name": "UTxO",
											"package": "@meshsdk/core"
										}
									}
								],
								"name": "Promise",
								"package": "typescript"
							},
							"implementationOf": {
								"type": "reference",
								"target": 54,
								"name": "IFetcher.fetchUTxOs"
							}
						}
					],
					"implementationOf": {
						"type": "reference",
						"target": 53,
						"name": "IFetcher.fetchUTxOs"
					}
				},
				{
					"id": 402,
					"name": "onTxConfirmed",
					"variant": "declaration",
					"kind": 2048,
					"flags": {},
					"sources": [
						{
							"fileName": "providers/blockfrost.provider.ts",
							"line": 355,
							"character": 2,
							"url": "https://github.com/MeshJS/mesh/blob/1cc00f9/packages/module/src/providers/blockfrost.provider.ts#L355"
						}
					],
					"signatures": [
						{
							"id": 403,
							"name": "onTxConfirmed",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"sources": [
								{
									"fileName": "providers/blockfrost.provider.ts",
									"line": 355,
									"character": 2,
									"url": "https://github.com/MeshJS/mesh/blob/1cc00f9/packages/module/src/providers/blockfrost.provider.ts#L355"
								}
							],
							"parameters": [
								{
									"id": 404,
									"name": "txHash",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 405,
									"name": "callback",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"type": {
										"type": "reflection",
										"declaration": {
											"id": 406,
											"name": "__type",
											"variant": "declaration",
											"kind": 65536,
											"flags": {},
											"sources": [
												{
													"fileName": "providers/blockfrost.provider.ts",
													"line": 355,
													"character": 42,
													"url": "https://github.com/MeshJS/mesh/blob/1cc00f9/packages/module/src/providers/blockfrost.provider.ts#L355"
												}
											],
											"signatures": [
												{
													"id": 407,
													"name": "__type",
													"variant": "signature",
													"kind": 4096,
													"flags": {},
													"sources": [
														{
															"fileName": "providers/blockfrost.provider.ts",
															"line": 355,
															"character": 42,
															"url": "https://github.com/MeshJS/mesh/blob/1cc00f9/packages/module/src/providers/blockfrost.provider.ts#L355"
														}
													],
													"type": {
														"type": "intrinsic",
														"name": "void"
													}
												}
											]
										}
									}
								},
								{
									"id": 408,
									"name": "limit",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "number"
									},
									"defaultValue": "100"
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "void"
							},
							"implementationOf": {
								"type": "reference",
								"target": 66,
								"name": "IListener.onTxConfirmed"
							}
						}
					],
					"implementationOf": {
						"type": "reference",
						"target": 65,
						"name": "IListener.onTxConfirmed"
					}
				},
				{
					"id": 360,
					"name": "resolveScriptRef",
					"variant": "declaration",
					"kind": 2048,
					"flags": {
						"isPrivate": true
					},
					"sources": [
						{
							"fileName": "providers/blockfrost.provider.ts",
							"line": 88,
							"character": 10,
							"url": "https://github.com/MeshJS/mesh/blob/1cc00f9/packages/module/src/providers/blockfrost.provider.ts#L88"
						}
					],
					"signatures": [
						{
							"id": 361,
							"name": "resolveScriptRef",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"sources": [
								{
									"fileName": "providers/blockfrost.provider.ts",
									"line": 88,
									"character": 29,
									"url": "https://github.com/MeshJS/mesh/blob/1cc00f9/packages/module/src/providers/blockfrost.provider.ts#L88"
								}
							],
							"parameters": [
								{
									"id": 362,
									"name": "scriptHash",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "any"
									}
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Promise"
								},
								"typeArguments": [
									{
										"type": "union",
										"types": [
											{
												"type": "intrinsic",
												"name": "undefined"
											},
											{
												"type": "intrinsic",
												"name": "string"
											}
										]
									}
								],
								"name": "Promise",
								"package": "typescript"
							}
						}
					]
				},
				{
					"id": 409,
					"name": "submitTx",
					"variant": "declaration",
					"kind": 2048,
					"flags": {},
					"sources": [
						{
							"fileName": "providers/blockfrost.provider.ts",
							"line": 380,
							"character": 8,
							"url": "https://github.com/MeshJS/mesh/blob/1cc00f9/packages/module/src/providers/blockfrost.provider.ts#L380"
						}
					],
					"signatures": [
						{
							"id": 410,
							"name": "submitTx",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"sources": [
								{
									"fileName": "providers/blockfrost.provider.ts",
									"line": 380,
									"character": 8,
									"url": "https://github.com/MeshJS/mesh/blob/1cc00f9/packages/module/src/providers/blockfrost.provider.ts#L380"
								}
							],
							"parameters": [
								{
									"id": 411,
									"name": "tx",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Promise"
								},
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "string"
									}
								],
								"name": "Promise",
								"package": "typescript"
							},
							"implementationOf": {
								"type": "reference",
								"target": 87,
								"name": "ISubmitter.submitTx"
							}
						}
					],
					"implementationOf": {
						"type": "reference",
						"target": 86,
						"name": "ISubmitter.submitTx"
					}
				},
				{
					"id": 363,
					"name": "toUTxO",
					"variant": "declaration",
					"kind": 2048,
					"flags": {
						"isPrivate": true
					},
					"sources": [
						{
							"fileName": "providers/blockfrost.provider.ts",
							"line": 113,
							"character": 10,
							"url": "https://github.com/MeshJS/mesh/blob/1cc00f9/packages/module/src/providers/blockfrost.provider.ts#L113"
						}
					],
					"signatures": [
						{
							"id": 364,
							"name": "toUTxO",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"sources": [
								{
									"fileName": "providers/blockfrost.provider.ts",
									"line": 113,
									"character": 19,
									"url": "https://github.com/MeshJS/mesh/blob/1cc00f9/packages/module/src/providers/blockfrost.provider.ts#L113"
								}
							],
							"parameters": [
								{
									"id": 365,
									"name": "bfUTxO",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "src/providers/blockfrost.provider.ts",
											"qualifiedName": "BlockfrostUTxO"
										},
										"name": "BlockfrostUTxO",
										"package": "@meshsdk/core"
									}
								},
								{
									"id": 366,
									"name": "tx_hash",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Promise"
								},
								"typeArguments": [
									{
										"type": "reference",
										"target": {
											"sourceFileName": "src/types/UTxO.ts",
											"qualifiedName": "UTxO"
										},
										"name": "UTxO",
										"package": "@meshsdk/core"
									}
								],
								"name": "Promise",
								"package": "typescript"
							}
						}
					]
				}
			],
			"groups": [
				{
					"title": "Constructors",
					"children": [
						350
					]
				},
				{
					"title": "Properties",
					"children": [
						356
					]
				},
				{
					"title": "Methods",
					"children": [
						357,
						367,
						371,
						377,
						380,
						383,
						390,
						415,
						412,
						393,
						396,
						399,
						402,
						360,
						409,
						363
					]
				}
			],
			"sources": [
				{
					"fileName": "providers/blockfrost.provider.ts",
					"line": 32,
					"character": 13,
					"url": "https://github.com/MeshJS/mesh/blob/1cc00f9/packages/module/src/providers/blockfrost.provider.ts#L32"
				}
			],
			"implementedTypes": [
				{
					"type": "reference",
					"target": 17,
					"name": "IFetcher",
					"package": "@meshsdk/core"
				},
				{
					"type": "reference",
					"target": 64,
					"name": "IListener",
					"package": "@meshsdk/core"
				},
				{
					"type": "reference",
					"target": 85,
					"name": "ISubmitter",
					"package": "@meshsdk/core"
				}
			]
		},
		{
			"id": 1227,
			"name": "BrowserWallet",
			"variant": "declaration",
			"kind": 128,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "These wallets APIs are in accordance to CIP-30, which defines the API for dApps to communicate with the user's wallet. Additional utility functions provided for developers that are useful for building dApps.\n\n"
					},
					{
						"kind": "code",
						"text": "```javascript\n// import BrowserWallet\nimport { BrowserWallet } from '@meshsdk/core';\n\n// connect to a wallet\nconst wallet = await BrowserWallet.enable('eternl');\n\n// get assets in wallet\nconst assets = await wallet.getAssets();\n```"
					}
				]
			},
			"children": [
				{
					"id": 1236,
					"name": "constructor",
					"variant": "declaration",
					"kind": 512,
					"flags": {
						"isPrivate": true
					},
					"sources": [
						{
							"fileName": "wallet/browser.service.ts",
							"line": 50,
							"character": 2,
							"url": "https://github.com/MeshJS/mesh/blob/1cc00f9/packages/module/src/wallet/browser.service.ts#L50"
						}
					],
					"signatures": [
						{
							"id": 1237,
							"name": "new BrowserWallet",
							"variant": "signature",
							"kind": 16384,
							"flags": {},
							"sources": [
								{
									"fileName": "wallet/browser.service.ts",
									"line": 50,
									"character": 2,
									"url": "https://github.com/MeshJS/mesh/blob/1cc00f9/packages/module/src/wallet/browser.service.ts#L50"
								}
							],
							"parameters": [
								{
									"id": 1238,
									"name": "_walletInstance",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "src/wallet/browser.service.ts",
											"qualifiedName": "WalletInstance"
										},
										"name": "WalletInstance",
										"package": "@meshsdk/core"
									}
								},
								{
									"id": 1239,
									"name": "_walletName",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								}
							],
							"type": {
								"type": "reference",
								"target": 1227,
								"name": "BrowserWallet",
								"package": "@meshsdk/core"
							}
						}
					]
				},
				{
					"id": 1241,
					"name": "_walletInstance",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isReadonly": true
					},
					"sources": [
						{
							"fileName": "wallet/browser.service.ts",
							"line": 51,
							"character": 13,
							"url": "https://github.com/MeshJS/mesh/blob/1cc00f9/packages/module/src/wallet/browser.service.ts#L51"
						}
					],
					"type": {
						"type": "reference",
						"target": {
							"sourceFileName": "src/wallet/browser.service.ts",
							"qualifiedName": "WalletInstance"
						},
						"name": "WalletInstance",
						"package": "@meshsdk/core"
					}
				},
				{
					"id": 1242,
					"name": "_walletName",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isReadonly": true
					},
					"sources": [
						{
							"fileName": "wallet/browser.service.ts",
							"line": 52,
							"character": 13,
							"url": "https://github.com/MeshJS/mesh/blob/1cc00f9/packages/module/src/wallet/browser.service.ts#L52"
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 1240,
					"name": "walletInstance",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"sources": [
						{
							"fileName": "wallet/browser.service.ts",
							"line": 48,
							"character": 2,
							"url": "https://github.com/MeshJS/mesh/blob/1cc00f9/packages/module/src/wallet/browser.service.ts#L48"
						}
					],
					"type": {
						"type": "reference",
						"target": {
							"sourceFileName": "src/wallet/browser.service.ts",
							"qualifiedName": "WalletInstance"
						},
						"name": "WalletInstance",
						"package": "@meshsdk/core"
					}
				},
				{
					"id": 1284,
					"name": "getAssets",
					"variant": "declaration",
					"kind": 2048,
					"flags": {},
					"sources": [
						{
							"fileName": "wallet/browser.service.ts",
							"line": 371,
							"character": 8,
							"url": "https://github.com/MeshJS/mesh/blob/1cc00f9/packages/module/src/wallet/browser.service.ts#L371"
						}
					],
					"signatures": [
						{
							"id": 1285,
							"name": "getAssets",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "A helper function to get the assets in the wallet."
									}
								],
								"blockTags": [
									{
										"tag": "@returns",
										"content": [
											{
												"kind": "text",
												"text": "a list of assets"
											}
										]
									}
								]
							},
							"sources": [
								{
									"fileName": "wallet/browser.service.ts",
									"line": 371,
									"character": 8,
									"url": "https://github.com/MeshJS/mesh/blob/1cc00f9/packages/module/src/wallet/browser.service.ts#L371"
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Promise"
								},
								"typeArguments": [
									{
										"type": "array",
										"elementType": {
											"type": "reference",
											"target": {
												"sourceFileName": "src/types/AssetExtended.ts",
												"qualifiedName": "AssetExtended"
											},
											"name": "AssetExtended",
											"package": "@meshsdk/core"
										}
									}
								],
								"name": "Promise",
								"package": "typescript"
							}
						}
					]
				},
				{
					"id": 1243,
					"name": "getBalance",
					"variant": "declaration",
					"kind": 2048,
					"flags": {},
					"sources": [
						{
							"fileName": "wallet/browser.service.ts",
							"line": 109,
							"character": 8,
							"url": "https://github.com/MeshJS/mesh/blob/1cc00f9/packages/module/src/wallet/browser.service.ts#L109"
						}
					],
					"signatures": [
						{
							"id": 1244,
							"name": "getBalance",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Returns a list of assets in the wallet. This API will return every assets in the wallet. Each asset is an object with the following properties:\n- A unit is provided to display asset's name on the user interface.\n- A quantity is provided to display asset's quantity on the user interface."
									}
								],
								"blockTags": [
									{
										"tag": "@returns",
										"content": [
											{
												"kind": "text",
												"text": "a list of assets and their quantities"
											}
										]
									}
								]
							},
							"sources": [
								{
									"fileName": "wallet/browser.service.ts",
									"line": 109,
									"character": 8,
									"url": "https://github.com/MeshJS/mesh/blob/1cc00f9/packages/module/src/wallet/browser.service.ts#L109"
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Promise"
								},
								"typeArguments": [
									{
										"type": "array",
										"elementType": {
											"type": "reference",
											"target": {
												"sourceFileName": "src/types/Asset.ts",
												"qualifiedName": "Asset"
											},
											"name": "Asset",
											"package": "@meshsdk/core"
										}
									}
								],
								"name": "Promise",
								"package": "typescript"
							}
						}
					]
				},
				{
					"id": 1245,
					"name": "getChangeAddress",
					"variant": "declaration",
					"kind": 2048,
					"flags": {},
					"sources": [
						{
							"fileName": "wallet/browser.service.ts",
							"line": 119,
							"character": 8,
							"url": "https://github.com/MeshJS/mesh/blob/1cc00f9/packages/module/src/wallet/browser.service.ts#L119"
						}
					],
					"signatures": [
						{
							"id": 1246,
							"name": "getChangeAddress",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Returns an address owned by the wallet that should be used as a change address to return leftover assets during transaction creation back to the connected wallet."
									}
								],
								"blockTags": [
									{
										"tag": "@returns",
										"content": [
											{
												"kind": "text",
												"text": "an address"
											}
										]
									}
								]
							},
							"sources": [
								{
									"fileName": "wallet/browser.service.ts",
									"line": 119,
									"character": 8,
									"url": "https://github.com/MeshJS/mesh/blob/1cc00f9/packages/module/src/wallet/browser.service.ts#L119"
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Promise"
								},
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "string"
									}
								],
								"name": "Promise",
								"package": "typescript"
							}
						}
					]
				},
				{
					"id": 1247,
					"name": "getCollateral",
					"variant": "declaration",
					"kind": 2048,
					"flags": {},
					"sources": [
						{
							"fileName": "wallet/browser.service.ts",
							"line": 132,
							"character": 8,
							"url": "https://github.com/MeshJS/mesh/blob/1cc00f9/packages/module/src/wallet/browser.service.ts#L132"
						}
					],
					"signatures": [
						{
							"id": 1248,
							"name": "getCollateral",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "This function shall return a list of one or more UTXOs (unspent transaction outputs) controlled by the wallet that are required to reach AT LEAST the combined ADA value target specified in amount AND the best suitable to be used as collateral inputs for transactions with plutus script inputs (pure ADA-only UTXOs).\n\nIf this cannot be attained, an error message with an explanation of the blocking problem shall be returned. NOTE: wallets are free to return UTXOs that add up to a greater total ADA value than requested in the amount parameter, but wallets must never return any result where UTXOs would sum up to a smaller total ADA value, instead in a case like that an error message must be returned."
									}
								],
								"blockTags": [
									{
										"tag": "@returns",
										"content": [
											{
												"kind": "text",
												"text": "a list of UTXOs"
											}
										]
									}
								]
							},
							"sources": [
								{
									"fileName": "wallet/browser.service.ts",
									"line": 132,
									"character": 8,
									"url": "https://github.com/MeshJS/mesh/blob/1cc00f9/packages/module/src/wallet/browser.service.ts#L132"
								}
							],
							"parameters": [
								{
									"id": 1249,
									"name": "limit",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "number"
									},
									"defaultValue": "DEFAULT_PROTOCOL_PARAMETERS.maxCollateralInputs"
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Promise"
								},
								"typeArguments": [
									{
										"type": "array",
										"elementType": {
											"type": "reference",
											"target": {
												"sourceFileName": "src/types/UTxO.ts",
												"qualifiedName": "UTxO"
											},
											"name": "UTxO",
											"package": "@meshsdk/core"
										}
									}
								],
								"name": "Promise",
								"package": "typescript"
							}
						}
					]
				},
				{
					"id": 1286,
					"name": "getLovelace",
					"variant": "declaration",
					"kind": 2048,
					"flags": {},
					"sources": [
						{
							"fileName": "wallet/browser.service.ts",
							"line": 395,
							"character": 8,
							"url": "https://github.com/MeshJS/mesh/blob/1cc00f9/packages/module/src/wallet/browser.service.ts#L395"
						}
					],
					"signatures": [
						{
							"id": 1287,
							"name": "getLovelace",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "A helper function to get the lovelace balance in the wallet."
									}
								],
								"blockTags": [
									{
										"tag": "@returns",
										"content": [
											{
												"kind": "text",
												"text": "lovelace balance"
											}
										]
									}
								]
							},
							"sources": [
								{
									"fileName": "wallet/browser.service.ts",
									"line": 395,
									"character": 8,
									"url": "https://github.com/MeshJS/mesh/blob/1cc00f9/packages/module/src/wallet/browser.service.ts#L395"
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Promise"
								},
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "string"
									}
								],
								"name": "Promise",
								"package": "typescript"
							}
						}
					]
				},
				{
					"id": 1250,
					"name": "getNetworkId",
					"variant": "declaration",
					"kind": 2048,
					"flags": {},
					"sources": [
						{
							"fileName": "wallet/browser.service.ts",
							"line": 144,
							"character": 2,
							"url": "https://github.com/MeshJS/mesh/blob/1cc00f9/packages/module/src/wallet/browser.service.ts#L144"
						}
					],
					"signatures": [
						{
							"id": 1251,
							"name": "getNetworkId",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Returns the network ID of the currently connected account. 0 is testnet and 1 is mainnet but other networks can possibly be returned by wallets. Those other network ID values are not governed by CIP-30. This result will stay the same unless the connected account has changed."
									}
								],
								"blockTags": [
									{
										"tag": "@returns",
										"content": [
											{
												"kind": "text",
												"text": "network ID"
											}
										]
									}
								]
							},
							"sources": [
								{
									"fileName": "wallet/browser.service.ts",
									"line": 144,
									"character": 2,
									"url": "https://github.com/MeshJS/mesh/blob/1cc00f9/packages/module/src/wallet/browser.service.ts#L144"
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Promise"
								},
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "number"
									}
								],
								"name": "Promise",
								"package": "typescript"
							}
						}
					]
				},
				{
					"id": 1288,
					"name": "getPolicyIdAssets",
					"variant": "declaration",
					"kind": 2048,
					"flags": {},
					"sources": [
						{
							"fileName": "wallet/browser.service.ts",
							"line": 408,
							"character": 8,
							"url": "https://github.com/MeshJS/mesh/blob/1cc00f9/packages/module/src/wallet/browser.service.ts#L408"
						}
					],
					"signatures": [
						{
							"id": 1289,
							"name": "getPolicyIdAssets",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "A helper function to get the assets of a specific policy ID in the wallet."
									}
								],
								"blockTags": [
									{
										"tag": "@returns",
										"content": [
											{
												"kind": "text",
												"text": "a list of assets"
											}
										]
									}
								]
							},
							"sources": [
								{
									"fileName": "wallet/browser.service.ts",
									"line": 408,
									"character": 8,
									"url": "https://github.com/MeshJS/mesh/blob/1cc00f9/packages/module/src/wallet/browser.service.ts#L408"
								}
							],
							"parameters": [
								{
									"id": 1290,
									"name": "policyId",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Promise"
								},
								"typeArguments": [
									{
										"type": "array",
										"elementType": {
											"type": "reference",
											"target": {
												"sourceFileName": "src/types/AssetExtended.ts",
												"qualifiedName": "AssetExtended"
											},
											"name": "AssetExtended",
											"package": "@meshsdk/core"
										}
									}
								],
								"name": "Promise",
								"package": "typescript"
							}
						}
					]
				},
				{
					"id": 1291,
					"name": "getPolicyIds",
					"variant": "declaration",
					"kind": 2048,
					"flags": {},
					"sources": [
						{
							"fileName": "wallet/browser.service.ts",
							"line": 418,
							"character": 8,
							"url": "https://github.com/MeshJS/mesh/blob/1cc00f9/packages/module/src/wallet/browser.service.ts#L418"
						}
					],
					"signatures": [
						{
							"id": 1292,
							"name": "getPolicyIds",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "A helper function to get the policy IDs of all the assets in the wallet."
									}
								],
								"blockTags": [
									{
										"tag": "@returns",
										"content": [
											{
												"kind": "text",
												"text": "a list of policy IDs"
											}
										]
									}
								]
							},
							"sources": [
								{
									"fileName": "wallet/browser.service.ts",
									"line": 418,
									"character": 8,
									"url": "https://github.com/MeshJS/mesh/blob/1cc00f9/packages/module/src/wallet/browser.service.ts#L418"
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Promise"
								},
								"typeArguments": [
									{
										"type": "array",
										"elementType": {
											"type": "intrinsic",
											"name": "string"
										}
									}
								],
								"name": "Promise",
								"package": "typescript"
							}
						}
					]
				},
				{
					"id": 1252,
					"name": "getRewardAddresses",
					"variant": "declaration",
					"kind": 2048,
					"flags": {},
					"sources": [
						{
							"fileName": "wallet/browser.service.ts",
							"line": 153,
							"character": 8,
							"url": "https://github.com/MeshJS/mesh/blob/1cc00f9/packages/module/src/wallet/browser.service.ts#L153"
						}
					],
					"signatures": [
						{
							"id": 1253,
							"name": "getRewardAddresses",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Returns a list of reward addresses owned by the wallet. A reward address is a stake address that is used to receive rewards from staking, generally starts from "
									},
									{
										"kind": "code",
										"text": "`stake`"
									},
									{
										"kind": "text",
										"text": " prefix."
									}
								],
								"blockTags": [
									{
										"tag": "@returns",
										"content": [
											{
												"kind": "text",
												"text": "a list of reward addresses"
											}
										]
									}
								]
							},
							"sources": [
								{
									"fileName": "wallet/browser.service.ts",
									"line": 153,
									"character": 8,
									"url": "https://github.com/MeshJS/mesh/blob/1cc00f9/packages/module/src/wallet/browser.service.ts#L153"
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Promise"
								},
								"typeArguments": [
									{
										"type": "array",
										"elementType": {
											"type": "intrinsic",
											"name": "string"
										}
									}
								],
								"name": "Promise",
								"package": "typescript"
							}
						}
					]
				},
				{
					"id": 1254,
					"name": "getUnusedAddresses",
					"variant": "declaration",
					"kind": 2048,
					"flags": {},
					"sources": [
						{
							"fileName": "wallet/browser.service.ts",
							"line": 163,
							"character": 8,
							"url": "https://github.com/MeshJS/mesh/blob/1cc00f9/packages/module/src/wallet/browser.service.ts#L163"
						}
					],
					"signatures": [
						{
							"id": 1255,
							"name": "getUnusedAddresses",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Returns a list of unused addresses controlled by the wallet."
									}
								],
								"blockTags": [
									{
										"tag": "@returns",
										"content": [
											{
												"kind": "text",
												"text": "a list of unused addresses"
											}
										]
									}
								]
							},
							"sources": [
								{
									"fileName": "wallet/browser.service.ts",
									"line": 163,
									"character": 8,
									"url": "https://github.com/MeshJS/mesh/blob/1cc00f9/packages/module/src/wallet/browser.service.ts#L163"
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Promise"
								},
								"typeArguments": [
									{
										"type": "array",
										"elementType": {
											"type": "intrinsic",
											"name": "string"
										}
									}
								],
								"name": "Promise",
								"package": "typescript"
							}
						}
					]
				},
				{
					"id": 1276,
					"name": "getUsedAddress",
					"variant": "declaration",
					"kind": 2048,
					"flags": {},
					"sources": [
						{
							"fileName": "wallet/browser.service.ts",
							"line": 331,
							"character": 8,
							"url": "https://github.com/MeshJS/mesh/blob/1cc00f9/packages/module/src/wallet/browser.service.ts#L331"
						}
					],
					"signatures": [
						{
							"id": 1277,
							"name": "getUsedAddress",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Get a used address of type Address from the wallet.\n\nThis is used in transaction building."
									}
								],
								"blockTags": [
									{
										"tag": "@returns",
										"content": [
											{
												"kind": "text",
												"text": "an Address object"
											}
										]
									}
								]
							},
							"sources": [
								{
									"fileName": "wallet/browser.service.ts",
									"line": 331,
									"character": 8,
									"url": "https://github.com/MeshJS/mesh/blob/1cc00f9/packages/module/src/wallet/browser.service.ts#L331"
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Promise"
								},
								"typeArguments": [
									{
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/@sidan-lab/sidan-csl-rs-nodejs/sidan_csl_rs.d.ts",
											"qualifiedName": "Address"
										},
										"name": "Address",
										"package": "@sidan-lab/sidan-csl-rs-nodejs"
									}
								],
								"name": "Promise",
								"package": "typescript"
							},
							"implementationOf": {
								"type": "reference",
								"target": 58,
								"name": "IInitiator.getUsedAddress"
							}
						}
					],
					"implementationOf": {
						"type": "reference",
						"target": 57,
						"name": "IInitiator.getUsedAddress"
					}
				},
				{
					"id": 1256,
					"name": "getUsedAddresses",
					"variant": "declaration",
					"kind": 2048,
					"flags": {},
					"sources": [
						{
							"fileName": "wallet/browser.service.ts",
							"line": 173,
							"character": 8,
							"url": "https://github.com/MeshJS/mesh/blob/1cc00f9/packages/module/src/wallet/browser.service.ts#L173"
						}
					],
					"signatures": [
						{
							"id": 1257,
							"name": "getUsedAddresses",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Returns a list of used addresses controlled by the wallet."
									}
								],
								"blockTags": [
									{
										"tag": "@returns",
										"content": [
											{
												"kind": "text",
												"text": "a list of used addresses"
											}
										]
									}
								]
							},
							"sources": [
								{
									"fileName": "wallet/browser.service.ts",
									"line": 173,
									"character": 8,
									"url": "https://github.com/MeshJS/mesh/blob/1cc00f9/packages/module/src/wallet/browser.service.ts#L173"
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Promise"
								},
								"typeArguments": [
									{
										"type": "array",
										"elementType": {
											"type": "intrinsic",
											"name": "string"
										}
									}
								],
								"name": "Promise",
								"package": "typescript"
							}
						}
					]
				},
				{
					"id": 1278,
					"name": "getUsedCollateral",
					"variant": "declaration",
					"kind": 2048,
					"flags": {},
					"sources": [
						{
							"fileName": "wallet/browser.service.ts",
							"line": 343,
							"character": 8,
							"url": "https://github.com/MeshJS/mesh/blob/1cc00f9/packages/module/src/wallet/browser.service.ts#L343"
						}
					],
					"signatures": [
						{
							"id": 1279,
							"name": "getUsedCollateral",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Get a list of UTXOs to be used as collateral inputs for transactions with plutus script inputs.\n\nThis is used in transaction building."
									}
								],
								"blockTags": [
									{
										"tag": "@returns",
										"content": [
											{
												"kind": "text",
												"text": "a list of UTXOs"
											}
										]
									}
								]
							},
							"sources": [
								{
									"fileName": "wallet/browser.service.ts",
									"line": 343,
									"character": 8,
									"url": "https://github.com/MeshJS/mesh/blob/1cc00f9/packages/module/src/wallet/browser.service.ts#L343"
								}
							],
							"parameters": [
								{
									"id": 1280,
									"name": "limit",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "number"
									},
									"defaultValue": "DEFAULT_PROTOCOL_PARAMETERS.maxCollateralInputs"
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Promise"
								},
								"typeArguments": [
									{
										"type": "array",
										"elementType": {
											"type": "reference",
											"target": {
												"sourceFileName": "../../node_modules/@sidan-lab/sidan-csl-rs-nodejs/sidan_csl_rs.d.ts",
												"qualifiedName": "TransactionUnspentOutput"
											},
											"name": "TransactionUnspentOutput",
											"package": "@sidan-lab/sidan-csl-rs-nodejs"
										}
									}
								],
								"name": "Promise",
								"package": "typescript"
							},
							"implementationOf": {
								"type": "reference",
								"target": 60,
								"name": "IInitiator.getUsedCollateral"
							}
						}
					],
					"implementationOf": {
						"type": "reference",
						"target": 59,
						"name": "IInitiator.getUsedCollateral"
					}
				},
				{
					"id": 1281,
					"name": "getUsedUTxOs",
					"variant": "declaration",
					"kind": 2048,
					"flags": {},
					"sources": [
						{
							"fileName": "wallet/browser.service.ts",
							"line": 358,
							"character": 8,
							"url": "https://github.com/MeshJS/mesh/blob/1cc00f9/packages/module/src/wallet/browser.service.ts#L358"
						}
					],
					"signatures": [
						{
							"id": 1282,
							"name": "getUsedUTxOs",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Get a list of UTXOs to be used for transaction building.\n\nThis is used in transaction building."
									}
								],
								"blockTags": [
									{
										"tag": "@returns",
										"content": [
											{
												"kind": "text",
												"text": "a list of UTXOs"
											}
										]
									}
								]
							},
							"sources": [
								{
									"fileName": "wallet/browser.service.ts",
									"line": 358,
									"character": 8,
									"url": "https://github.com/MeshJS/mesh/blob/1cc00f9/packages/module/src/wallet/browser.service.ts#L358"
								}
							],
							"parameters": [
								{
									"id": 1283,
									"name": "amount",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"type": {
										"type": "union",
										"types": [
											{
												"type": "intrinsic",
												"name": "undefined"
											},
											{
												"type": "array",
												"elementType": {
													"type": "reference",
													"target": {
														"sourceFileName": "src/types/Asset.ts",
														"qualifiedName": "Asset"
													},
													"name": "Asset",
													"package": "@meshsdk/core"
												}
											}
										]
									},
									"defaultValue": "undefined"
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Promise"
								},
								"typeArguments": [
									{
										"type": "array",
										"elementType": {
											"type": "reference",
											"target": {
												"sourceFileName": "../../node_modules/@sidan-lab/sidan-csl-rs-nodejs/sidan_csl_rs.d.ts",
												"qualifiedName": "TransactionUnspentOutput"
											},
											"name": "TransactionUnspentOutput",
											"package": "@sidan-lab/sidan-csl-rs-nodejs"
										}
									}
								],
								"name": "Promise",
								"package": "typescript"
							},
							"implementationOf": {
								"type": "reference",
								"target": 63,
								"name": "IInitiator.getUsedUTxOs"
							}
						}
					],
					"implementationOf": {
						"type": "reference",
						"target": 62,
						"name": "IInitiator.getUsedUTxOs"
					}
				},
				{
					"id": 1258,
					"name": "getUtxos",
					"variant": "declaration",
					"kind": 2048,
					"flags": {},
					"sources": [
						{
							"fileName": "wallet/browser.service.ts",
							"line": 184,
							"character": 8,
							"url": "https://github.com/MeshJS/mesh/blob/1cc00f9/packages/module/src/wallet/browser.service.ts#L184"
						}
					],
					"signatures": [
						{
							"id": 1259,
							"name": "getUtxos",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Return a list of all UTXOs (unspent transaction outputs) controlled by the wallet."
									}
								],
								"blockTags": [
									{
										"tag": "@returns",
										"content": [
											{
												"kind": "text",
												"text": "a list of UTXOs"
											}
										]
									}
								]
							},
							"sources": [
								{
									"fileName": "wallet/browser.service.ts",
									"line": 184,
									"character": 8,
									"url": "https://github.com/MeshJS/mesh/blob/1cc00f9/packages/module/src/wallet/browser.service.ts#L184"
								}
							],
							"parameters": [
								{
									"id": 1260,
									"name": "amount",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"type": {
										"type": "union",
										"types": [
											{
												"type": "intrinsic",
												"name": "undefined"
											},
											{
												"type": "array",
												"elementType": {
													"type": "reference",
													"target": {
														"sourceFileName": "src/types/Asset.ts",
														"qualifiedName": "Asset"
													},
													"name": "Asset",
													"package": "@meshsdk/core"
												}
											}
										]
									},
									"defaultValue": "undefined"
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Promise"
								},
								"typeArguments": [
									{
										"type": "array",
										"elementType": {
											"type": "reference",
											"target": {
												"sourceFileName": "src/types/UTxO.ts",
												"qualifiedName": "UTxO"
											},
											"name": "UTxO",
											"package": "@meshsdk/core"
										}
									}
								],
								"name": "Promise",
								"package": "typescript"
							}
						}
					]
				},
				{
					"id": 1261,
					"name": "signData",
					"variant": "declaration",
					"kind": 2048,
					"flags": {},
					"sources": [
						{
							"fileName": "wallet/browser.service.ts",
							"line": 198,
							"character": 2,
							"url": "https://github.com/MeshJS/mesh/blob/1cc00f9/packages/module/src/wallet/browser.service.ts#L198"
						}
					],
					"signatures": [
						{
							"id": 1262,
							"name": "signData",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "This endpoint utilizes the [CIP-8 - Message Signing](https://github.com/cardano-foundation/CIPs/tree/master/CIP-0030) to sign arbitrary data, to verify the data was signed by the owner of the private key.\n\nHere, we get the first wallet's address with wallet.getUsedAddresses(), alternativelly you can use reward addresses (getRewardAddresses()) too. It's really up to you as the developer which address you want to use in your application."
									}
								],
								"blockTags": [
									{
										"tag": "@returns",
										"content": [
											{
												"kind": "text",
												"text": "a signature"
											}
										]
									}
								]
							},
							"sources": [
								{
									"fileName": "wallet/browser.service.ts",
									"line": 198,
									"character": 2,
									"url": "https://github.com/MeshJS/mesh/blob/1cc00f9/packages/module/src/wallet/browser.service.ts#L198"
								}
							],
							"parameters": [
								{
									"id": 1263,
									"name": "address",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 1264,
									"name": "payload",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Promise"
								},
								"typeArguments": [
									{
										"type": "reference",
										"target": {
											"sourceFileName": "src/types/DataSignature.ts",
											"qualifiedName": "DataSignature"
										},
										"name": "DataSignature",
										"package": "@meshsdk/core"
									}
								],
								"name": "Promise",
								"package": "typescript"
							},
							"implementationOf": {
								"type": "reference",
								"target": 74,
								"name": "ISigner.signData"
							}
						}
					],
					"implementationOf": {
						"type": "reference",
						"target": 73,
						"name": "ISigner.signData"
					}
				},
				{
					"id": 1265,
					"name": "signTx",
					"variant": "declaration",
					"kind": 2048,
					"flags": {},
					"sources": [
						{
							"fileName": "wallet/browser.service.ts",
							"line": 210,
							"character": 8,
							"url": "https://github.com/MeshJS/mesh/blob/1cc00f9/packages/module/src/wallet/browser.service.ts#L210"
						}
					],
					"signatures": [
						{
							"id": 1266,
							"name": "signTx",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Requests user to sign the provided transaction (tx). The wallet should ask the user for permission, and if given, try to sign the supplied body and return a signed transaction. partialSign should be true if the transaction provided requires multiple signatures."
									}
								],
								"blockTags": [
									{
										"tag": "@returns",
										"content": [
											{
												"kind": "text",
												"text": "a signed transaction in CBOR"
											}
										]
									}
								]
							},
							"sources": [
								{
									"fileName": "wallet/browser.service.ts",
									"line": 210,
									"character": 8,
									"url": "https://github.com/MeshJS/mesh/blob/1cc00f9/packages/module/src/wallet/browser.service.ts#L210"
								}
							],
							"parameters": [
								{
									"id": 1267,
									"name": "unsignedTx",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 1268,
									"name": "partialSign",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "boolean"
									},
									"defaultValue": "false"
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Promise"
								},
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "string"
									}
								],
								"name": "Promise",
								"package": "typescript"
							},
							"implementationOf": {
								"type": "reference",
								"target": 78,
								"name": "ISigner.signTx"
							}
						}
					],
					"implementationOf": {
						"type": "reference",
						"target": 77,
						"name": "ISigner.signTx"
					}
				},
				{
					"id": 1269,
					"name": "signTxs",
					"variant": "declaration",
					"kind": 2048,
					"flags": {},
					"sources": [
						{
							"fileName": "wallet/browser.service.ts",
							"line": 253,
							"character": 8,
							"url": "https://github.com/MeshJS/mesh/blob/1cc00f9/packages/module/src/wallet/browser.service.ts#L253"
						}
					],
					"signatures": [
						{
							"id": 1270,
							"name": "signTxs",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Experimental feature - sign multiple transactions at once (Supported wallet(s): Typhon)"
									}
								],
								"blockTags": [
									{
										"tag": "@returns",
										"content": [
											{
												"kind": "text",
												"text": "array of signed transactions CborHex string"
											}
										]
									}
								]
							},
							"sources": [
								{
									"fileName": "wallet/browser.service.ts",
									"line": 253,
									"character": 8,
									"url": "https://github.com/MeshJS/mesh/blob/1cc00f9/packages/module/src/wallet/browser.service.ts#L253"
								}
							],
							"parameters": [
								{
									"id": 1271,
									"name": "unsignedTxs",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "array of unsigned transactions in CborHex string"
											}
										]
									},
									"type": {
										"type": "array",
										"elementType": {
											"type": "intrinsic",
											"name": "string"
										}
									}
								},
								{
									"id": 1272,
									"name": "partialSign",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "if the transactions are signed partially"
											}
										]
									},
									"type": {
										"type": "intrinsic",
										"name": "boolean"
									},
									"defaultValue": "false"
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Promise"
								},
								"typeArguments": [
									{
										"type": "array",
										"elementType": {
											"type": "intrinsic",
											"name": "string"
										}
									}
								],
								"name": "Promise",
								"package": "typescript"
							},
							"implementationOf": {
								"type": "reference",
								"target": 82,
								"name": "ISigner.signTxs"
							}
						}
					],
					"implementationOf": {
						"type": "reference",
						"target": 81,
						"name": "ISigner.signTxs"
					}
				},
				{
					"id": 1273,
					"name": "submitTx",
					"variant": "declaration",
					"kind": 2048,
					"flags": {},
					"sources": [
						{
							"fileName": "wallet/browser.service.ts",
							"line": 320,
							"character": 2,
							"url": "https://github.com/MeshJS/mesh/blob/1cc00f9/packages/module/src/wallet/browser.service.ts#L320"
						}
					],
					"signatures": [
						{
							"id": 1274,
							"name": "submitTx",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Submits the signed transaction to the blockchain network.\n\nAs wallets should already have this ability to submit transaction, we allow dApps to request that a transaction be sent through it. If the wallet accepts the transaction and tries to send it, it shall return the transaction ID for the dApp to track. The wallet can return error messages or failure if there was an error in sending it."
									}
								],
								"blockTags": [
									{
										"tag": "@returns",
										"content": [
											{
												"kind": "text",
												"text": "a transaction hash"
											}
										]
									}
								]
							},
							"sources": [
								{
									"fileName": "wallet/browser.service.ts",
									"line": 320,
									"character": 2,
									"url": "https://github.com/MeshJS/mesh/blob/1cc00f9/packages/module/src/wallet/browser.service.ts#L320"
								}
							],
							"parameters": [
								{
									"id": 1275,
									"name": "tx",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Promise"
								},
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "string"
									}
								],
								"name": "Promise",
								"package": "typescript"
							},
							"implementationOf": {
								"type": "reference",
								"target": 87,
								"name": "ISubmitter.submitTx"
							}
						}
					],
					"implementationOf": {
						"type": "reference",
						"target": 86,
						"name": "ISubmitter.submitTx"
					}
				},
				{
					"id": 1230,
					"name": "enable",
					"variant": "declaration",
					"kind": 2048,
					"flags": {
						"isStatic": true
					},
					"sources": [
						{
							"fileName": "wallet/browser.service.ts",
							"line": 85,
							"character": 15,
							"url": "https://github.com/MeshJS/mesh/blob/1cc00f9/packages/module/src/wallet/browser.service.ts#L85"
						}
					],
					"signatures": [
						{
							"id": 1231,
							"name": "enable",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "This is the entrypoint to start communication with the user's wallet. The wallet should request the user's permission to connect the web page to the user's wallet, and if permission has been granted, the wallet will be returned and exposing the full API for the dApp to use.\n\nQuery BrowserWallet.getInstalledWallets() to get a list of available wallets, then provide the wallet name for which wallet the user would like to connect with."
									}
								],
								"blockTags": [
									{
										"tag": "@returns",
										"content": [
											{
												"kind": "text",
												"text": "WalletInstance"
											}
										]
									}
								]
							},
							"sources": [
								{
									"fileName": "wallet/browser.service.ts",
									"line": 85,
									"character": 15,
									"url": "https://github.com/MeshJS/mesh/blob/1cc00f9/packages/module/src/wallet/browser.service.ts#L85"
								}
							],
							"parameters": [
								{
									"id": 1232,
									"name": "walletName",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Promise"
								},
								"typeArguments": [
									{
										"type": "reference",
										"target": 1227,
										"name": "BrowserWallet",
										"package": "@meshsdk/core"
									}
								],
								"name": "Promise",
								"package": "typescript"
							}
						}
					]
				},
				{
					"id": 1228,
					"name": "getInstalledWallets",
					"variant": "declaration",
					"kind": 2048,
					"flags": {
						"isStatic": true
					},
					"sources": [
						{
							"fileName": "wallet/browser.service.ts",
							"line": 65,
							"character": 9,
							"url": "https://github.com/MeshJS/mesh/blob/1cc00f9/packages/module/src/wallet/browser.service.ts#L65"
						}
					],
					"signatures": [
						{
							"id": 1229,
							"name": "getInstalledWallets",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Returns a list of wallets installed on user's device. Each wallet is an object with the following properties:\n- A name is provided to display wallet's name on the user interface.\n- A version is provided to display wallet's version on the user interface.\n- An icon is provided to display wallet's icon on the user interface."
									}
								],
								"blockTags": [
									{
										"tag": "@returns",
										"content": [
											{
												"kind": "text",
												"text": "a list of wallet names"
											}
										]
									}
								]
							},
							"sources": [
								{
									"fileName": "wallet/browser.service.ts",
									"line": 65,
									"character": 9,
									"url": "https://github.com/MeshJS/mesh/blob/1cc00f9/packages/module/src/wallet/browser.service.ts#L65"
								}
							],
							"type": {
								"type": "array",
								"elementType": {
									"type": "reference",
									"target": {
										"sourceFileName": "src/types/Wallet.ts",
										"qualifiedName": "Wallet"
									},
									"name": "Wallet",
									"package": "@meshsdk/core"
								}
							}
						}
					]
				},
				{
					"id": 1233,
					"name": "resolveInstance",
					"variant": "declaration",
					"kind": 2048,
					"flags": {
						"isPrivate": true,
						"isStatic": true
					},
					"sources": [
						{
							"fileName": "wallet/browser.service.ts",
							"line": 425,
							"character": 17,
							"url": "https://github.com/MeshJS/mesh/blob/1cc00f9/packages/module/src/wallet/browser.service.ts#L425"
						}
					],
					"signatures": [
						{
							"id": 1234,
							"name": "resolveInstance",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"sources": [
								{
									"fileName": "wallet/browser.service.ts",
									"line": 425,
									"character": 17,
									"url": "https://github.com/MeshJS/mesh/blob/1cc00f9/packages/module/src/wallet/browser.service.ts#L425"
								}
							],
							"parameters": [
								{
									"id": 1235,
									"name": "walletName",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "undefined"
									},
									{
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Promise"
										},
										"typeArguments": [
											{
												"type": "reference",
												"target": {
													"sourceFileName": "../../node_modules/@meshsdk/mesh-csl/node_modules/@meshsdk/core/dist/wallet/browser.service.d.ts",
													"qualifiedName": "WalletInstance"
												},
												"name": "WalletInstance",
												"package": "@meshsdk/core"
											}
										],
										"name": "Promise",
										"package": "typescript"
									}
								]
							}
						}
					]
				}
			],
			"groups": [
				{
					"title": "Constructors",
					"children": [
						1236
					]
				},
				{
					"title": "Properties",
					"children": [
						1241,
						1242,
						1240
					]
				},
				{
					"title": "Methods",
					"children": [
						1284,
						1243,
						1245,
						1247,
						1286,
						1250,
						1288,
						1291,
						1252,
						1254,
						1276,
						1256,
						1278,
						1281,
						1258,
						1261,
						1265,
						1269,
						1273,
						1230,
						1228,
						1233
					]
				}
			],
			"sources": [
				{
					"fileName": "wallet/browser.service.ts",
					"line": 47,
					"character": 13,
					"url": "https://github.com/MeshJS/mesh/blob/1cc00f9/packages/module/src/wallet/browser.service.ts#L47"
				}
			],
			"implementedTypes": [
				{
					"type": "reference",
					"target": 56,
					"name": "IInitiator",
					"package": "@meshsdk/core"
				},
				{
					"type": "reference",
					"target": 72,
					"name": "ISigner",
					"package": "@meshsdk/core"
				},
				{
					"type": "reference",
					"target": 85,
					"name": "ISubmitter",
					"package": "@meshsdk/core"
				}
			]
		},
		{
			"id": 1293,
			"name": "EmbeddedWallet",
			"variant": "declaration",
			"kind": 128,
			"flags": {},
			"children": [
				{
					"id": 1337,
					"name": "constructor",
					"variant": "declaration",
					"kind": 512,
					"flags": {},
					"sources": [
						{
							"fileName": "wallet/embedded.service.ts",
							"line": 32,
							"character": 2,
							"url": "https://github.com/MeshJS/mesh/blob/1cc00f9/packages/module/src/wallet/embedded.service.ts#L32"
						}
					],
					"signatures": [
						{
							"id": 1338,
							"name": "new EmbeddedWallet",
							"variant": "signature",
							"kind": 16384,
							"flags": {},
							"sources": [
								{
									"fileName": "wallet/embedded.service.ts",
									"line": 32,
									"character": 2,
									"url": "https://github.com/MeshJS/mesh/blob/1cc00f9/packages/module/src/wallet/embedded.service.ts#L32"
								}
							],
							"parameters": [
								{
									"id": 1339,
									"name": "_networkId",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "number"
									}
								},
								{
									"id": 1340,
									"name": "_encryptedSecret",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"type": {
										"type": "union",
										"types": [
											{
												"type": "intrinsic",
												"name": "string"
											},
											{
												"type": "tuple",
												"elements": [
													{
														"type": "intrinsic",
														"name": "string"
													},
													{
														"type": "intrinsic",
														"name": "string"
													}
												]
											}
										]
									}
								}
							],
							"type": {
								"type": "reference",
								"target": 1293,
								"name": "EmbeddedWallet",
								"package": "@meshsdk/core"
							}
						}
					]
				},
				{
					"id": 1342,
					"name": "_encryptedSecret",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isPrivate": true,
						"isReadonly": true
					},
					"sources": [
						{
							"fileName": "wallet/embedded.service.ts",
							"line": 34,
							"character": 21,
							"url": "https://github.com/MeshJS/mesh/blob/1cc00f9/packages/module/src/wallet/embedded.service.ts#L34"
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "string"
							},
							{
								"type": "tuple",
								"elements": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "intrinsic",
										"name": "string"
									}
								]
							}
						]
					}
				},
				{
					"id": 1341,
					"name": "_networkId",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isPrivate": true,
						"isReadonly": true
					},
					"sources": [
						{
							"fileName": "wallet/embedded.service.ts",
							"line": 33,
							"character": 21,
							"url": "https://github.com/MeshJS/mesh/blob/1cc00f9/packages/module/src/wallet/embedded.service.ts#L33"
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "number"
					}
				},
				{
					"id": 1360,
					"name": "accountContext",
					"variant": "declaration",
					"kind": 2048,
					"flags": {
						"isPrivate": true
					},
					"sources": [
						{
							"fileName": "wallet/embedded.service.ts",
							"line": 190,
							"character": 10,
							"url": "https://github.com/MeshJS/mesh/blob/1cc00f9/packages/module/src/wallet/embedded.service.ts#L190"
						}
					],
					"signatures": [
						{
							"id": 1361,
							"name": "accountContext",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"sources": [
								{
									"fileName": "wallet/embedded.service.ts",
									"line": 190,
									"character": 10,
									"url": "https://github.com/MeshJS/mesh/blob/1cc00f9/packages/module/src/wallet/embedded.service.ts#L190"
								}
							],
							"typeParameter": [
								{
									"id": 1362,
									"name": "T",
									"variant": "typeParam",
									"kind": 131072,
									"flags": {}
								}
							],
							"parameters": [
								{
									"id": 1363,
									"name": "accountIndex",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "number"
									}
								},
								{
									"id": 1364,
									"name": "password",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 1365,
									"name": "callback",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"type": {
										"type": "reflection",
										"declaration": {
											"id": 1366,
											"name": "__type",
											"variant": "declaration",
											"kind": 65536,
											"flags": {},
											"sources": [
												{
													"fileName": "wallet/embedded.service.ts",
													"line": 193,
													"character": 14,
													"url": "https://github.com/MeshJS/mesh/blob/1cc00f9/packages/module/src/wallet/embedded.service.ts#L193"
												}
											],
											"signatures": [
												{
													"id": 1367,
													"name": "__type",
													"variant": "signature",
													"kind": 4096,
													"flags": {},
													"sources": [
														{
															"fileName": "wallet/embedded.service.ts",
															"line": 193,
															"character": 14,
															"url": "https://github.com/MeshJS/mesh/blob/1cc00f9/packages/module/src/wallet/embedded.service.ts#L193"
														}
													],
													"parameters": [
														{
															"id": 1368,
															"name": "paymentKey",
															"variant": "param",
															"kind": 32768,
															"flags": {},
															"type": {
																"type": "reference",
																"target": {
																	"sourceFileName": "../../node_modules/@sidan-lab/sidan-csl-rs-nodejs/sidan_csl_rs.d.ts",
																	"qualifiedName": "PrivateKey"
																},
																"name": "PrivateKey",
																"package": "@sidan-lab/sidan-csl-rs-nodejs"
															}
														},
														{
															"id": 1369,
															"name": "stakeKey",
															"variant": "param",
															"kind": 32768,
															"flags": {},
															"type": {
																"type": "reference",
																"target": {
																	"sourceFileName": "../../node_modules/@sidan-lab/sidan-csl-rs-nodejs/sidan_csl_rs.d.ts",
																	"qualifiedName": "PrivateKey"
																},
																"name": "PrivateKey",
																"package": "@sidan-lab/sidan-csl-rs-nodejs"
															}
														}
													],
													"type": {
														"type": "reference",
														"target": 1362,
														"name": "T",
														"package": "@meshsdk/core",
														"refersToTypeParameter": true
													}
												}
											]
										}
									}
								}
							],
							"type": {
								"type": "reference",
								"target": 1362,
								"name": "T",
								"package": "@meshsdk/core",
								"refersToTypeParameter": true
							}
						}
					]
				},
				{
					"id": 1343,
					"name": "getAccount",
					"variant": "declaration",
					"kind": 2048,
					"flags": {},
					"sources": [
						{
							"fileName": "wallet/embedded.service.ts",
							"line": 37,
							"character": 2,
							"url": "https://github.com/MeshJS/mesh/blob/1cc00f9/packages/module/src/wallet/embedded.service.ts#L37"
						}
					],
					"signatures": [
						{
							"id": 1344,
							"name": "getAccount",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"sources": [
								{
									"fileName": "wallet/embedded.service.ts",
									"line": 37,
									"character": 2,
									"url": "https://github.com/MeshJS/mesh/blob/1cc00f9/packages/module/src/wallet/embedded.service.ts#L37"
								}
							],
							"parameters": [
								{
									"id": 1345,
									"name": "accountIndex",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "number"
									}
								},
								{
									"id": 1346,
									"name": "password",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "src/types/Account.ts",
									"qualifiedName": "Account"
								},
								"name": "Account",
								"package": "@meshsdk/core"
							}
						}
					]
				},
				{
					"id": 1347,
					"name": "signData",
					"variant": "declaration",
					"kind": 2048,
					"flags": {},
					"sources": [
						{
							"fileName": "wallet/embedded.service.ts",
							"line": 73,
							"character": 2,
							"url": "https://github.com/MeshJS/mesh/blob/1cc00f9/packages/module/src/wallet/embedded.service.ts#L73"
						}
					],
					"signatures": [
						{
							"id": 1348,
							"name": "signData",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"sources": [
								{
									"fileName": "wallet/embedded.service.ts",
									"line": 73,
									"character": 2,
									"url": "https://github.com/MeshJS/mesh/blob/1cc00f9/packages/module/src/wallet/embedded.service.ts#L73"
								}
							],
							"parameters": [
								{
									"id": 1349,
									"name": "accountIndex",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "number"
									}
								},
								{
									"id": 1350,
									"name": "password",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 1351,
									"name": "address",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 1352,
									"name": "payload",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "src/types/DataSignature.ts",
									"qualifiedName": "DataSignature"
								},
								"name": "DataSignature",
								"package": "@meshsdk/core"
							}
						}
					]
				},
				{
					"id": 1353,
					"name": "signTx",
					"variant": "declaration",
					"kind": 2048,
					"flags": {},
					"sources": [
						{
							"fileName": "wallet/embedded.service.ts",
							"line": 109,
							"character": 2,
							"url": "https://github.com/MeshJS/mesh/blob/1cc00f9/packages/module/src/wallet/embedded.service.ts#L109"
						}
					],
					"signatures": [
						{
							"id": 1354,
							"name": "signTx",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"sources": [
								{
									"fileName": "wallet/embedded.service.ts",
									"line": 109,
									"character": 2,
									"url": "https://github.com/MeshJS/mesh/blob/1cc00f9/packages/module/src/wallet/embedded.service.ts#L109"
								}
							],
							"parameters": [
								{
									"id": 1355,
									"name": "accountIndex",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "number"
									}
								},
								{
									"id": 1356,
									"name": "password",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 1357,
									"name": "utxos",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"type": {
										"type": "array",
										"elementType": {
											"type": "reference",
											"target": {
												"sourceFileName": "src/types/UTxO.ts",
												"qualifiedName": "UTxO"
											},
											"name": "UTxO",
											"package": "@meshsdk/core"
										}
									}
								},
								{
									"id": 1358,
									"name": "unsignedTx",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 1359,
									"name": "partialSign",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "boolean"
									}
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/@sidan-lab/sidan-csl-rs-nodejs/sidan_csl_rs.d.ts",
									"qualifiedName": "Vkeywitnesses"
								},
								"name": "Vkeywitnesses",
								"package": "@sidan-lab/sidan-csl-rs-nodejs"
							}
						}
					]
				},
				{
					"id": 1310,
					"name": "decrypt",
					"variant": "declaration",
					"kind": 2048,
					"flags": {
						"isPrivate": true,
						"isStatic": true
					},
					"sources": [
						{
							"fileName": "wallet/embedded.service.ts",
							"line": 209,
							"character": 17,
							"url": "https://github.com/MeshJS/mesh/blob/1cc00f9/packages/module/src/wallet/embedded.service.ts#L209"
						}
					],
					"signatures": [
						{
							"id": 1311,
							"name": "decrypt",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"sources": [
								{
									"fileName": "wallet/embedded.service.ts",
									"line": 209,
									"character": 17,
									"url": "https://github.com/MeshJS/mesh/blob/1cc00f9/packages/module/src/wallet/embedded.service.ts#L209"
								}
							],
							"parameters": [
								{
									"id": 1312,
									"name": "data",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 1313,
									"name": "password",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						}
					]
				},
				{
					"id": 1314,
					"name": "encrypt",
					"variant": "declaration",
					"kind": 2048,
					"flags": {
						"isPrivate": true,
						"isStatic": true
					},
					"sources": [
						{
							"fileName": "wallet/embedded.service.ts",
							"line": 217,
							"character": 17,
							"url": "https://github.com/MeshJS/mesh/blob/1cc00f9/packages/module/src/wallet/embedded.service.ts#L217"
						}
					],
					"signatures": [
						{
							"id": 1315,
							"name": "encrypt",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"sources": [
								{
									"fileName": "wallet/embedded.service.ts",
									"line": 217,
									"character": 17,
									"url": "https://github.com/MeshJS/mesh/blob/1cc00f9/packages/module/src/wallet/embedded.service.ts#L217"
								}
							],
							"parameters": [
								{
									"id": 1316,
									"name": "data",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 1317,
									"name": "password",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						}
					]
				},
				{
					"id": 1294,
					"name": "encryptMnemonic",
					"variant": "declaration",
					"kind": 2048,
					"flags": {
						"isStatic": true
					},
					"sources": [
						{
							"fileName": "wallet/embedded.service.ts",
							"line": 148,
							"character": 9,
							"url": "https://github.com/MeshJS/mesh/blob/1cc00f9/packages/module/src/wallet/embedded.service.ts#L148"
						}
					],
					"signatures": [
						{
							"id": 1295,
							"name": "encryptMnemonic",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"sources": [
								{
									"fileName": "wallet/embedded.service.ts",
									"line": 148,
									"character": 9,
									"url": "https://github.com/MeshJS/mesh/blob/1cc00f9/packages/module/src/wallet/embedded.service.ts#L148"
								}
							],
							"parameters": [
								{
									"id": 1296,
									"name": "words",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"type": {
										"type": "array",
										"elementType": {
											"type": "intrinsic",
											"name": "string"
										}
									}
								},
								{
									"id": 1297,
									"name": "password",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						}
					]
				},
				{
					"id": 1298,
					"name": "encryptPrivateKey",
					"variant": "declaration",
					"kind": 2048,
					"flags": {
						"isStatic": true
					},
					"sources": [
						{
							"fileName": "wallet/embedded.service.ts",
							"line": 158,
							"character": 9,
							"url": "https://github.com/MeshJS/mesh/blob/1cc00f9/packages/module/src/wallet/embedded.service.ts#L158"
						}
					],
					"signatures": [
						{
							"id": 1299,
							"name": "encryptPrivateKey",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"sources": [
								{
									"fileName": "wallet/embedded.service.ts",
									"line": 158,
									"character": 9,
									"url": "https://github.com/MeshJS/mesh/blob/1cc00f9/packages/module/src/wallet/embedded.service.ts#L158"
								}
							],
							"parameters": [
								{
									"id": 1300,
									"name": "bech32",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 1301,
									"name": "password",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						}
					]
				},
				{
					"id": 1302,
					"name": "encryptSigningKeys",
					"variant": "declaration",
					"kind": 2048,
					"flags": {
						"isStatic": true
					},
					"sources": [
						{
							"fileName": "wallet/embedded.service.ts",
							"line": 167,
							"character": 9,
							"url": "https://github.com/MeshJS/mesh/blob/1cc00f9/packages/module/src/wallet/embedded.service.ts#L167"
						}
					],
					"signatures": [
						{
							"id": 1303,
							"name": "encryptSigningKeys",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"sources": [
								{
									"fileName": "wallet/embedded.service.ts",
									"line": 167,
									"character": 9,
									"url": "https://github.com/MeshJS/mesh/blob/1cc00f9/packages/module/src/wallet/embedded.service.ts#L167"
								}
							],
							"parameters": [
								{
									"id": 1304,
									"name": "cborPaymentKey",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 1305,
									"name": "cborStakeKey",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 1306,
									"name": "password",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								}
							],
							"type": {
								"type": "tuple",
								"elements": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "intrinsic",
										"name": "string"
									}
								]
							}
						}
					]
				},
				{
					"id": 1307,
					"name": "generateMnemonic",
					"variant": "declaration",
					"kind": 2048,
					"flags": {
						"isStatic": true
					},
					"sources": [
						{
							"fileName": "wallet/embedded.service.ts",
							"line": 185,
							"character": 9,
							"url": "https://github.com/MeshJS/mesh/blob/1cc00f9/packages/module/src/wallet/embedded.service.ts#L185"
						}
					],
					"signatures": [
						{
							"id": 1308,
							"name": "generateMnemonic",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"sources": [
								{
									"fileName": "wallet/embedded.service.ts",
									"line": 185,
									"character": 9,
									"url": "https://github.com/MeshJS/mesh/blob/1cc00f9/packages/module/src/wallet/embedded.service.ts#L185"
								}
							],
							"parameters": [
								{
									"id": 1309,
									"name": "strength",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "number"
									},
									"defaultValue": "256"
								}
							],
							"type": {
								"type": "array",
								"elementType": {
									"type": "intrinsic",
									"name": "string"
								}
							}
						}
					]
				},
				{
					"id": 1318,
					"name": "resolveAddress",
					"variant": "declaration",
					"kind": 2048,
					"flags": {
						"isPrivate": true,
						"isStatic": true
					},
					"sources": [
						{
							"fileName": "wallet/embedded.service.ts",
							"line": 224,
							"character": 17,
							"url": "https://github.com/MeshJS/mesh/blob/1cc00f9/packages/module/src/wallet/embedded.service.ts#L224"
						}
					],
					"signatures": [
						{
							"id": 1319,
							"name": "resolveAddress",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"sources": [
								{
									"fileName": "wallet/embedded.service.ts",
									"line": 224,
									"character": 17,
									"url": "https://github.com/MeshJS/mesh/blob/1cc00f9/packages/module/src/wallet/embedded.service.ts#L224"
								}
							],
							"parameters": [
								{
									"id": 1320,
									"name": "networkId",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "number"
									}
								},
								{
									"id": 1321,
									"name": "bech32",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 1322,
									"name": "payment",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/@sidan-lab/sidan-csl-rs-nodejs/sidan_csl_rs.d.ts",
											"qualifiedName": "PrivateKey"
										},
										"name": "PrivateKey",
										"package": "@sidan-lab/sidan-csl-rs-nodejs"
									}
								},
								{
									"id": 1323,
									"name": "stake",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/@sidan-lab/sidan-csl-rs-nodejs/sidan_csl_rs.d.ts",
											"qualifiedName": "PrivateKey"
										},
										"name": "PrivateKey",
										"package": "@sidan-lab/sidan-csl-rs-nodejs"
									}
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/@sidan-lab/sidan-csl-rs-nodejs/sidan_csl_rs.d.ts",
									"qualifiedName": "Address"
								},
								"name": "Address",
								"package": "@sidan-lab/sidan-csl-rs-nodejs"
							}
						}
					]
				},
				{
					"id": 1324,
					"name": "resolveKeys",
					"variant": "declaration",
					"kind": 2048,
					"flags": {
						"isPrivate": true,
						"isStatic": true
					},
					"sources": [
						{
							"fileName": "wallet/embedded.service.ts",
							"line": 245,
							"character": 17,
							"url": "https://github.com/MeshJS/mesh/blob/1cc00f9/packages/module/src/wallet/embedded.service.ts#L245"
						}
					],
					"signatures": [
						{
							"id": 1325,
							"name": "resolveKeys",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"sources": [
								{
									"fileName": "wallet/embedded.service.ts",
									"line": 245,
									"character": 17,
									"url": "https://github.com/MeshJS/mesh/blob/1cc00f9/packages/module/src/wallet/embedded.service.ts#L245"
								}
							],
							"parameters": [
								{
									"id": 1326,
									"name": "accountIndex",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "number"
									}
								},
								{
									"id": 1327,
									"name": "password",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 1328,
									"name": "encryptedSecret",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"type": {
										"type": "union",
										"types": [
											{
												"type": "intrinsic",
												"name": "string"
											},
											{
												"type": "tuple",
												"elements": [
													{
														"type": "intrinsic",
														"name": "string"
													},
													{
														"type": "intrinsic",
														"name": "string"
													}
												]
											}
										]
									}
								}
							],
							"type": {
								"type": "reflection",
								"declaration": {
									"id": 1329,
									"name": "__type",
									"variant": "declaration",
									"kind": 65536,
									"flags": {},
									"children": [
										{
											"id": 1330,
											"name": "paymentKey",
											"variant": "declaration",
											"kind": 1024,
											"flags": {},
											"sources": [
												{
													"fileName": "wallet/embedded.service.ts",
													"line": 249,
													"character": 7,
													"url": "https://github.com/MeshJS/mesh/blob/1cc00f9/packages/module/src/wallet/embedded.service.ts#L249"
												}
											],
											"type": {
												"type": "reference",
												"target": {
													"sourceFileName": "../../node_modules/@sidan-lab/sidan-csl-rs-nodejs/sidan_csl_rs.d.ts",
													"qualifiedName": "PrivateKey"
												},
												"name": "PrivateKey",
												"package": "@sidan-lab/sidan-csl-rs-nodejs"
											}
										},
										{
											"id": 1331,
											"name": "stakeKey",
											"variant": "declaration",
											"kind": 1024,
											"flags": {},
											"sources": [
												{
													"fileName": "wallet/embedded.service.ts",
													"line": 249,
													"character": 31,
													"url": "https://github.com/MeshJS/mesh/blob/1cc00f9/packages/module/src/wallet/embedded.service.ts#L249"
												}
											],
											"type": {
												"type": "reference",
												"target": {
													"sourceFileName": "../../node_modules/@sidan-lab/sidan-csl-rs-nodejs/sidan_csl_rs.d.ts",
													"qualifiedName": "PrivateKey"
												},
												"name": "PrivateKey",
												"package": "@sidan-lab/sidan-csl-rs-nodejs"
											}
										}
									],
									"groups": [
										{
											"title": "Properties",
											"children": [
												1330,
												1331
											]
										}
									],
									"sources": [
										{
											"fileName": "wallet/embedded.service.ts",
											"line": 249,
											"character": 5,
											"url": "https://github.com/MeshJS/mesh/blob/1cc00f9/packages/module/src/wallet/embedded.service.ts#L249"
										}
									]
								}
							}
						}
					]
				},
				{
					"id": 1332,
					"name": "resolveSigners",
					"variant": "declaration",
					"kind": 2048,
					"flags": {
						"isPrivate": true,
						"isStatic": true
					},
					"sources": [
						{
							"fileName": "wallet/embedded.service.ts",
							"line": 266,
							"character": 17,
							"url": "https://github.com/MeshJS/mesh/blob/1cc00f9/packages/module/src/wallet/embedded.service.ts#L266"
						}
					],
					"signatures": [
						{
							"id": 1333,
							"name": "resolveSigners",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"sources": [
								{
									"fileName": "wallet/embedded.service.ts",
									"line": 266,
									"character": 17,
									"url": "https://github.com/MeshJS/mesh/blob/1cc00f9/packages/module/src/wallet/embedded.service.ts#L266"
								}
							],
							"parameters": [
								{
									"id": 1334,
									"name": "cborTx",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 1335,
									"name": "utxos",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"type": {
										"type": "array",
										"elementType": {
											"type": "reference",
											"target": {
												"sourceFileName": "src/types/UTxO.ts",
												"qualifiedName": "UTxO"
											},
											"name": "UTxO",
											"package": "@meshsdk/core"
										}
									}
								},
								{
									"id": 1336,
									"name": "paymentKeyHash",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es2015.collection.d.ts",
									"qualifiedName": "Set"
								},
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "string"
									}
								],
								"name": "Set",
								"package": "typescript"
							}
						}
					]
				}
			],
			"groups": [
				{
					"title": "Constructors",
					"children": [
						1337
					]
				},
				{
					"title": "Properties",
					"children": [
						1342,
						1341
					]
				},
				{
					"title": "Methods",
					"children": [
						1360,
						1343,
						1347,
						1353,
						1310,
						1314,
						1294,
						1298,
						1302,
						1307,
						1318,
						1324,
						1332
					]
				}
			],
			"sources": [
				{
					"fileName": "wallet/embedded.service.ts",
					"line": 31,
					"character": 13,
					"url": "https://github.com/MeshJS/mesh/blob/1cc00f9/packages/module/src/wallet/embedded.service.ts#L31"
				}
			]
		},
		{
			"id": 660,
			"name": "ForgeScript",
			"variant": "declaration",
			"kind": 128,
			"flags": {},
			"children": [
				{
					"id": 677,
					"name": "constructor",
					"variant": "declaration",
					"kind": 512,
					"flags": {},
					"signatures": [
						{
							"id": 678,
							"name": "new ForgeScript",
							"variant": "signature",
							"kind": 16384,
							"flags": {},
							"type": {
								"type": "reference",
								"target": 660,
								"name": "ForgeScript",
								"package": "@meshsdk/core"
							}
						}
					]
				},
				{
					"id": 674,
					"name": "fromNativeScript",
					"variant": "declaration",
					"kind": 2048,
					"flags": {
						"isStatic": true
					},
					"sources": [
						{
							"fileName": "scripts/forge.script.ts",
							"line": 55,
							"character": 9,
							"url": "https://github.com/MeshJS/mesh/blob/1cc00f9/packages/module/src/scripts/forge.script.ts#L55"
						}
					],
					"signatures": [
						{
							"id": 675,
							"name": "fromNativeScript",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"sources": [
								{
									"fileName": "scripts/forge.script.ts",
									"line": 55,
									"character": 9,
									"url": "https://github.com/MeshJS/mesh/blob/1cc00f9/packages/module/src/scripts/forge.script.ts#L55"
								}
							],
							"parameters": [
								{
									"id": 676,
									"name": "script",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "src/types/NativeScript.ts",
											"qualifiedName": "NativeScript"
										},
										"name": "NativeScript",
										"package": "@meshsdk/core"
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						}
					]
				},
				{
					"id": 671,
					"name": "withAllSignatures",
					"variant": "declaration",
					"kind": 2048,
					"flags": {
						"isStatic": true
					},
					"sources": [
						{
							"fileName": "scripts/forge.script.ts",
							"line": 43,
							"character": 9,
							"url": "https://github.com/MeshJS/mesh/blob/1cc00f9/packages/module/src/scripts/forge.script.ts#L43"
						}
					],
					"signatures": [
						{
							"id": 672,
							"name": "withAllSignatures",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"sources": [
								{
									"fileName": "scripts/forge.script.ts",
									"line": 43,
									"character": 9,
									"url": "https://github.com/MeshJS/mesh/blob/1cc00f9/packages/module/src/scripts/forge.script.ts#L43"
								}
							],
							"parameters": [
								{
									"id": 673,
									"name": "addresses",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"type": {
										"type": "array",
										"elementType": {
											"type": "intrinsic",
											"name": "string"
										}
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						}
					]
				},
				{
					"id": 668,
					"name": "withAnySignature",
					"variant": "declaration",
					"kind": 2048,
					"flags": {
						"isStatic": true
					},
					"sources": [
						{
							"fileName": "scripts/forge.script.ts",
							"line": 31,
							"character": 9,
							"url": "https://github.com/MeshJS/mesh/blob/1cc00f9/packages/module/src/scripts/forge.script.ts#L31"
						}
					],
					"signatures": [
						{
							"id": 669,
							"name": "withAnySignature",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"sources": [
								{
									"fileName": "scripts/forge.script.ts",
									"line": 31,
									"character": 9,
									"url": "https://github.com/MeshJS/mesh/blob/1cc00f9/packages/module/src/scripts/forge.script.ts#L31"
								}
							],
							"parameters": [
								{
									"id": 670,
									"name": "addresses",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"type": {
										"type": "array",
										"elementType": {
											"type": "intrinsic",
											"name": "string"
										}
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						}
					]
				},
				{
					"id": 664,
					"name": "withAtLeastNSignatures",
					"variant": "declaration",
					"kind": 2048,
					"flags": {
						"isStatic": true
					},
					"sources": [
						{
							"fileName": "scripts/forge.script.ts",
							"line": 16,
							"character": 9,
							"url": "https://github.com/MeshJS/mesh/blob/1cc00f9/packages/module/src/scripts/forge.script.ts#L16"
						}
					],
					"signatures": [
						{
							"id": 665,
							"name": "withAtLeastNSignatures",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"sources": [
								{
									"fileName": "scripts/forge.script.ts",
									"line": 16,
									"character": 9,
									"url": "https://github.com/MeshJS/mesh/blob/1cc00f9/packages/module/src/scripts/forge.script.ts#L16"
								}
							],
							"parameters": [
								{
									"id": 666,
									"name": "addresses",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"type": {
										"type": "array",
										"elementType": {
											"type": "intrinsic",
											"name": "string"
										}
									}
								},
								{
									"id": 667,
									"name": "minimumRequired",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "number"
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						}
					]
				},
				{
					"id": 661,
					"name": "withOneSignature",
					"variant": "declaration",
					"kind": 2048,
					"flags": {
						"isStatic": true
					},
					"sources": [
						{
							"fileName": "scripts/forge.script.ts",
							"line": 11,
							"character": 9,
							"url": "https://github.com/MeshJS/mesh/blob/1cc00f9/packages/module/src/scripts/forge.script.ts#L11"
						}
					],
					"signatures": [
						{
							"id": 662,
							"name": "withOneSignature",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"sources": [
								{
									"fileName": "scripts/forge.script.ts",
									"line": 11,
									"character": 9,
									"url": "https://github.com/MeshJS/mesh/blob/1cc00f9/packages/module/src/scripts/forge.script.ts#L11"
								}
							],
							"parameters": [
								{
									"id": 663,
									"name": "address",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						}
					]
				}
			],
			"groups": [
				{
					"title": "Constructors",
					"children": [
						677
					]
				},
				{
					"title": "Methods",
					"children": [
						674,
						671,
						668,
						664,
						661
					]
				}
			],
			"sources": [
				{
					"fileName": "scripts/forge.script.ts",
					"line": 10,
					"character": 13,
					"url": "https://github.com/MeshJS/mesh/blob/1cc00f9/packages/module/src/scripts/forge.script.ts#L10"
				}
			]
		},
		{
			"id": 418,
			"name": "InfuraProvider",
			"variant": "declaration",
			"kind": 128,
			"flags": {},
			"children": [
				{
					"id": 419,
					"name": "constructor",
					"variant": "declaration",
					"kind": 512,
					"flags": {},
					"sources": [
						{
							"fileName": "providers/infura.provider.ts",
							"line": 8,
							"character": 2,
							"url": "https://github.com/MeshJS/mesh/blob/1cc00f9/packages/module/src/providers/infura.provider.ts#L8"
						}
					],
					"signatures": [
						{
							"id": 420,
							"name": "new InfuraProvider",
							"variant": "signature",
							"kind": 16384,
							"flags": {},
							"sources": [
								{
									"fileName": "providers/infura.provider.ts",
									"line": 8,
									"character": 2,
									"url": "https://github.com/MeshJS/mesh/blob/1cc00f9/packages/module/src/providers/infura.provider.ts#L8"
								}
							],
							"parameters": [
								{
									"id": 421,
									"name": "projectId",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 422,
									"name": "projectSecret",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 423,
									"name": "options",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Partial"
										},
										"typeArguments": [
											{
												"type": "reference",
												"target": {
													"sourceFileName": "src/providers/infura.provider.ts",
													"qualifiedName": "CreateInfuraProviderOptions"
												},
												"name": "CreateInfuraProviderOptions",
												"package": "@meshsdk/core"
											}
										],
										"name": "Partial",
										"package": "typescript"
									}
								}
							],
							"type": {
								"type": "reference",
								"target": 418,
								"name": "InfuraProvider",
								"package": "@meshsdk/core"
							}
						}
					]
				},
				{
					"id": 424,
					"name": "_axiosInstance",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isPrivate": true
					},
					"sources": [
						{
							"fileName": "providers/infura.provider.ts",
							"line": 6,
							"character": 10,
							"url": "https://github.com/MeshJS/mesh/blob/1cc00f9/packages/module/src/providers/infura.provider.ts#L6"
						}
					],
					"type": {
						"type": "reference",
						"target": {
							"sourceFileName": "../../node_modules/axios/index.d.ts",
							"qualifiedName": "AxiosInstance"
						},
						"name": "AxiosInstance",
						"package": "axios"
					}
				},
				{
					"id": 425,
					"name": "uploadContent",
					"variant": "declaration",
					"kind": 2048,
					"flags": {},
					"sources": [
						{
							"fileName": "providers/infura.provider.ts",
							"line": 23,
							"character": 8,
							"url": "https://github.com/MeshJS/mesh/blob/1cc00f9/packages/module/src/providers/infura.provider.ts#L23"
						}
					],
					"signatures": [
						{
							"id": 426,
							"name": "uploadContent",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"sources": [
								{
									"fileName": "providers/infura.provider.ts",
									"line": 23,
									"character": 8,
									"url": "https://github.com/MeshJS/mesh/blob/1cc00f9/packages/module/src/providers/infura.provider.ts#L23"
								}
							],
							"parameters": [
								{
									"id": 427,
									"name": "content",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.dom.d.ts",
											"qualifiedName": "FormData"
										},
										"name": "FormData",
										"package": "typescript"
									}
								},
								{
									"id": 428,
									"name": "recursive",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "boolean"
									},
									"defaultValue": "false"
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Promise"
								},
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "string"
									}
								],
								"name": "Promise",
								"package": "typescript"
							},
							"implementationOf": {
								"type": "reference",
								"target": 91,
								"name": "IUploader.uploadContent"
							}
						}
					],
					"implementationOf": {
						"type": "reference",
						"target": 90,
						"name": "IUploader.uploadContent"
					}
				}
			],
			"groups": [
				{
					"title": "Constructors",
					"children": [
						419
					]
				},
				{
					"title": "Properties",
					"children": [
						424
					]
				},
				{
					"title": "Methods",
					"children": [
						425
					]
				}
			],
			"sources": [
				{
					"fileName": "providers/infura.provider.ts",
					"line": 5,
					"character": 13,
					"url": "https://github.com/MeshJS/mesh/blob/1cc00f9/packages/module/src/providers/infura.provider.ts#L5"
				}
			],
			"implementedTypes": [
				{
					"type": "reference",
					"target": 89,
					"name": "IUploader",
					"package": "@meshsdk/core"
				}
			]
		},
		{
			"id": 429,
			"name": "KoiosProvider",
			"variant": "declaration",
			"kind": 128,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "Fetcher interface defines end points to query blockchain data."
					}
				]
			},
			"children": [
				{
					"id": 430,
					"name": "constructor",
					"variant": "declaration",
					"kind": 512,
					"flags": {},
					"sources": [
						{
							"fileName": "providers/koios.provider.ts",
							"line": 29,
							"character": 2,
							"url": "https://github.com/MeshJS/mesh/blob/1cc00f9/packages/module/src/providers/koios.provider.ts#L29"
						},
						{
							"fileName": "providers/koios.provider.ts",
							"line": 30,
							"character": 2,
							"url": "https://github.com/MeshJS/mesh/blob/1cc00f9/packages/module/src/providers/koios.provider.ts#L30"
						},
						{
							"fileName": "providers/koios.provider.ts",
							"line": 36,
							"character": 2,
							"url": "https://github.com/MeshJS/mesh/blob/1cc00f9/packages/module/src/providers/koios.provider.ts#L36"
						}
					],
					"signatures": [
						{
							"id": 431,
							"name": "new KoiosProvider",
							"variant": "signature",
							"kind": 16384,
							"flags": {},
							"sources": [
								{
									"fileName": "providers/koios.provider.ts",
									"line": 29,
									"character": 2,
									"url": "https://github.com/MeshJS/mesh/blob/1cc00f9/packages/module/src/providers/koios.provider.ts#L29"
								}
							],
							"parameters": [
								{
									"id": 432,
									"name": "baseUrl",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								}
							],
							"type": {
								"type": "reference",
								"target": 429,
								"name": "KoiosProvider",
								"package": "@meshsdk/core"
							}
						},
						{
							"id": 433,
							"name": "new KoiosProvider",
							"variant": "signature",
							"kind": 16384,
							"flags": {},
							"sources": [
								{
									"fileName": "providers/koios.provider.ts",
									"line": 30,
									"character": 2,
									"url": "https://github.com/MeshJS/mesh/blob/1cc00f9/packages/module/src/providers/koios.provider.ts#L30"
								}
							],
							"parameters": [
								{
									"id": 434,
									"name": "network",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"type": {
										"type": "union",
										"types": [
											{
												"type": "literal",
												"value": "preview"
											},
											{
												"type": "literal",
												"value": "preprod"
											},
											{
												"type": "literal",
												"value": "api"
											},
											{
												"type": "literal",
												"value": "guild"
											}
										]
									}
								},
								{
									"id": 435,
									"name": "token",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 436,
									"name": "version",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"type": {
										"type": "intrinsic",
										"name": "number"
									}
								}
							],
							"type": {
								"type": "reference",
								"target": 429,
								"name": "KoiosProvider",
								"package": "@meshsdk/core"
							}
						}
					]
				},
				{
					"id": 437,
					"name": "_axiosInstance",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isPrivate": true,
						"isReadonly": true
					},
					"sources": [
						{
							"fileName": "providers/koios.provider.ts",
							"line": 27,
							"character": 19,
							"url": "https://github.com/MeshJS/mesh/blob/1cc00f9/packages/module/src/providers/koios.provider.ts#L27"
						}
					],
					"type": {
						"type": "reference",
						"target": {
							"sourceFileName": "../../node_modules/axios/index.d.ts",
							"qualifiedName": "AxiosInstance"
						},
						"name": "AxiosInstance",
						"package": "axios"
					}
				},
				{
					"id": 438,
					"name": "fetchAccountInfo",
					"variant": "declaration",
					"kind": 2048,
					"flags": {},
					"sources": [
						{
							"fileName": "providers/koios.provider.ts",
							"line": 64,
							"character": 8,
							"url": "https://github.com/MeshJS/mesh/blob/1cc00f9/packages/module/src/providers/koios.provider.ts#L64"
						}
					],
					"signatures": [
						{
							"id": 439,
							"name": "fetchAccountInfo",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"sources": [
								{
									"fileName": "providers/koios.provider.ts",
									"line": 64,
									"character": 8,
									"url": "https://github.com/MeshJS/mesh/blob/1cc00f9/packages/module/src/providers/koios.provider.ts#L64"
								}
							],
							"parameters": [
								{
									"id": 440,
									"name": "address",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Promise"
								},
								"typeArguments": [
									{
										"type": "reference",
										"target": {
											"sourceFileName": "src/types/AccountInfo.ts",
											"qualifiedName": "AccountInfo"
										},
										"name": "AccountInfo",
										"package": "@meshsdk/core"
									}
								],
								"name": "Promise",
								"package": "typescript"
							},
							"implementationOf": {
								"type": "reference",
								"target": 19,
								"name": "IFetcher.fetchAccountInfo"
							}
						}
					],
					"implementationOf": {
						"type": "reference",
						"target": 18,
						"name": "IFetcher.fetchAccountInfo"
					}
				},
				{
					"id": 441,
					"name": "fetchAddressUTxOs",
					"variant": "declaration",
					"kind": 2048,
					"flags": {},
					"sources": [
						{
							"fileName": "providers/koios.provider.ts",
							"line": 89,
							"character": 8,
							"url": "https://github.com/MeshJS/mesh/blob/1cc00f9/packages/module/src/providers/koios.provider.ts#L89"
						}
					],
					"signatures": [
						{
							"id": 442,
							"name": "fetchAddressUTxOs",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"sources": [
								{
									"fileName": "providers/koios.provider.ts",
									"line": 89,
									"character": 8,
									"url": "https://github.com/MeshJS/mesh/blob/1cc00f9/packages/module/src/providers/koios.provider.ts#L89"
								}
							],
							"parameters": [
								{
									"id": 443,
									"name": "address",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 444,
									"name": "asset",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Promise"
								},
								"typeArguments": [
									{
										"type": "array",
										"elementType": {
											"type": "reference",
											"target": {
												"sourceFileName": "src/types/UTxO.ts",
												"qualifiedName": "UTxO"
											},
											"name": "UTxO",
											"package": "@meshsdk/core"
										}
									}
								],
								"name": "Promise",
								"package": "typescript"
							},
							"implementationOf": {
								"type": "reference",
								"target": 22,
								"name": "IFetcher.fetchAddressUTxOs"
							}
						}
					],
					"implementationOf": {
						"type": "reference",
						"target": 21,
						"name": "IFetcher.fetchAddressUTxOs"
					}
				},
				{
					"id": 445,
					"name": "fetchAssetAddresses",
					"variant": "declaration",
					"kind": 2048,
					"flags": {},
					"sources": [
						{
							"fileName": "providers/koios.provider.ts",
							"line": 116,
							"character": 8,
							"url": "https://github.com/MeshJS/mesh/blob/1cc00f9/packages/module/src/providers/koios.provider.ts#L116"
						}
					],
					"signatures": [
						{
							"id": 446,
							"name": "fetchAssetAddresses",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"sources": [
								{
									"fileName": "providers/koios.provider.ts",
									"line": 116,
									"character": 8,
									"url": "https://github.com/MeshJS/mesh/blob/1cc00f9/packages/module/src/providers/koios.provider.ts#L116"
								}
							],
							"parameters": [
								{
									"id": 447,
									"name": "asset",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Promise"
								},
								"typeArguments": [
									{
										"type": "array",
										"elementType": {
											"type": "reflection",
											"declaration": {
												"id": 448,
												"name": "__type",
												"variant": "declaration",
												"kind": 65536,
												"flags": {},
												"children": [
													{
														"id": 449,
														"name": "address",
														"variant": "declaration",
														"kind": 1024,
														"flags": {},
														"sources": [
															{
																"fileName": "providers/koios.provider.ts",
																"line": 118,
																"character": 15,
																"url": "https://github.com/MeshJS/mesh/blob/1cc00f9/packages/module/src/providers/koios.provider.ts#L118"
															}
														],
														"type": {
															"type": "intrinsic",
															"name": "string"
														}
													},
													{
														"id": 450,
														"name": "quantity",
														"variant": "declaration",
														"kind": 1024,
														"flags": {},
														"sources": [
															{
																"fileName": "providers/koios.provider.ts",
																"line": 118,
																"character": 32,
																"url": "https://github.com/MeshJS/mesh/blob/1cc00f9/packages/module/src/providers/koios.provider.ts#L118"
															}
														],
														"type": {
															"type": "intrinsic",
															"name": "string"
														}
													}
												],
												"groups": [
													{
														"title": "Properties",
														"children": [
															449,
															450
														]
													}
												],
												"sources": [
													{
														"fileName": "providers/koios.provider.ts",
														"line": 118,
														"character": 13,
														"url": "https://github.com/MeshJS/mesh/blob/1cc00f9/packages/module/src/providers/koios.provider.ts#L118"
													}
												]
											}
										}
									}
								],
								"name": "Promise",
								"package": "typescript"
							},
							"implementationOf": {
								"type": "reference",
								"target": 26,
								"name": "IFetcher.fetchAssetAddresses"
							}
						}
					],
					"implementationOf": {
						"type": "reference",
						"target": 25,
						"name": "IFetcher.fetchAssetAddresses"
					}
				},
				{
					"id": 451,
					"name": "fetchAssetMetadata",
					"variant": "declaration",
					"kind": 2048,
					"flags": {},
					"sources": [
						{
							"fileName": "providers/koios.provider.ts",
							"line": 137,
							"character": 8,
							"url": "https://github.com/MeshJS/mesh/blob/1cc00f9/packages/module/src/providers/koios.provider.ts#L137"
						}
					],
					"signatures": [
						{
							"id": 452,
							"name": "fetchAssetMetadata",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"sources": [
								{
									"fileName": "providers/koios.provider.ts",
									"line": 137,
									"character": 8,
									"url": "https://github.com/MeshJS/mesh/blob/1cc00f9/packages/module/src/providers/koios.provider.ts#L137"
								}
							],
							"parameters": [
								{
									"id": 453,
									"name": "asset",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Promise"
								},
								"typeArguments": [
									{
										"type": "reference",
										"target": {
											"sourceFileName": "src/types/AssetMetadata.ts",
											"qualifiedName": "AssetMetadata"
										},
										"name": "AssetMetadata",
										"package": "@meshsdk/core"
									}
								],
								"name": "Promise",
								"package": "typescript"
							},
							"implementationOf": {
								"type": "reference",
								"target": 32,
								"name": "IFetcher.fetchAssetMetadata"
							}
						}
					],
					"implementationOf": {
						"type": "reference",
						"target": 31,
						"name": "IFetcher.fetchAssetMetadata"
					}
				},
				{
					"id": 454,
					"name": "fetchBlockInfo",
					"variant": "declaration",
					"kind": 2048,
					"flags": {},
					"sources": [
						{
							"fileName": "providers/koios.provider.ts",
							"line": 155,
							"character": 8,
							"url": "https://github.com/MeshJS/mesh/blob/1cc00f9/packages/module/src/providers/koios.provider.ts#L155"
						}
					],
					"signatures": [
						{
							"id": 455,
							"name": "fetchBlockInfo",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"sources": [
								{
									"fileName": "providers/koios.provider.ts",
									"line": 155,
									"character": 8,
									"url": "https://github.com/MeshJS/mesh/blob/1cc00f9/packages/module/src/providers/koios.provider.ts#L155"
								}
							],
							"parameters": [
								{
									"id": 456,
									"name": "hash",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Promise"
								},
								"typeArguments": [
									{
										"type": "reference",
										"target": {
											"sourceFileName": "src/types/BlockInfo.ts",
											"qualifiedName": "BlockInfo"
										},
										"name": "BlockInfo",
										"package": "@meshsdk/core"
									}
								],
								"name": "Promise",
								"package": "typescript"
							},
							"implementationOf": {
								"type": "reference",
								"target": 35,
								"name": "IFetcher.fetchBlockInfo"
							}
						}
					],
					"implementationOf": {
						"type": "reference",
						"target": 34,
						"name": "IFetcher.fetchBlockInfo"
					}
				},
				{
					"id": 457,
					"name": "fetchCollectionAssets",
					"variant": "declaration",
					"kind": 2048,
					"flags": {},
					"sources": [
						{
							"fileName": "providers/koios.provider.ts",
							"line": 186,
							"character": 8,
							"url": "https://github.com/MeshJS/mesh/blob/1cc00f9/packages/module/src/providers/koios.provider.ts#L186"
						}
					],
					"signatures": [
						{
							"id": 458,
							"name": "fetchCollectionAssets",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"sources": [
								{
									"fileName": "providers/koios.provider.ts",
									"line": 186,
									"character": 8,
									"url": "https://github.com/MeshJS/mesh/blob/1cc00f9/packages/module/src/providers/koios.provider.ts#L186"
								}
							],
							"parameters": [
								{
									"id": 459,
									"name": "policyId",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 460,
									"name": "cursor",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "number"
									},
									"defaultValue": "0"
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Promise"
								},
								"typeArguments": [
									{
										"type": "reflection",
										"declaration": {
											"id": 461,
											"name": "__type",
											"variant": "declaration",
											"kind": 65536,
											"flags": {},
											"children": [
												{
													"id": 462,
													"name": "assets",
													"variant": "declaration",
													"kind": 1024,
													"flags": {},
													"sources": [
														{
															"fileName": "providers/koios.provider.ts",
															"line": 189,
															"character": 15,
															"url": "https://github.com/MeshJS/mesh/blob/1cc00f9/packages/module/src/providers/koios.provider.ts#L189"
														}
													],
													"type": {
														"type": "array",
														"elementType": {
															"type": "reference",
															"target": {
																"sourceFileName": "src/types/Asset.ts",
																"qualifiedName": "Asset"
															},
															"name": "Asset",
															"package": "@meshsdk/core"
														}
													}
												},
												{
													"id": 463,
													"name": "next",
													"variant": "declaration",
													"kind": 1024,
													"flags": {},
													"sources": [
														{
															"fileName": "providers/koios.provider.ts",
															"line": 189,
															"character": 32,
															"url": "https://github.com/MeshJS/mesh/blob/1cc00f9/packages/module/src/providers/koios.provider.ts#L189"
														}
													],
													"type": {
														"type": "union",
														"types": [
															{
																"type": "literal",
																"value": null
															},
															{
																"type": "intrinsic",
																"name": "string"
															},
															{
																"type": "intrinsic",
																"name": "number"
															}
														]
													}
												}
											],
											"groups": [
												{
													"title": "Properties",
													"children": [
														462,
														463
													]
												}
											],
											"sources": [
												{
													"fileName": "providers/koios.provider.ts",
													"line": 189,
													"character": 13,
													"url": "https://github.com/MeshJS/mesh/blob/1cc00f9/packages/module/src/providers/koios.provider.ts#L189"
												}
											]
										}
									}
								],
								"name": "Promise",
								"package": "typescript"
							},
							"implementationOf": {
								"type": "reference",
								"target": 38,
								"name": "IFetcher.fetchCollectionAssets"
							}
						}
					],
					"implementationOf": {
						"type": "reference",
						"target": 37,
						"name": "IFetcher.fetchCollectionAssets"
					}
				},
				{
					"id": 464,
					"name": "fetchHandleAddress",
					"variant": "declaration",
					"kind": 2048,
					"flags": {},
					"sources": [
						{
							"fileName": "providers/koios.provider.ts",
							"line": 210,
							"character": 8,
							"url": "https://github.com/MeshJS/mesh/blob/1cc00f9/packages/module/src/providers/koios.provider.ts#L210"
						}
					],
					"signatures": [
						{
							"id": 465,
							"name": "fetchHandleAddress",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"sources": [
								{
									"fileName": "providers/koios.provider.ts",
									"line": 210,
									"character": 8,
									"url": "https://github.com/MeshJS/mesh/blob/1cc00f9/packages/module/src/providers/koios.provider.ts#L210"
								}
							],
							"parameters": [
								{
									"id": 466,
									"name": "handle",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Promise"
								},
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "string"
									}
								],
								"name": "Promise",
								"package": "typescript"
							},
							"implementationOf": {
								"type": "reference",
								"target": 45,
								"name": "IFetcher.fetchHandleAddress"
							}
						}
					],
					"implementationOf": {
						"type": "reference",
						"target": 44,
						"name": "IFetcher.fetchHandleAddress"
					}
				},
				{
					"id": 467,
					"name": "fetchProtocolParameters",
					"variant": "declaration",
					"kind": 2048,
					"flags": {},
					"sources": [
						{
							"fileName": "providers/koios.provider.ts",
							"line": 225,
							"character": 8,
							"url": "https://github.com/MeshJS/mesh/blob/1cc00f9/packages/module/src/providers/koios.provider.ts#L225"
						}
					],
					"signatures": [
						{
							"id": 468,
							"name": "fetchProtocolParameters",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"sources": [
								{
									"fileName": "providers/koios.provider.ts",
									"line": 225,
									"character": 8,
									"url": "https://github.com/MeshJS/mesh/blob/1cc00f9/packages/module/src/providers/koios.provider.ts#L225"
								}
							],
							"parameters": [
								{
									"id": 469,
									"name": "epoch",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "number"
									}
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Promise"
								},
								"typeArguments": [
									{
										"type": "reference",
										"target": {
											"sourceFileName": "src/types/Protocol.ts",
											"qualifiedName": "Protocol"
										},
										"name": "Protocol",
										"package": "@meshsdk/core"
									}
								],
								"name": "Promise",
								"package": "typescript"
							},
							"implementationOf": {
								"type": "reference",
								"target": 48,
								"name": "IFetcher.fetchProtocolParameters"
							}
						}
					],
					"implementationOf": {
						"type": "reference",
						"target": 47,
						"name": "IFetcher.fetchProtocolParameters"
					}
				},
				{
					"id": 470,
					"name": "fetchTxInfo",
					"variant": "declaration",
					"kind": 2048,
					"flags": {},
					"sources": [
						{
							"fileName": "providers/koios.provider.ts",
							"line": 261,
							"character": 8,
							"url": "https://github.com/MeshJS/mesh/blob/1cc00f9/packages/module/src/providers/koios.provider.ts#L261"
						}
					],
					"signatures": [
						{
							"id": 471,
							"name": "fetchTxInfo",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"sources": [
								{
									"fileName": "providers/koios.provider.ts",
									"line": 261,
									"character": 8,
									"url": "https://github.com/MeshJS/mesh/blob/1cc00f9/packages/module/src/providers/koios.provider.ts#L261"
								}
							],
							"parameters": [
								{
									"id": 472,
									"name": "hash",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Promise"
								},
								"typeArguments": [
									{
										"type": "reference",
										"target": {
											"sourceFileName": "src/types/TransactionInfo.ts",
											"qualifiedName": "TransactionInfo"
										},
										"name": "TransactionInfo",
										"package": "@meshsdk/core"
									}
								],
								"name": "Promise",
								"package": "typescript"
							},
							"implementationOf": {
								"type": "reference",
								"target": 51,
								"name": "IFetcher.fetchTxInfo"
							}
						}
					],
					"implementationOf": {
						"type": "reference",
						"target": 50,
						"name": "IFetcher.fetchTxInfo"
					}
				},
				{
					"id": 473,
					"name": "fetchUTxOs",
					"variant": "declaration",
					"kind": 2048,
					"flags": {},
					"sources": [
						{
							"fileName": "providers/koios.provider.ts",
							"line": 286,
							"character": 8,
							"url": "https://github.com/MeshJS/mesh/blob/1cc00f9/packages/module/src/providers/koios.provider.ts#L286"
						}
					],
					"signatures": [
						{
							"id": 474,
							"name": "fetchUTxOs",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"sources": [
								{
									"fileName": "providers/koios.provider.ts",
									"line": 286,
									"character": 8,
									"url": "https://github.com/MeshJS/mesh/blob/1cc00f9/packages/module/src/providers/koios.provider.ts#L286"
								}
							],
							"parameters": [
								{
									"id": 475,
									"name": "hash",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Promise"
								},
								"typeArguments": [
									{
										"type": "array",
										"elementType": {
											"type": "reference",
											"target": {
												"sourceFileName": "src/types/UTxO.ts",
												"qualifiedName": "UTxO"
											},
											"name": "UTxO",
											"package": "@meshsdk/core"
										}
									}
								],
								"name": "Promise",
								"package": "typescript"
							},
							"implementationOf": {
								"type": "reference",
								"target": 54,
								"name": "IFetcher.fetchUTxOs"
							}
						}
					],
					"implementationOf": {
						"type": "reference",
						"target": 53,
						"name": "IFetcher.fetchUTxOs"
					}
				},
				{
					"id": 476,
					"name": "onTxConfirmed",
					"variant": "declaration",
					"kind": 2048,
					"flags": {},
					"sources": [
						{
							"fileName": "providers/koios.provider.ts",
							"line": 304,
							"character": 2,
							"url": "https://github.com/MeshJS/mesh/blob/1cc00f9/packages/module/src/providers/koios.provider.ts#L304"
						}
					],
					"signatures": [
						{
							"id": 477,
							"name": "onTxConfirmed",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"sources": [
								{
									"fileName": "providers/koios.provider.ts",
									"line": 304,
									"character": 2,
									"url": "https://github.com/MeshJS/mesh/blob/1cc00f9/packages/module/src/providers/koios.provider.ts#L304"
								}
							],
							"parameters": [
								{
									"id": 478,
									"name": "txHash",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 479,
									"name": "callback",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"type": {
										"type": "reflection",
										"declaration": {
											"id": 480,
											"name": "__type",
											"variant": "declaration",
											"kind": 65536,
											"flags": {},
											"sources": [
												{
													"fileName": "providers/koios.provider.ts",
													"line": 304,
													"character": 42,
													"url": "https://github.com/MeshJS/mesh/blob/1cc00f9/packages/module/src/providers/koios.provider.ts#L304"
												}
											],
											"signatures": [
												{
													"id": 481,
													"name": "__type",
													"variant": "signature",
													"kind": 4096,
													"flags": {},
													"sources": [
														{
															"fileName": "providers/koios.provider.ts",
															"line": 304,
															"character": 42,
															"url": "https://github.com/MeshJS/mesh/blob/1cc00f9/packages/module/src/providers/koios.provider.ts#L304"
														}
													],
													"type": {
														"type": "intrinsic",
														"name": "void"
													}
												}
											]
										}
									}
								},
								{
									"id": 482,
									"name": "limit",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "number"
									},
									"defaultValue": "100"
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "void"
							},
							"implementationOf": {
								"type": "reference",
								"target": 66,
								"name": "IListener.onTxConfirmed"
							}
						}
					],
					"implementationOf": {
						"type": "reference",
						"target": 65,
						"name": "IListener.onTxConfirmed"
					}
				},
				{
					"id": 490,
					"name": "resolveScriptRef",
					"variant": "declaration",
					"kind": 2048,
					"flags": {
						"isPrivate": true
					},
					"sources": [
						{
							"fileName": "providers/koios.provider.ts",
							"line": 373,
							"character": 10,
							"url": "https://github.com/MeshJS/mesh/blob/1cc00f9/packages/module/src/providers/koios.provider.ts#L373"
						}
					],
					"signatures": [
						{
							"id": 491,
							"name": "resolveScriptRef",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"sources": [
								{
									"fileName": "providers/koios.provider.ts",
									"line": 373,
									"character": 29,
									"url": "https://github.com/MeshJS/mesh/blob/1cc00f9/packages/module/src/providers/koios.provider.ts#L373"
								}
							],
							"parameters": [
								{
									"id": 492,
									"name": "kScriptRef",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "any"
									}
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "undefined"
									},
									{
										"type": "intrinsic",
										"name": "string"
									}
								]
							}
						}
					]
				},
				{
					"id": 483,
					"name": "submitTx",
					"variant": "declaration",
					"kind": 2048,
					"flags": {},
					"sources": [
						{
							"fileName": "providers/koios.provider.ts",
							"line": 329,
							"character": 8,
							"url": "https://github.com/MeshJS/mesh/blob/1cc00f9/packages/module/src/providers/koios.provider.ts#L329"
						}
					],
					"signatures": [
						{
							"id": 484,
							"name": "submitTx",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"sources": [
								{
									"fileName": "providers/koios.provider.ts",
									"line": 329,
									"character": 8,
									"url": "https://github.com/MeshJS/mesh/blob/1cc00f9/packages/module/src/providers/koios.provider.ts#L329"
								}
							],
							"parameters": [
								{
									"id": 485,
									"name": "tx",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Promise"
								},
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "string"
									}
								],
								"name": "Promise",
								"package": "typescript"
							},
							"implementationOf": {
								"type": "reference",
								"target": 87,
								"name": "ISubmitter.submitTx"
							}
						}
					],
					"implementationOf": {
						"type": "reference",
						"target": 86,
						"name": "ISubmitter.submitTx"
					}
				},
				{
					"id": 486,
					"name": "toUTxO",
					"variant": "declaration",
					"kind": 2048,
					"flags": {
						"isPrivate": true
					},
					"sources": [
						{
							"fileName": "providers/koios.provider.ts",
							"line": 347,
							"character": 10,
							"url": "https://github.com/MeshJS/mesh/blob/1cc00f9/packages/module/src/providers/koios.provider.ts#L347"
						}
					],
					"signatures": [
						{
							"id": 487,
							"name": "toUTxO",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"sources": [
								{
									"fileName": "providers/koios.provider.ts",
									"line": 347,
									"character": 10,
									"url": "https://github.com/MeshJS/mesh/blob/1cc00f9/packages/module/src/providers/koios.provider.ts#L347"
								}
							],
							"parameters": [
								{
									"id": 488,
									"name": "utxo",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "any"
									}
								},
								{
									"id": 489,
									"name": "address",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "src/types/UTxO.ts",
									"qualifiedName": "UTxO"
								},
								"name": "UTxO",
								"package": "@meshsdk/core"
							}
						}
					]
				}
			],
			"groups": [
				{
					"title": "Constructors",
					"children": [
						430
					]
				},
				{
					"title": "Properties",
					"children": [
						437
					]
				},
				{
					"title": "Methods",
					"children": [
						438,
						441,
						445,
						451,
						454,
						457,
						464,
						467,
						470,
						473,
						476,
						490,
						483,
						486
					]
				}
			],
			"sources": [
				{
					"fileName": "providers/koios.provider.ts",
					"line": 26,
					"character": 13,
					"url": "https://github.com/MeshJS/mesh/blob/1cc00f9/packages/module/src/providers/koios.provider.ts#L26"
				}
			],
			"implementedTypes": [
				{
					"type": "reference",
					"target": 17,
					"name": "IFetcher",
					"package": "@meshsdk/core"
				},
				{
					"type": "reference",
					"target": 64,
					"name": "IListener",
					"package": "@meshsdk/core"
				},
				{
					"type": "reference",
					"target": 85,
					"name": "ISubmitter",
					"package": "@meshsdk/core"
				}
			]
		},
		{
			"id": 526,
			"name": "MaestroProvider",
			"variant": "declaration",
			"kind": 128,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "Fetcher interface defines end points to query blockchain data."
					}
				]
			},
			"children": [
				{
					"id": 527,
					"name": "constructor",
					"variant": "declaration",
					"kind": 512,
					"flags": {},
					"sources": [
						{
							"fileName": "providers/maestro.provider.ts",
							"line": 42,
							"character": 2,
							"url": "https://github.com/MeshJS/mesh/blob/1cc00f9/packages/module/src/providers/maestro.provider.ts#L42"
						}
					],
					"signatures": [
						{
							"id": 528,
							"name": "new MaestroProvider",
							"variant": "signature",
							"kind": 16384,
							"flags": {},
							"sources": [
								{
									"fileName": "providers/maestro.provider.ts",
									"line": 42,
									"character": 2,
									"url": "https://github.com/MeshJS/mesh/blob/1cc00f9/packages/module/src/providers/maestro.provider.ts#L42"
								}
							],
							"parameters": [
								{
									"id": 529,
									"name": "__namedParameters",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"type": {
										"type": "reference",
										"target": 522,
										"name": "MaestroConfig",
										"package": "@meshsdk/core"
									}
								}
							],
							"type": {
								"type": "reference",
								"target": 526,
								"name": "MaestroProvider",
								"package": "@meshsdk/core"
							}
						}
					]
				},
				{
					"id": 531,
					"name": "_amountsAsStrings",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isPrivate": true,
						"isReadonly": true
					},
					"sources": [
						{
							"fileName": "providers/maestro.provider.ts",
							"line": 34,
							"character": 19,
							"url": "https://github.com/MeshJS/mesh/blob/1cc00f9/packages/module/src/providers/maestro.provider.ts#L34"
						}
					],
					"type": {
						"type": "reflection",
						"declaration": {
							"id": 532,
							"name": "__type",
							"variant": "declaration",
							"kind": 65536,
							"flags": {},
							"children": [
								{
									"id": 533,
									"name": "headers",
									"variant": "declaration",
									"kind": 1024,
									"flags": {},
									"sources": [
										{
											"fileName": "providers/maestro.provider.ts",
											"line": 35,
											"character": 4,
											"url": "https://github.com/MeshJS/mesh/blob/1cc00f9/packages/module/src/providers/maestro.provider.ts#L35"
										}
									],
									"type": {
										"type": "reflection",
										"declaration": {
											"id": 534,
											"name": "__type",
											"variant": "declaration",
											"kind": 65536,
											"flags": {},
											"children": [
												{
													"id": 535,
													"name": "amounts-as-strings",
													"variant": "declaration",
													"kind": 1024,
													"flags": {},
													"sources": [
														{
															"fileName": "providers/maestro.provider.ts",
															"line": 36,
															"character": 6,
															"url": "https://github.com/MeshJS/mesh/blob/1cc00f9/packages/module/src/providers/maestro.provider.ts#L36"
														}
													],
													"type": {
														"type": "intrinsic",
														"name": "string"
													},
													"defaultValue": "'true'"
												}
											],
											"groups": [
												{
													"title": "Properties",
													"children": [
														535
													]
												}
											],
											"sources": [
												{
													"fileName": "providers/maestro.provider.ts",
													"line": 35,
													"character": 13,
													"url": "https://github.com/MeshJS/mesh/blob/1cc00f9/packages/module/src/providers/maestro.provider.ts#L35"
												}
											]
										}
									},
									"defaultValue": "..."
								}
							],
							"groups": [
								{
									"title": "Properties",
									"children": [
										533
									]
								}
							],
							"sources": [
								{
									"fileName": "providers/maestro.provider.ts",
									"line": 34,
									"character": 39,
									"url": "https://github.com/MeshJS/mesh/blob/1cc00f9/packages/module/src/providers/maestro.provider.ts#L34"
								}
							]
						}
					},
					"defaultValue": "..."
				},
				{
					"id": 530,
					"name": "_axiosInstance",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isPrivate": true,
						"isReadonly": true
					},
					"sources": [
						{
							"fileName": "providers/maestro.provider.ts",
							"line": 33,
							"character": 19,
							"url": "https://github.com/MeshJS/mesh/blob/1cc00f9/packages/module/src/providers/maestro.provider.ts#L33"
						}
					],
					"type": {
						"type": "reference",
						"target": {
							"sourceFileName": "../../node_modules/axios/index.d.ts",
							"qualifiedName": "AxiosInstance"
						},
						"name": "AxiosInstance",
						"package": "axios"
					}
				},
				{
					"id": 536,
					"name": "submitUrl",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"sources": [
						{
							"fileName": "providers/maestro.provider.ts",
							"line": 40,
							"character": 2,
							"url": "https://github.com/MeshJS/mesh/blob/1cc00f9/packages/module/src/providers/maestro.provider.ts#L40"
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 537,
					"name": "evaluateTx",
					"variant": "declaration",
					"kind": 2048,
					"flags": {},
					"sources": [
						{
							"fileName": "providers/maestro.provider.ts",
							"line": 50,
							"character": 8,
							"url": "https://github.com/MeshJS/mesh/blob/1cc00f9/packages/module/src/providers/maestro.provider.ts#L50"
						}
					],
					"signatures": [
						{
							"id": 538,
							"name": "evaluateTx",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"sources": [
								{
									"fileName": "providers/maestro.provider.ts",
									"line": 50,
									"character": 8,
									"url": "https://github.com/MeshJS/mesh/blob/1cc00f9/packages/module/src/providers/maestro.provider.ts#L50"
								}
							],
							"parameters": [
								{
									"id": 539,
									"name": "cbor",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Promise"
								},
								"typeArguments": [
									{
										"type": "array",
										"elementType": {
											"type": "reference",
											"target": {
												"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
												"qualifiedName": "Omit"
											},
											"typeArguments": [
												{
													"type": "reference",
													"target": {
														"sourceFileName": "src/types/Action.ts",
														"qualifiedName": "Action"
													},
													"name": "Action",
													"package": "@meshsdk/core"
												},
												{
													"type": "literal",
													"value": "data"
												}
											],
											"name": "Omit",
											"package": "typescript"
										}
									}
								],
								"name": "Promise",
								"package": "typescript"
							},
							"implementationOf": {
								"type": "reference",
								"target": 15,
								"name": "IEvaluator.evaluateTx"
							}
						}
					],
					"implementationOf": {
						"type": "reference",
						"target": 14,
						"name": "IEvaluator.evaluateTx"
					}
				},
				{
					"id": 540,
					"name": "fetchAccountInfo",
					"variant": "declaration",
					"kind": 2048,
					"flags": {},
					"sources": [
						{
							"fileName": "providers/maestro.provider.ts",
							"line": 78,
							"character": 8,
							"url": "https://github.com/MeshJS/mesh/blob/1cc00f9/packages/module/src/providers/maestro.provider.ts#L78"
						}
					],
					"signatures": [
						{
							"id": 541,
							"name": "fetchAccountInfo",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"sources": [
								{
									"fileName": "providers/maestro.provider.ts",
									"line": 78,
									"character": 8,
									"url": "https://github.com/MeshJS/mesh/blob/1cc00f9/packages/module/src/providers/maestro.provider.ts#L78"
								}
							],
							"parameters": [
								{
									"id": 542,
									"name": "address",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Promise"
								},
								"typeArguments": [
									{
										"type": "reference",
										"target": {
											"sourceFileName": "src/types/AccountInfo.ts",
											"qualifiedName": "AccountInfo"
										},
										"name": "AccountInfo",
										"package": "@meshsdk/core"
									}
								],
								"name": "Promise",
								"package": "typescript"
							},
							"implementationOf": {
								"type": "reference",
								"target": 19,
								"name": "IFetcher.fetchAccountInfo"
							}
						}
					],
					"implementationOf": {
						"type": "reference",
						"target": 18,
						"name": "IFetcher.fetchAccountInfo"
					}
				},
				{
					"id": 543,
					"name": "fetchAddressUTxOs",
					"variant": "declaration",
					"kind": 2048,
					"flags": {},
					"sources": [
						{
							"fileName": "providers/maestro.provider.ts",
							"line": 106,
							"character": 8,
							"url": "https://github.com/MeshJS/mesh/blob/1cc00f9/packages/module/src/providers/maestro.provider.ts#L106"
						}
					],
					"signatures": [
						{
							"id": 544,
							"name": "fetchAddressUTxOs",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"sources": [
								{
									"fileName": "providers/maestro.provider.ts",
									"line": 106,
									"character": 8,
									"url": "https://github.com/MeshJS/mesh/blob/1cc00f9/packages/module/src/providers/maestro.provider.ts#L106"
								}
							],
							"parameters": [
								{
									"id": 545,
									"name": "address",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 546,
									"name": "asset",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Promise"
								},
								"typeArguments": [
									{
										"type": "array",
										"elementType": {
											"type": "reference",
											"target": {
												"sourceFileName": "src/types/UTxO.ts",
												"qualifiedName": "UTxO"
											},
											"name": "UTxO",
											"package": "@meshsdk/core"
										}
									}
								],
								"name": "Promise",
								"package": "typescript"
							},
							"implementationOf": {
								"type": "reference",
								"target": 22,
								"name": "IFetcher.fetchAddressUTxOs"
							}
						}
					],
					"implementationOf": {
						"type": "reference",
						"target": 21,
						"name": "IFetcher.fetchAddressUTxOs"
					}
				},
				{
					"id": 547,
					"name": "fetchAssetAddresses",
					"variant": "declaration",
					"kind": 2048,
					"flags": {},
					"sources": [
						{
							"fileName": "providers/maestro.provider.ts",
							"line": 145,
							"character": 8,
							"url": "https://github.com/MeshJS/mesh/blob/1cc00f9/packages/module/src/providers/maestro.provider.ts#L145"
						}
					],
					"signatures": [
						{
							"id": 548,
							"name": "fetchAssetAddresses",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"sources": [
								{
									"fileName": "providers/maestro.provider.ts",
									"line": 145,
									"character": 8,
									"url": "https://github.com/MeshJS/mesh/blob/1cc00f9/packages/module/src/providers/maestro.provider.ts#L145"
								}
							],
							"parameters": [
								{
									"id": 549,
									"name": "asset",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Promise"
								},
								"typeArguments": [
									{
										"type": "array",
										"elementType": {
											"type": "reflection",
											"declaration": {
												"id": 550,
												"name": "__type",
												"variant": "declaration",
												"kind": 65536,
												"flags": {},
												"children": [
													{
														"id": 551,
														"name": "address",
														"variant": "declaration",
														"kind": 1024,
														"flags": {},
														"sources": [
															{
																"fileName": "providers/maestro.provider.ts",
																"line": 147,
																"character": 15,
																"url": "https://github.com/MeshJS/mesh/blob/1cc00f9/packages/module/src/providers/maestro.provider.ts#L147"
															}
														],
														"type": {
															"type": "intrinsic",
															"name": "string"
														}
													},
													{
														"id": 552,
														"name": "quantity",
														"variant": "declaration",
														"kind": 1024,
														"flags": {},
														"sources": [
															{
																"fileName": "providers/maestro.provider.ts",
																"line": 147,
																"character": 32,
																"url": "https://github.com/MeshJS/mesh/blob/1cc00f9/packages/module/src/providers/maestro.provider.ts#L147"
															}
														],
														"type": {
															"type": "intrinsic",
															"name": "string"
														}
													}
												],
												"groups": [
													{
														"title": "Properties",
														"children": [
															551,
															552
														]
													}
												],
												"sources": [
													{
														"fileName": "providers/maestro.provider.ts",
														"line": 147,
														"character": 13,
														"url": "https://github.com/MeshJS/mesh/blob/1cc00f9/packages/module/src/providers/maestro.provider.ts#L147"
													}
												]
											}
										}
									}
								],
								"name": "Promise",
								"package": "typescript"
							},
							"implementationOf": {
								"type": "reference",
								"target": 26,
								"name": "IFetcher.fetchAssetAddresses"
							}
						}
					],
					"implementationOf": {
						"type": "reference",
						"target": 25,
						"name": "IFetcher.fetchAssetAddresses"
					}
				},
				{
					"id": 553,
					"name": "fetchAssetMetadata",
					"variant": "declaration",
					"kind": 2048,
					"flags": {},
					"sources": [
						{
							"fileName": "providers/maestro.provider.ts",
							"line": 186,
							"character": 8,
							"url": "https://github.com/MeshJS/mesh/blob/1cc00f9/packages/module/src/providers/maestro.provider.ts#L186"
						}
					],
					"signatures": [
						{
							"id": 554,
							"name": "fetchAssetMetadata",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"sources": [
								{
									"fileName": "providers/maestro.provider.ts",
									"line": 186,
									"character": 8,
									"url": "https://github.com/MeshJS/mesh/blob/1cc00f9/packages/module/src/providers/maestro.provider.ts#L186"
								}
							],
							"parameters": [
								{
									"id": 555,
									"name": "asset",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Promise"
								},
								"typeArguments": [
									{
										"type": "reference",
										"target": {
											"sourceFileName": "src/types/AssetMetadata.ts",
											"qualifiedName": "AssetMetadata"
										},
										"name": "AssetMetadata",
										"package": "@meshsdk/core"
									}
								],
								"name": "Promise",
								"package": "typescript"
							},
							"implementationOf": {
								"type": "reference",
								"target": 32,
								"name": "IFetcher.fetchAssetMetadata"
							}
						}
					],
					"implementationOf": {
						"type": "reference",
						"target": 31,
						"name": "IFetcher.fetchAssetMetadata"
					}
				},
				{
					"id": 556,
					"name": "fetchBlockInfo",
					"variant": "declaration",
					"kind": 2048,
					"flags": {},
					"sources": [
						{
							"fileName": "providers/maestro.provider.ts",
							"line": 207,
							"character": 8,
							"url": "https://github.com/MeshJS/mesh/blob/1cc00f9/packages/module/src/providers/maestro.provider.ts#L207"
						}
					],
					"signatures": [
						{
							"id": 557,
							"name": "fetchBlockInfo",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"sources": [
								{
									"fileName": "providers/maestro.provider.ts",
									"line": 207,
									"character": 8,
									"url": "https://github.com/MeshJS/mesh/blob/1cc00f9/packages/module/src/providers/maestro.provider.ts#L207"
								}
							],
							"parameters": [
								{
									"id": 558,
									"name": "hash",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Promise"
								},
								"typeArguments": [
									{
										"type": "reference",
										"target": {
											"sourceFileName": "src/types/BlockInfo.ts",
											"qualifiedName": "BlockInfo"
										},
										"name": "BlockInfo",
										"package": "@meshsdk/core"
									}
								],
								"name": "Promise",
								"package": "typescript"
							},
							"implementationOf": {
								"type": "reference",
								"target": 35,
								"name": "IFetcher.fetchBlockInfo"
							}
						}
					],
					"implementationOf": {
						"type": "reference",
						"target": 34,
						"name": "IFetcher.fetchBlockInfo"
					}
				},
				{
					"id": 559,
					"name": "fetchCollectionAssets",
					"variant": "declaration",
					"kind": 2048,
					"flags": {},
					"sources": [
						{
							"fileName": "providers/maestro.provider.ts",
							"line": 241,
							"character": 8,
							"url": "https://github.com/MeshJS/mesh/blob/1cc00f9/packages/module/src/providers/maestro.provider.ts#L241"
						}
					],
					"signatures": [
						{
							"id": 560,
							"name": "fetchCollectionAssets",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"sources": [
								{
									"fileName": "providers/maestro.provider.ts",
									"line": 241,
									"character": 8,
									"url": "https://github.com/MeshJS/mesh/blob/1cc00f9/packages/module/src/providers/maestro.provider.ts#L241"
								}
							],
							"parameters": [
								{
									"id": 561,
									"name": "policyId",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 562,
									"name": "cursor",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Promise"
								},
								"typeArguments": [
									{
										"type": "reflection",
										"declaration": {
											"id": 563,
											"name": "__type",
											"variant": "declaration",
											"kind": 65536,
											"flags": {},
											"children": [
												{
													"id": 564,
													"name": "assets",
													"variant": "declaration",
													"kind": 1024,
													"flags": {},
													"sources": [
														{
															"fileName": "providers/maestro.provider.ts",
															"line": 244,
															"character": 15,
															"url": "https://github.com/MeshJS/mesh/blob/1cc00f9/packages/module/src/providers/maestro.provider.ts#L244"
														}
													],
													"type": {
														"type": "array",
														"elementType": {
															"type": "reference",
															"target": {
																"sourceFileName": "src/types/Asset.ts",
																"qualifiedName": "Asset"
															},
															"name": "Asset",
															"package": "@meshsdk/core"
														}
													}
												},
												{
													"id": 565,
													"name": "next",
													"variant": "declaration",
													"kind": 1024,
													"flags": {},
													"sources": [
														{
															"fileName": "providers/maestro.provider.ts",
															"line": 244,
															"character": 32,
															"url": "https://github.com/MeshJS/mesh/blob/1cc00f9/packages/module/src/providers/maestro.provider.ts#L244"
														}
													],
													"type": {
														"type": "union",
														"types": [
															{
																"type": "literal",
																"value": null
															},
															{
																"type": "intrinsic",
																"name": "string"
															},
															{
																"type": "intrinsic",
																"name": "number"
															}
														]
													}
												}
											],
											"groups": [
												{
													"title": "Properties",
													"children": [
														564,
														565
													]
												}
											],
											"sources": [
												{
													"fileName": "providers/maestro.provider.ts",
													"line": 244,
													"character": 13,
													"url": "https://github.com/MeshJS/mesh/blob/1cc00f9/packages/module/src/providers/maestro.provider.ts#L244"
												}
											]
										}
									}
								],
								"name": "Promise",
								"package": "typescript"
							},
							"implementationOf": {
								"type": "reference",
								"target": 38,
								"name": "IFetcher.fetchCollectionAssets"
							}
						}
					],
					"implementationOf": {
						"type": "reference",
						"target": 37,
						"name": "IFetcher.fetchCollectionAssets"
					}
				},
				{
					"id": 566,
					"name": "fetchHandleAddress",
					"variant": "declaration",
					"kind": 2048,
					"flags": {},
					"sources": [
						{
							"fileName": "providers/maestro.provider.ts",
							"line": 269,
							"character": 8,
							"url": "https://github.com/MeshJS/mesh/blob/1cc00f9/packages/module/src/providers/maestro.provider.ts#L269"
						}
					],
					"signatures": [
						{
							"id": 567,
							"name": "fetchHandleAddress",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"sources": [
								{
									"fileName": "providers/maestro.provider.ts",
									"line": 269,
									"character": 8,
									"url": "https://github.com/MeshJS/mesh/blob/1cc00f9/packages/module/src/providers/maestro.provider.ts#L269"
								}
							],
							"parameters": [
								{
									"id": 568,
									"name": "handle",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Promise"
								},
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "string"
									}
								],
								"name": "Promise",
								"package": "typescript"
							},
							"implementationOf": {
								"type": "reference",
								"target": 45,
								"name": "IFetcher.fetchHandleAddress"
							}
						}
					],
					"implementationOf": {
						"type": "reference",
						"target": 44,
						"name": "IFetcher.fetchHandleAddress"
					}
				},
				{
					"id": 569,
					"name": "fetchProtocolParameters",
					"variant": "declaration",
					"kind": 2048,
					"flags": {},
					"sources": [
						{
							"fileName": "providers/maestro.provider.ts",
							"line": 285,
							"character": 8,
							"url": "https://github.com/MeshJS/mesh/blob/1cc00f9/packages/module/src/providers/maestro.provider.ts#L285"
						}
					],
					"signatures": [
						{
							"id": 570,
							"name": "fetchProtocolParameters",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"sources": [
								{
									"fileName": "providers/maestro.provider.ts",
									"line": 285,
									"character": 8,
									"url": "https://github.com/MeshJS/mesh/blob/1cc00f9/packages/module/src/providers/maestro.provider.ts#L285"
								}
							],
							"parameters": [
								{
									"id": 571,
									"name": "epoch",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "number"
									},
									"defaultValue": "Number.NaN"
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Promise"
								},
								"typeArguments": [
									{
										"type": "reference",
										"target": {
											"sourceFileName": "src/types/Protocol.ts",
											"qualifiedName": "Protocol"
										},
										"name": "Protocol",
										"package": "@meshsdk/core"
									}
								],
								"name": "Promise",
								"package": "typescript"
							},
							"implementationOf": {
								"type": "reference",
								"target": 48,
								"name": "IFetcher.fetchProtocolParameters"
							}
						}
					],
					"implementationOf": {
						"type": "reference",
						"target": 47,
						"name": "IFetcher.fetchProtocolParameters"
					}
				},
				{
					"id": 572,
					"name": "fetchTxInfo",
					"variant": "declaration",
					"kind": 2048,
					"flags": {},
					"sources": [
						{
							"fileName": "providers/maestro.provider.ts",
							"line": 348,
							"character": 8,
							"url": "https://github.com/MeshJS/mesh/blob/1cc00f9/packages/module/src/providers/maestro.provider.ts#L348"
						}
					],
					"signatures": [
						{
							"id": 573,
							"name": "fetchTxInfo",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"sources": [
								{
									"fileName": "providers/maestro.provider.ts",
									"line": 348,
									"character": 8,
									"url": "https://github.com/MeshJS/mesh/blob/1cc00f9/packages/module/src/providers/maestro.provider.ts#L348"
								}
							],
							"parameters": [
								{
									"id": 574,
									"name": "hash",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Promise"
								},
								"typeArguments": [
									{
										"type": "reference",
										"target": {
											"sourceFileName": "src/types/TransactionInfo.ts",
											"qualifiedName": "TransactionInfo"
										},
										"name": "TransactionInfo",
										"package": "@meshsdk/core"
									}
								],
								"name": "Promise",
								"package": "typescript"
							},
							"implementationOf": {
								"type": "reference",
								"target": 51,
								"name": "IFetcher.fetchTxInfo"
							}
						}
					],
					"implementationOf": {
						"type": "reference",
						"target": 50,
						"name": "IFetcher.fetchTxInfo"
					}
				},
				{
					"id": 575,
					"name": "fetchUTxOs",
					"variant": "declaration",
					"kind": 2048,
					"flags": {},
					"sources": [
						{
							"fileName": "providers/maestro.provider.ts",
							"line": 374,
							"character": 8,
							"url": "https://github.com/MeshJS/mesh/blob/1cc00f9/packages/module/src/providers/maestro.provider.ts#L374"
						}
					],
					"signatures": [
						{
							"id": 576,
							"name": "fetchUTxOs",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"sources": [
								{
									"fileName": "providers/maestro.provider.ts",
									"line": 374,
									"character": 8,
									"url": "https://github.com/MeshJS/mesh/blob/1cc00f9/packages/module/src/providers/maestro.provider.ts#L374"
								}
							],
							"parameters": [
								{
									"id": 577,
									"name": "hash",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Promise"
								},
								"typeArguments": [
									{
										"type": "array",
										"elementType": {
											"type": "reference",
											"target": {
												"sourceFileName": "src/types/UTxO.ts",
												"qualifiedName": "UTxO"
											},
											"name": "UTxO",
											"package": "@meshsdk/core"
										}
									}
								],
								"name": "Promise",
								"package": "typescript"
							},
							"implementationOf": {
								"type": "reference",
								"target": 54,
								"name": "IFetcher.fetchUTxOs"
							}
						}
					],
					"implementationOf": {
						"type": "reference",
						"target": 53,
						"name": "IFetcher.fetchUTxOs"
					}
				},
				{
					"id": 578,
					"name": "onTxConfirmed",
					"variant": "declaration",
					"kind": 2048,
					"flags": {},
					"sources": [
						{
							"fileName": "providers/maestro.provider.ts",
							"line": 391,
							"character": 2,
							"url": "https://github.com/MeshJS/mesh/blob/1cc00f9/packages/module/src/providers/maestro.provider.ts#L391"
						}
					],
					"signatures": [
						{
							"id": 579,
							"name": "onTxConfirmed",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"sources": [
								{
									"fileName": "providers/maestro.provider.ts",
									"line": 391,
									"character": 2,
									"url": "https://github.com/MeshJS/mesh/blob/1cc00f9/packages/module/src/providers/maestro.provider.ts#L391"
								}
							],
							"parameters": [
								{
									"id": 580,
									"name": "txHash",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 581,
									"name": "callback",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"type": {
										"type": "reflection",
										"declaration": {
											"id": 582,
											"name": "__type",
											"variant": "declaration",
											"kind": 65536,
											"flags": {},
											"sources": [
												{
													"fileName": "providers/maestro.provider.ts",
													"line": 391,
													"character": 42,
													"url": "https://github.com/MeshJS/mesh/blob/1cc00f9/packages/module/src/providers/maestro.provider.ts#L391"
												}
											],
											"signatures": [
												{
													"id": 583,
													"name": "__type",
													"variant": "signature",
													"kind": 4096,
													"flags": {},
													"sources": [
														{
															"fileName": "providers/maestro.provider.ts",
															"line": 391,
															"character": 42,
															"url": "https://github.com/MeshJS/mesh/blob/1cc00f9/packages/module/src/providers/maestro.provider.ts#L391"
														}
													],
													"type": {
														"type": "intrinsic",
														"name": "void"
													}
												}
											]
										}
									}
								},
								{
									"id": 584,
									"name": "limit",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "number"
									},
									"defaultValue": "100"
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "void"
							}
						}
					]
				},
				{
					"id": 591,
					"name": "resolveScript",
					"variant": "declaration",
					"kind": 2048,
					"flags": {
						"isPrivate": true
					},
					"sources": [
						{
							"fileName": "providers/maestro.provider.ts",
							"line": 451,
							"character": 10,
							"url": "https://github.com/MeshJS/mesh/blob/1cc00f9/packages/module/src/providers/maestro.provider.ts#L451"
						}
					],
					"signatures": [
						{
							"id": 592,
							"name": "resolveScript",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"sources": [
								{
									"fileName": "providers/maestro.provider.ts",
									"line": 451,
									"character": 26,
									"url": "https://github.com/MeshJS/mesh/blob/1cc00f9/packages/module/src/providers/maestro.provider.ts#L451"
								}
							],
							"parameters": [
								{
									"id": 593,
									"name": "utxo",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "src/providers/maestro.provider.ts",
											"qualifiedName": "MaestroUTxO"
										},
										"name": "MaestroUTxO",
										"package": "@meshsdk/core"
									}
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "undefined"
									},
									{
										"type": "intrinsic",
										"name": "string"
									}
								]
							}
						}
					]
				},
				{
					"id": 585,
					"name": "submitTx",
					"variant": "declaration",
					"kind": 2048,
					"flags": {},
					"sources": [
						{
							"fileName": "providers/maestro.provider.ts",
							"line": 416,
							"character": 8,
							"url": "https://github.com/MeshJS/mesh/blob/1cc00f9/packages/module/src/providers/maestro.provider.ts#L416"
						}
					],
					"signatures": [
						{
							"id": 586,
							"name": "submitTx",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"sources": [
								{
									"fileName": "providers/maestro.provider.ts",
									"line": 416,
									"character": 8,
									"url": "https://github.com/MeshJS/mesh/blob/1cc00f9/packages/module/src/providers/maestro.provider.ts#L416"
								}
							],
							"parameters": [
								{
									"id": 587,
									"name": "tx",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Promise"
								},
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "string"
									}
								],
								"name": "Promise",
								"package": "typescript"
							},
							"implementationOf": {
								"type": "reference",
								"target": 87,
								"name": "ISubmitter.submitTx"
							}
						}
					],
					"implementationOf": {
						"type": "reference",
						"target": 86,
						"name": "ISubmitter.submitTx"
					}
				},
				{
					"id": 588,
					"name": "toUTxO",
					"variant": "declaration",
					"kind": 2048,
					"flags": {
						"isPrivate": true
					},
					"sources": [
						{
							"fileName": "providers/maestro.provider.ts",
							"line": 433,
							"character": 10,
							"url": "https://github.com/MeshJS/mesh/blob/1cc00f9/packages/module/src/providers/maestro.provider.ts#L433"
						}
					],
					"signatures": [
						{
							"id": 589,
							"name": "toUTxO",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"sources": [
								{
									"fileName": "providers/maestro.provider.ts",
									"line": 433,
									"character": 19,
									"url": "https://github.com/MeshJS/mesh/blob/1cc00f9/packages/module/src/providers/maestro.provider.ts#L433"
								}
							],
							"parameters": [
								{
									"id": 590,
									"name": "utxo",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "src/providers/maestro.provider.ts",
											"qualifiedName": "MaestroUTxO"
										},
										"name": "MaestroUTxO",
										"package": "@meshsdk/core"
									}
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "src/types/UTxO.ts",
									"qualifiedName": "UTxO"
								},
								"name": "UTxO",
								"package": "@meshsdk/core"
							}
						}
					]
				}
			],
			"groups": [
				{
					"title": "Constructors",
					"children": [
						527
					]
				},
				{
					"title": "Properties",
					"children": [
						531,
						530,
						536
					]
				},
				{
					"title": "Methods",
					"children": [
						537,
						540,
						543,
						547,
						553,
						556,
						559,
						566,
						569,
						572,
						575,
						578,
						591,
						585,
						588
					]
				}
			],
			"sources": [
				{
					"fileName": "providers/maestro.provider.ts",
					"line": 32,
					"character": 13,
					"url": "https://github.com/MeshJS/mesh/blob/1cc00f9/packages/module/src/providers/maestro.provider.ts#L32"
				}
			],
			"implementedTypes": [
				{
					"type": "reference",
					"target": 17,
					"name": "IFetcher",
					"package": "@meshsdk/core"
				},
				{
					"type": "reference",
					"target": 85,
					"name": "ISubmitter",
					"package": "@meshsdk/core"
				},
				{
					"type": "reference",
					"target": 13,
					"name": "IEvaluator",
					"package": "@meshsdk/core"
				}
			]
		},
		{
			"id": 824,
			"name": "MeshTxBuilder",
			"variant": "declaration",
			"kind": 128,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "MeshTxBuilder is a lower level api for building transaction"
					}
				],
				"blockTags": [
					{
						"tag": "@param",
						"name": "fetcher",
						"content": [
							{
								"kind": "text",
								"text": "an optional parameter for fetching utxo"
							}
						]
					},
					{
						"tag": "@param",
						"name": "submitter",
						"content": [
							{
								"kind": "text",
								"text": "an optional parameter for submitting transaction"
							}
						]
					},
					{
						"tag": "@param",
						"name": "evaluator",
						"content": [
							{
								"kind": "text",
								"text": "an optional parameter for evaluating transaction"
							}
						]
					},
					{
						"tag": "@param",
						"name": "isHydra",
						"content": [
							{
								"kind": "text",
								"text": "an optional parameter for using hydra transaction building for configuring 0 fee in protocol parameters"
							}
						]
					}
				]
			},
			"children": [
				{
					"id": 825,
					"name": "constructor",
					"variant": "declaration",
					"kind": 512,
					"flags": {},
					"sources": [
						{
							"fileName": "transaction/meshTxBuilder/meshTxBuilder.service.ts",
							"line": 31,
							"character": 2,
							"url": "https://github.com/MeshJS/mesh/blob/1cc00f9/packages/module/src/transaction/meshTxBuilder/meshTxBuilder.service.ts#L31"
						}
					],
					"signatures": [
						{
							"id": 826,
							"name": "new MeshTxBuilder",
							"variant": "signature",
							"kind": 16384,
							"flags": {},
							"sources": [
								{
									"fileName": "transaction/meshTxBuilder/meshTxBuilder.service.ts",
									"line": 31,
									"character": 2,
									"url": "https://github.com/MeshJS/mesh/blob/1cc00f9/packages/module/src/transaction/meshTxBuilder/meshTxBuilder.service.ts#L31"
								}
							],
							"parameters": [
								{
									"id": 827,
									"name": "__namedParameters",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "src/transaction/meshTxBuilder/meshTxBuilder.service.ts",
											"qualifiedName": "MeshTxBuilderOptions"
										},
										"name": "MeshTxBuilderOptions",
										"package": "@meshsdk/core"
									}
								}
							],
							"type": {
								"type": "reference",
								"target": 824,
								"name": "MeshTxBuilder",
								"package": "@meshsdk/core"
							},
							"overwrites": {
								"type": "reference",
								"target": -1,
								"name": "MeshTxBuilderCore.constructor"
							}
						}
					],
					"overwrites": {
						"type": "reference",
						"target": -1,
						"name": "MeshTxBuilderCore.constructor"
					}
				},
				{
					"id": 830,
					"name": "_evaluator",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isPrivate": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "transaction/meshTxBuilder/meshTxBuilder.service.ts",
							"line": 27,
							"character": 10,
							"url": "https://github.com/MeshJS/mesh/blob/1cc00f9/packages/module/src/transaction/meshTxBuilder/meshTxBuilder.service.ts#L27"
						}
					],
					"type": {
						"type": "reference",
						"target": 13,
						"name": "IEvaluator",
						"package": "@meshsdk/core"
					}
				},
				{
					"id": 828,
					"name": "_fetcher",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isPrivate": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "transaction/meshTxBuilder/meshTxBuilder.service.ts",
							"line": 25,
							"character": 10,
							"url": "https://github.com/MeshJS/mesh/blob/1cc00f9/packages/module/src/transaction/meshTxBuilder/meshTxBuilder.service.ts#L25"
						}
					],
					"type": {
						"type": "reference",
						"target": 17,
						"name": "IFetcher",
						"package": "@meshsdk/core"
					}
				},
				{
					"id": 829,
					"name": "_submitter",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isPrivate": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "transaction/meshTxBuilder/meshTxBuilder.service.ts",
							"line": 26,
							"character": 10,
							"url": "https://github.com/MeshJS/mesh/blob/1cc00f9/packages/module/src/transaction/meshTxBuilder/meshTxBuilder.service.ts#L26"
						}
					],
					"type": {
						"type": "reference",
						"target": 85,
						"name": "ISubmitter",
						"package": "@meshsdk/core"
					}
				},
				{
					"id": 867,
					"name": "collateralQueueItem",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isProtected": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "transaction/meshTxBuilder/meshTxBuilderCore.ts",
							"line": 43,
							"character": 12,
							"url": "https://github.com/MeshJS/mesh/blob/1cc00f9/packages/module/src/transaction/meshTxBuilder/meshTxBuilderCore.ts#L43"
						}
					],
					"type": {
						"type": "reference",
						"target": 1049,
						"name": "PubKeyTxIn",
						"package": "@meshsdk/core"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": -1,
						"name": "MeshTxBuilderCore.collateralQueueItem"
					}
				},
				{
					"id": 863,
					"name": "isHydra",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isProtected": true
					},
					"sources": [
						{
							"fileName": "transaction/meshTxBuilder/meshTxBuilderCore.ts",
							"line": 35,
							"character": 12,
							"url": "https://github.com/MeshJS/mesh/blob/1cc00f9/packages/module/src/transaction/meshTxBuilder/meshTxBuilderCore.ts#L35"
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "boolean"
					},
					"defaultValue": "false",
					"inheritedFrom": {
						"type": "reference",
						"target": -1,
						"name": "MeshTxBuilderCore.isHydra"
					}
				},
				{
					"id": 864,
					"name": "meshTxBuilderBody",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"sources": [
						{
							"fileName": "transaction/meshTxBuilder/meshTxBuilderCore.ts",
							"line": 37,
							"character": 2,
							"url": "https://github.com/MeshJS/mesh/blob/1cc00f9/packages/module/src/transaction/meshTxBuilder/meshTxBuilderCore.ts#L37"
						}
					],
					"type": {
						"type": "reference",
						"target": 1033,
						"name": "MeshTxBuilderBody",
						"package": "@meshsdk/core"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": -1,
						"name": "MeshTxBuilderCore.meshTxBuilderBody"
					}
				},
				{
					"id": 865,
					"name": "mintItem",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isProtected": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "transaction/meshTxBuilder/meshTxBuilderCore.ts",
							"line": 39,
							"character": 12,
							"url": "https://github.com/MeshJS/mesh/blob/1cc00f9/packages/module/src/transaction/meshTxBuilder/meshTxBuilderCore.ts#L39"
						}
					],
					"type": {
						"type": "reference",
						"target": 1101,
						"name": "MintItem",
						"package": "@meshsdk/core"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": -1,
						"name": "MeshTxBuilderCore.mintItem"
					}
				},
				{
					"id": 831,
					"name": "queriedTxHashes",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isPrivate": true
					},
					"sources": [
						{
							"fileName": "transaction/meshTxBuilder/meshTxBuilder.service.ts",
							"line": 28,
							"character": 10,
							"url": "https://github.com/MeshJS/mesh/blob/1cc00f9/packages/module/src/transaction/meshTxBuilder/meshTxBuilder.service.ts#L28"
						}
					],
					"type": {
						"type": "reference",
						"target": {
							"sourceFileName": "../../node_modules/typescript/lib/lib.es2015.collection.d.ts",
							"qualifiedName": "Set"
						},
						"typeArguments": [
							{
								"type": "intrinsic",
								"name": "string"
							}
						],
						"name": "Set",
						"package": "typescript"
					},
					"defaultValue": "..."
				},
				{
					"id": 832,
					"name": "queriedUTxOs",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isPrivate": true
					},
					"sources": [
						{
							"fileName": "transaction/meshTxBuilder/meshTxBuilder.service.ts",
							"line": 29,
							"character": 10,
							"url": "https://github.com/MeshJS/mesh/blob/1cc00f9/packages/module/src/transaction/meshTxBuilder/meshTxBuilder.service.ts#L29"
						}
					],
					"type": {
						"type": "reflection",
						"declaration": {
							"id": 833,
							"name": "__type",
							"variant": "declaration",
							"kind": 65536,
							"flags": {},
							"sources": [
								{
									"fileName": "transaction/meshTxBuilder/meshTxBuilder.service.ts",
									"line": 29,
									"character": 24,
									"url": "https://github.com/MeshJS/mesh/blob/1cc00f9/packages/module/src/transaction/meshTxBuilder/meshTxBuilder.service.ts#L29"
								}
							],
							"indexSignature": {
								"id": 834,
								"name": "__index",
								"variant": "signature",
								"kind": 8192,
								"flags": {},
								"sources": [
									{
										"fileName": "transaction/meshTxBuilder/meshTxBuilder.service.ts",
										"line": 29,
										"character": 26,
										"url": "https://github.com/MeshJS/mesh/blob/1cc00f9/packages/module/src/transaction/meshTxBuilder/meshTxBuilder.service.ts#L29"
									}
								],
								"parameters": [
									{
										"id": 835,
										"name": "x",
										"variant": "param",
										"kind": 32768,
										"flags": {},
										"type": {
											"type": "intrinsic",
											"name": "string"
										}
									}
								],
								"type": {
									"type": "array",
									"elementType": {
										"type": "reference",
										"target": {
											"sourceFileName": "src/types/UTxO.ts",
											"qualifiedName": "UTxO"
										},
										"name": "UTxO",
										"package": "@meshsdk/core"
									}
								}
							}
						}
					},
					"defaultValue": "{}"
				},
				{
					"id": 868,
					"name": "refScriptTxInQueueItem",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isProtected": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "transaction/meshTxBuilder/meshTxBuilderCore.ts",
							"line": 45,
							"character": 12,
							"url": "https://github.com/MeshJS/mesh/blob/1cc00f9/packages/module/src/transaction/meshTxBuilder/meshTxBuilderCore.ts#L45"
						}
					],
					"type": {
						"type": "reference",
						"target": 1088,
						"name": "RefTxIn",
						"package": "@meshsdk/core"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": -1,
						"name": "MeshTxBuilderCore.refScriptTxInQueueItem"
					}
				},
				{
					"id": 862,
					"name": "serializer",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"sources": [
						{
							"fileName": "transaction/meshTxBuilder/meshTxBuilderCore.ts",
							"line": 31,
							"character": 2,
							"url": "https://github.com/MeshJS/mesh/blob/1cc00f9/packages/module/src/transaction/meshTxBuilder/meshTxBuilderCore.ts#L31"
						}
					],
					"type": {
						"type": "reference",
						"target": {
							"sourceFileName": "src/serializer/serializer.ts",
							"qualifiedName": "IMeshSerializer"
						},
						"name": "IMeshSerializer",
						"package": "@meshsdk/core"
					},
					"defaultValue": "...",
					"inheritedFrom": {
						"type": "reference",
						"target": -1,
						"name": "MeshTxBuilderCore.serializer"
					}
				},
				{
					"id": 861,
					"name": "txEvaluationMultiplier",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"sources": [
						{
							"fileName": "transaction/meshTxBuilder/meshTxBuilderCore.ts",
							"line": 29,
							"character": 2,
							"url": "https://github.com/MeshJS/mesh/blob/1cc00f9/packages/module/src/transaction/meshTxBuilder/meshTxBuilderCore.ts#L29"
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "number"
					},
					"defaultValue": "1.1",
					"inheritedFrom": {
						"type": "reference",
						"target": -1,
						"name": "MeshTxBuilderCore.txEvaluationMultiplier"
					}
				},
				{
					"id": 860,
					"name": "txHex",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"sources": [
						{
							"fileName": "transaction/meshTxBuilder/meshTxBuilderCore.ts",
							"line": 28,
							"character": 2,
							"url": "https://github.com/MeshJS/mesh/blob/1cc00f9/packages/module/src/transaction/meshTxBuilder/meshTxBuilderCore.ts#L28"
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"defaultValue": "''",
					"inheritedFrom": {
						"type": "reference",
						"target": -1,
						"name": "MeshTxBuilderCore.txHex"
					}
				},
				{
					"id": 866,
					"name": "txInQueueItem",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isProtected": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "transaction/meshTxBuilder/meshTxBuilderCore.ts",
							"line": 41,
							"character": 12,
							"url": "https://github.com/MeshJS/mesh/blob/1cc00f9/packages/module/src/transaction/meshTxBuilder/meshTxBuilderCore.ts#L41"
						}
					],
					"type": {
						"type": "reference",
						"target": 1048,
						"name": "TxIn",
						"package": "@meshsdk/core"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": -1,
						"name": "MeshTxBuilderCore.txInQueueItem"
					}
				},
				{
					"id": 1030,
					"name": "castRawDataToJsonString",
					"variant": "declaration",
					"kind": 2048,
					"flags": {
						"isProtected": true
					},
					"sources": [
						{
							"fileName": "transaction/meshTxBuilder/meshTxBuilderCore.ts",
							"line": 933,
							"character": 12,
							"url": "https://github.com/MeshJS/mesh/blob/1cc00f9/packages/module/src/transaction/meshTxBuilder/meshTxBuilderCore.ts#L933"
						}
					],
					"signatures": [
						{
							"id": 1031,
							"name": "castRawDataToJsonString",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"sources": [
								{
									"fileName": "transaction/meshTxBuilder/meshTxBuilderCore.ts",
									"line": 933,
									"character": 38,
									"url": "https://github.com/MeshJS/mesh/blob/1cc00f9/packages/module/src/transaction/meshTxBuilder/meshTxBuilderCore.ts#L933"
								}
							],
							"parameters": [
								{
									"id": 1032,
									"name": "rawData",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"type": {
										"type": "union",
										"types": [
											{
												"type": "intrinsic",
												"name": "string"
											},
											{
												"type": "intrinsic",
												"name": "object"
											}
										]
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "any"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "MeshTxBuilderCore.castRawDataToJsonString"
							}
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"target": -1,
						"name": "MeshTxBuilderCore.castRawDataToJsonString"
					}
				},
				{
					"id": 998,
					"name": "changeAddress",
					"variant": "declaration",
					"kind": 2048,
					"flags": {},
					"sources": [
						{
							"fileName": "transaction/meshTxBuilder/meshTxBuilderCore.ts",
							"line": 761,
							"character": 2,
							"url": "https://github.com/MeshJS/mesh/blob/1cc00f9/packages/module/src/transaction/meshTxBuilder/meshTxBuilderCore.ts#L761"
						}
					],
					"signatures": [
						{
							"id": 999,
							"name": "changeAddress",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Configure the address to accept change UTxO"
									}
								],
								"blockTags": [
									{
										"tag": "@returns",
										"content": [
											{
												"kind": "text",
												"text": "The MeshTxBuilder instance"
											}
										]
									}
								]
							},
							"sources": [
								{
									"fileName": "transaction/meshTxBuilder/meshTxBuilderCore.ts",
									"line": 761,
									"character": 18,
									"url": "https://github.com/MeshJS/mesh/blob/1cc00f9/packages/module/src/transaction/meshTxBuilder/meshTxBuilderCore.ts#L761"
								}
							],
							"parameters": [
								{
									"id": 1000,
									"name": "addr",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The address to accept change UTxO"
											}
										]
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								}
							],
							"type": {
								"type": "reference",
								"target": 824,
								"name": "MeshTxBuilder",
								"package": "@meshsdk/core"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "MeshTxBuilderCore.changeAddress"
							}
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"target": -1,
						"name": "MeshTxBuilderCore.changeAddress"
					}
				},
				{
					"id": 836,
					"name": "complete",
					"variant": "declaration",
					"kind": 2048,
					"flags": {},
					"sources": [
						{
							"fileName": "transaction/meshTxBuilder/meshTxBuilder.service.ts",
							"line": 49,
							"character": 2,
							"url": "https://github.com/MeshJS/mesh/blob/1cc00f9/packages/module/src/transaction/meshTxBuilder/meshTxBuilder.service.ts#L49"
						}
					],
					"signatures": [
						{
							"id": 837,
							"name": "complete",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "It builds the transaction and query the blockchain for missing information"
									}
								],
								"blockTags": [
									{
										"tag": "@returns",
										"content": [
											{
												"kind": "text",
												"text": "The signed transaction in hex ready to submit / signed by client"
											}
										]
									}
								]
							},
							"sources": [
								{
									"fileName": "transaction/meshTxBuilder/meshTxBuilder.service.ts",
									"line": 49,
									"character": 13,
									"url": "https://github.com/MeshJS/mesh/blob/1cc00f9/packages/module/src/transaction/meshTxBuilder/meshTxBuilder.service.ts#L49"
								}
							],
							"parameters": [
								{
									"id": 838,
									"name": "customizedTx",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The optional customized transaction body"
											}
										]
									},
									"type": {
										"type": "reference",
										"target": 1033,
										"name": "MeshTxBuilderBody",
										"package": "@meshsdk/core"
									}
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Promise"
								},
								"typeArguments": [
									{
										"type": "reference",
										"target": 824,
										"name": "MeshTxBuilder",
										"package": "@meshsdk/core"
									}
								],
								"name": "Promise",
								"package": "typescript"
							}
						}
					]
				},
				{
					"id": 876,
					"name": "completeSigning",
					"variant": "declaration",
					"kind": 2048,
					"flags": {},
					"sources": [
						{
							"fileName": "transaction/meshTxBuilder/meshTxBuilderCore.ts",
							"line": 127,
							"character": 2,
							"url": "https://github.com/MeshJS/mesh/blob/1cc00f9/packages/module/src/transaction/meshTxBuilder/meshTxBuilderCore.ts#L127"
						}
					],
					"signatures": [
						{
							"id": 877,
							"name": "completeSigning",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Complete the signing process"
									}
								],
								"blockTags": [
									{
										"tag": "@returns",
										"content": [
											{
												"kind": "text",
												"text": "The signed transaction in hex"
											}
										]
									}
								]
							},
							"sources": [
								{
									"fileName": "transaction/meshTxBuilder/meshTxBuilderCore.ts",
									"line": 127,
									"character": 20,
									"url": "https://github.com/MeshJS/mesh/blob/1cc00f9/packages/module/src/transaction/meshTxBuilder/meshTxBuilderCore.ts#L127"
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "MeshTxBuilderCore.completeSigning"
							}
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"target": -1,
						"name": "MeshTxBuilderCore.completeSigning"
					}
				},
				{
					"id": 873,
					"name": "completeSync",
					"variant": "declaration",
					"kind": 2048,
					"flags": {},
					"sources": [
						{
							"fileName": "transaction/meshTxBuilder/meshTxBuilderCore.ts",
							"line": 102,
							"character": 2,
							"url": "https://github.com/MeshJS/mesh/blob/1cc00f9/packages/module/src/transaction/meshTxBuilder/meshTxBuilderCore.ts#L102"
						}
					],
					"signatures": [
						{
							"id": 874,
							"name": "completeSync",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "It builds the transaction without dependencies"
									}
								],
								"blockTags": [
									{
										"tag": "@returns",
										"content": [
											{
												"kind": "text",
												"text": "The signed transaction in hex ready to submit / signed by client"
											}
										]
									}
								]
							},
							"sources": [
								{
									"fileName": "transaction/meshTxBuilder/meshTxBuilderCore.ts",
									"line": 102,
									"character": 17,
									"url": "https://github.com/MeshJS/mesh/blob/1cc00f9/packages/module/src/transaction/meshTxBuilder/meshTxBuilderCore.ts#L102"
								}
							],
							"parameters": [
								{
									"id": 875,
									"name": "customizedTx",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The optional customized transaction body"
											}
										]
									},
									"type": {
										"type": "reference",
										"target": 1033,
										"name": "MeshTxBuilderBody",
										"package": "@meshsdk/core"
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "MeshTxBuilderCore.completeSync"
							}
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"target": -1,
						"name": "MeshTxBuilderCore.completeSync"
					}
				},
				{
					"id": 848,
					"name": "completeTxInformation",
					"variant": "declaration",
					"kind": 2048,
					"flags": {
						"isPrivate": true
					},
					"sources": [
						{
							"fileName": "transaction/meshTxBuilder/meshTxBuilder.service.ts",
							"line": 129,
							"character": 10,
							"url": "https://github.com/MeshJS/mesh/blob/1cc00f9/packages/module/src/transaction/meshTxBuilder/meshTxBuilder.service.ts#L129"
						}
					],
					"signatures": [
						{
							"id": 849,
							"name": "completeTxInformation",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"sources": [
								{
									"fileName": "transaction/meshTxBuilder/meshTxBuilder.service.ts",
									"line": 129,
									"character": 34,
									"url": "https://github.com/MeshJS/mesh/blob/1cc00f9/packages/module/src/transaction/meshTxBuilder/meshTxBuilder.service.ts#L129"
								}
							],
							"parameters": [
								{
									"id": 850,
									"name": "input",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"type": {
										"type": "reference",
										"target": 1048,
										"name": "TxIn",
										"package": "@meshsdk/core"
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "void"
							}
						}
					]
				},
				{
					"id": 987,
					"name": "delegateStakeCertificate",
					"variant": "declaration",
					"kind": 2048,
					"flags": {},
					"sources": [
						{
							"fileName": "transaction/meshTxBuilder/meshTxBuilderCore.ts",
							"line": 719,
							"character": 2,
							"url": "https://github.com/MeshJS/mesh/blob/1cc00f9/packages/module/src/transaction/meshTxBuilder/meshTxBuilderCore.ts#L719"
						}
					],
					"signatures": [
						{
							"id": 988,
							"name": "delegateStakeCertificate",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Creates a stake delegation certificate, and adds it to the transaction\nThis will delegate stake from the corresponding stake address to the pool"
									}
								],
								"blockTags": [
									{
										"tag": "@returns",
										"content": [
											{
												"kind": "text",
												"text": "The MeshTxBuilder instance"
											}
										]
									}
								]
							},
							"sources": [
								{
									"fileName": "transaction/meshTxBuilder/meshTxBuilderCore.ts",
									"line": 719,
									"character": 29,
									"url": "https://github.com/MeshJS/mesh/blob/1cc00f9/packages/module/src/transaction/meshTxBuilder/meshTxBuilderCore.ts#L719"
								}
							],
							"parameters": [
								{
									"id": 989,
									"name": "stakeKeyHash",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The keyHash of the stake key"
											}
										]
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 990,
									"name": "poolId",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "poolId can be in either bech32 or hex form"
											}
										]
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								}
							],
							"type": {
								"type": "reference",
								"target": 824,
								"name": "MeshTxBuilder",
								"package": "@meshsdk/core"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "MeshTxBuilderCore.delegateStakeCertificate"
							}
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"target": -1,
						"name": "MeshTxBuilderCore.delegateStakeCertificate"
					}
				},
				{
					"id": 991,
					"name": "deregisterStakeCertificate",
					"variant": "declaration",
					"kind": 2048,
					"flags": {},
					"sources": [
						{
							"fileName": "transaction/meshTxBuilder/meshTxBuilderCore.ts",
							"line": 733,
							"character": 2,
							"url": "https://github.com/MeshJS/mesh/blob/1cc00f9/packages/module/src/transaction/meshTxBuilder/meshTxBuilderCore.ts#L733"
						}
					],
					"signatures": [
						{
							"id": 992,
							"name": "deregisterStakeCertificate",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Creates a stake deregister certificate, and adds it to the transaction"
									}
								],
								"blockTags": [
									{
										"tag": "@returns",
										"content": [
											{
												"kind": "text",
												"text": "The MeshTxBuilder instance"
											}
										]
									}
								]
							},
							"sources": [
								{
									"fileName": "transaction/meshTxBuilder/meshTxBuilderCore.ts",
									"line": 733,
									"character": 31,
									"url": "https://github.com/MeshJS/mesh/blob/1cc00f9/packages/module/src/transaction/meshTxBuilder/meshTxBuilderCore.ts#L733"
								}
							],
							"parameters": [
								{
									"id": 993,
									"name": "stakeKeyHash",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The keyHash of the stake key"
											}
										]
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								}
							],
							"type": {
								"type": "reference",
								"target": 824,
								"name": "MeshTxBuilder",
								"package": "@meshsdk/core"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "MeshTxBuilderCore.deregisterStakeCertificate"
							}
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"target": -1,
						"name": "MeshTxBuilderCore.deregisterStakeCertificate"
					}
				},
				{
					"id": 871,
					"name": "emptyTxBuilderBody",
					"variant": "declaration",
					"kind": 2048,
					"flags": {},
					"sources": [
						{
							"fileName": "transaction/meshTxBuilder/meshTxBuilderCore.ts",
							"line": 70,
							"character": 2,
							"url": "https://github.com/MeshJS/mesh/blob/1cc00f9/packages/module/src/transaction/meshTxBuilder/meshTxBuilderCore.ts#L70"
						}
					],
					"signatures": [
						{
							"id": 872,
							"name": "emptyTxBuilderBody",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Make an empty transaction body for building transaction in object"
									}
								],
								"blockTags": [
									{
										"tag": "@returns",
										"content": [
											{
												"kind": "text",
												"text": "An empty transaction body"
											}
										]
									}
								]
							},
							"sources": [
								{
									"fileName": "transaction/meshTxBuilder/meshTxBuilderCore.ts",
									"line": 70,
									"character": 23,
									"url": "https://github.com/MeshJS/mesh/blob/1cc00f9/packages/module/src/transaction/meshTxBuilder/meshTxBuilderCore.ts#L70"
								}
							],
							"type": {
								"type": "reference",
								"target": 1033,
								"name": "MeshTxBuilderBody",
								"package": "@meshsdk/core"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "MeshTxBuilderCore.emptyTxBuilderBody"
							}
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"target": -1,
						"name": "MeshTxBuilderCore.emptyTxBuilderBody"
					}
				},
				{
					"id": 842,
					"name": "getUTxOInfo",
					"variant": "declaration",
					"kind": 2048,
					"flags": {
						"isPrivate": true
					},
					"sources": [
						{
							"fileName": "transaction/meshTxBuilder/meshTxBuilder.service.ts",
							"line": 96,
							"character": 10,
							"url": "https://github.com/MeshJS/mesh/blob/1cc00f9/packages/module/src/transaction/meshTxBuilder/meshTxBuilder.service.ts#L96"
						}
					],
					"signatures": [
						{
							"id": 843,
							"name": "getUTxOInfo",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Get the UTxO information from the blockchain"
									}
								]
							},
							"sources": [
								{
									"fileName": "transaction/meshTxBuilder/meshTxBuilder.service.ts",
									"line": 96,
									"character": 24,
									"url": "https://github.com/MeshJS/mesh/blob/1cc00f9/packages/module/src/transaction/meshTxBuilder/meshTxBuilder.service.ts#L96"
								}
							],
							"parameters": [
								{
									"id": 844,
									"name": "txHash",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Promise"
								},
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "void"
									}
								],
								"name": "Promise",
								"package": "typescript"
							}
						}
					]
				},
				{
					"id": 1001,
					"name": "invalidBefore",
					"variant": "declaration",
					"kind": 2048,
					"flags": {},
					"sources": [
						{
							"fileName": "transaction/meshTxBuilder/meshTxBuilderCore.ts",
							"line": 771,
							"character": 2,
							"url": "https://github.com/MeshJS/mesh/blob/1cc00f9/packages/module/src/transaction/meshTxBuilder/meshTxBuilderCore.ts#L771"
						}
					],
					"signatures": [
						{
							"id": 1002,
							"name": "invalidBefore",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Set the transaction valid interval to be valid only after the slot"
									}
								],
								"blockTags": [
									{
										"tag": "@returns",
										"content": [
											{
												"kind": "text",
												"text": "The MeshTxBuilder instance"
											}
										]
									}
								]
							},
							"sources": [
								{
									"fileName": "transaction/meshTxBuilder/meshTxBuilderCore.ts",
									"line": 771,
									"character": 18,
									"url": "https://github.com/MeshJS/mesh/blob/1cc00f9/packages/module/src/transaction/meshTxBuilder/meshTxBuilderCore.ts#L771"
								}
							],
							"parameters": [
								{
									"id": 1003,
									"name": "slot",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The transaction is valid only after this slot"
											}
										]
									},
									"type": {
										"type": "intrinsic",
										"name": "number"
									}
								}
							],
							"type": {
								"type": "reference",
								"target": 824,
								"name": "MeshTxBuilder",
								"package": "@meshsdk/core"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "MeshTxBuilderCore.invalidBefore"
							}
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"target": -1,
						"name": "MeshTxBuilderCore.invalidBefore"
					}
				},
				{
					"id": 1004,
					"name": "invalidHereafter",
					"variant": "declaration",
					"kind": 2048,
					"flags": {},
					"sources": [
						{
							"fileName": "transaction/meshTxBuilder/meshTxBuilderCore.ts",
							"line": 781,
							"character": 2,
							"url": "https://github.com/MeshJS/mesh/blob/1cc00f9/packages/module/src/transaction/meshTxBuilder/meshTxBuilderCore.ts#L781"
						}
					],
					"signatures": [
						{
							"id": 1005,
							"name": "invalidHereafter",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Set the transaction valid interval to be valid only before the slot"
									}
								],
								"blockTags": [
									{
										"tag": "@returns",
										"content": [
											{
												"kind": "text",
												"text": "The MeshTxBuilder instance"
											}
										]
									}
								]
							},
							"sources": [
								{
									"fileName": "transaction/meshTxBuilder/meshTxBuilderCore.ts",
									"line": 781,
									"character": 21,
									"url": "https://github.com/MeshJS/mesh/blob/1cc00f9/packages/module/src/transaction/meshTxBuilder/meshTxBuilderCore.ts#L781"
								}
							],
							"parameters": [
								{
									"id": 1006,
									"name": "slot",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The transaction is valid only before this slot"
											}
										]
									},
									"type": {
										"type": "intrinsic",
										"name": "number"
									}
								}
							],
							"type": {
								"type": "reference",
								"target": 824,
								"name": "MeshTxBuilder",
								"package": "@meshsdk/core"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "MeshTxBuilderCore.invalidHereafter"
							}
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"target": -1,
						"name": "MeshTxBuilderCore.invalidHereafter"
					}
				},
				{
					"id": 851,
					"name": "isInputComplete",
					"variant": "declaration",
					"kind": 2048,
					"flags": {
						"isPrivate": true
					},
					"sources": [
						{
							"fileName": "transaction/meshTxBuilder/meshTxBuilder.service.ts",
							"line": 171,
							"character": 10,
							"url": "https://github.com/MeshJS/mesh/blob/1cc00f9/packages/module/src/transaction/meshTxBuilder/meshTxBuilder.service.ts#L171"
						}
					],
					"signatures": [
						{
							"id": 852,
							"name": "isInputComplete",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"sources": [
								{
									"fileName": "transaction/meshTxBuilder/meshTxBuilder.service.ts",
									"line": 171,
									"character": 28,
									"url": "https://github.com/MeshJS/mesh/blob/1cc00f9/packages/module/src/transaction/meshTxBuilder/meshTxBuilder.service.ts#L171"
								}
							],
							"parameters": [
								{
									"id": 853,
									"name": "txIn",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"type": {
										"type": "reference",
										"target": 1048,
										"name": "TxIn",
										"package": "@meshsdk/core"
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							}
						}
					]
				},
				{
					"id": 854,
					"name": "isInputInfoComplete",
					"variant": "declaration",
					"kind": 2048,
					"flags": {
						"isPrivate": true
					},
					"sources": [
						{
							"fileName": "transaction/meshTxBuilder/meshTxBuilder.service.ts",
							"line": 181,
							"character": 10,
							"url": "https://github.com/MeshJS/mesh/blob/1cc00f9/packages/module/src/transaction/meshTxBuilder/meshTxBuilder.service.ts#L181"
						}
					],
					"signatures": [
						{
							"id": 855,
							"name": "isInputInfoComplete",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"sources": [
								{
									"fileName": "transaction/meshTxBuilder/meshTxBuilder.service.ts",
									"line": 181,
									"character": 32,
									"url": "https://github.com/MeshJS/mesh/blob/1cc00f9/packages/module/src/transaction/meshTxBuilder/meshTxBuilder.service.ts#L181"
								}
							],
							"parameters": [
								{
									"id": 856,
									"name": "txIn",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"type": {
										"type": "reference",
										"target": 1048,
										"name": "TxIn",
										"package": "@meshsdk/core"
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							}
						}
					]
				},
				{
					"id": 857,
					"name": "isRefScriptInfoComplete",
					"variant": "declaration",
					"kind": 2048,
					"flags": {
						"isPrivate": true
					},
					"sources": [
						{
							"fileName": "transaction/meshTxBuilder/meshTxBuilder.service.ts",
							"line": 190,
							"character": 10,
							"url": "https://github.com/MeshJS/mesh/blob/1cc00f9/packages/module/src/transaction/meshTxBuilder/meshTxBuilder.service.ts#L190"
						}
					],
					"signatures": [
						{
							"id": 858,
							"name": "isRefScriptInfoComplete",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"sources": [
								{
									"fileName": "transaction/meshTxBuilder/meshTxBuilder.service.ts",
									"line": 190,
									"character": 36,
									"url": "https://github.com/MeshJS/mesh/blob/1cc00f9/packages/module/src/transaction/meshTxBuilder/meshTxBuilder.service.ts#L190"
								}
							],
							"parameters": [
								{
									"id": 859,
									"name": "scriptTxIn",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"type": {
										"type": "reference",
										"target": 1059,
										"name": "ScriptTxIn",
										"package": "@meshsdk/core"
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							}
						}
					]
				},
				{
					"id": 1007,
					"name": "metadataValue",
					"variant": "declaration",
					"kind": 2048,
					"flags": {},
					"sources": [
						{
							"fileName": "transaction/meshTxBuilder/meshTxBuilderCore.ts",
							"line": 792,
							"character": 2,
							"url": "https://github.com/MeshJS/mesh/blob/1cc00f9/packages/module/src/transaction/meshTxBuilder/meshTxBuilderCore.ts#L792"
						}
					],
					"signatures": [
						{
							"id": 1008,
							"name": "metadataValue",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Add metadata to the transaction"
									}
								],
								"blockTags": [
									{
										"tag": "@returns",
										"content": [
											{
												"kind": "text",
												"text": "The MeshTxBuilder instance"
											}
										]
									}
								]
							},
							"sources": [
								{
									"fileName": "transaction/meshTxBuilder/meshTxBuilderCore.ts",
									"line": 792,
									"character": 18,
									"url": "https://github.com/MeshJS/mesh/blob/1cc00f9/packages/module/src/transaction/meshTxBuilder/meshTxBuilderCore.ts#L792"
								}
							],
							"typeParameter": [
								{
									"id": 1009,
									"name": "T",
									"variant": "typeParam",
									"kind": 131072,
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "object"
									}
								}
							],
							"parameters": [
								{
									"id": 1010,
									"name": "tag",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The tag of the metadata"
											}
										]
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 1011,
									"name": "metadata",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The metadata in object format"
											}
										]
									},
									"type": {
										"type": "reference",
										"target": 1009,
										"name": "T",
										"package": "@meshsdk/core",
										"refersToTypeParameter": true
									}
								}
							],
							"type": {
								"type": "reference",
								"target": 824,
								"name": "MeshTxBuilder",
								"package": "@meshsdk/core"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "MeshTxBuilderCore.metadataValue"
							}
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"target": -1,
						"name": "MeshTxBuilderCore.metadataValue"
					}
				},
				{
					"id": 942,
					"name": "mint",
					"variant": "declaration",
					"kind": 2048,
					"flags": {},
					"sources": [
						{
							"fileName": "transaction/meshTxBuilder/meshTxBuilderCore.ts",
							"line": 527,
							"character": 2,
							"url": "https://github.com/MeshJS/mesh/blob/1cc00f9/packages/module/src/transaction/meshTxBuilder/meshTxBuilderCore.ts#L527"
						}
					],
					"signatures": [
						{
							"id": 943,
							"name": "mint",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Set the minting value of transaction"
									}
								],
								"blockTags": [
									{
										"tag": "@returns",
										"content": [
											{
												"kind": "text",
												"text": "The MeshTxBuilder instance"
											}
										]
									}
								]
							},
							"sources": [
								{
									"fileName": "transaction/meshTxBuilder/meshTxBuilderCore.ts",
									"line": 527,
									"character": 9,
									"url": "https://github.com/MeshJS/mesh/blob/1cc00f9/packages/module/src/transaction/meshTxBuilder/meshTxBuilderCore.ts#L527"
								}
							],
							"parameters": [
								{
									"id": 944,
									"name": "quantity",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The quantity of asset to be minted"
											}
										]
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 945,
									"name": "policy",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The policy id of the asset to be minted"
											}
										]
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 946,
									"name": "name",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The hex of token name of the asset to be minted"
											}
										]
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								}
							],
							"type": {
								"type": "reference",
								"target": 824,
								"name": "MeshTxBuilder",
								"package": "@meshsdk/core"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "MeshTxBuilderCore.mint"
							}
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"target": -1,
						"name": "MeshTxBuilderCore.mint"
					}
				},
				{
					"id": 940,
					"name": "mintPlutusScriptV2",
					"variant": "declaration",
					"kind": 2048,
					"flags": {},
					"sources": [
						{
							"fileName": "transaction/meshTxBuilder/meshTxBuilderCore.ts",
							"line": 515,
							"character": 2,
							"url": "https://github.com/MeshJS/mesh/blob/1cc00f9/packages/module/src/transaction/meshTxBuilder/meshTxBuilderCore.ts#L515"
						}
					],
					"signatures": [
						{
							"id": 941,
							"name": "mintPlutusScriptV2",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Set the instruction that it is currently using V2 Plutus minting scripts"
									}
								],
								"blockTags": [
									{
										"tag": "@returns",
										"content": [
											{
												"kind": "text",
												"text": "The MeshTxBuilder instance"
											}
										]
									}
								]
							},
							"sources": [
								{
									"fileName": "transaction/meshTxBuilder/meshTxBuilderCore.ts",
									"line": 515,
									"character": 23,
									"url": "https://github.com/MeshJS/mesh/blob/1cc00f9/packages/module/src/transaction/meshTxBuilder/meshTxBuilderCore.ts#L515"
								}
							],
							"type": {
								"type": "reference",
								"target": 824,
								"name": "MeshTxBuilder",
								"package": "@meshsdk/core"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "MeshTxBuilderCore.mintPlutusScriptV2"
							}
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"target": -1,
						"name": "MeshTxBuilderCore.mintPlutusScriptV2"
					}
				},
				{
					"id": 964,
					"name": "mintRedeemerValue",
					"variant": "declaration",
					"kind": 2048,
					"flags": {},
					"sources": [
						{
							"fileName": "transaction/meshTxBuilder/meshTxBuilderCore.ts",
							"line": 638,
							"character": 2,
							"url": "https://github.com/MeshJS/mesh/blob/1cc00f9/packages/module/src/transaction/meshTxBuilder/meshTxBuilderCore.ts#L638"
						}
					],
					"signatures": [
						{
							"id": 965,
							"name": "mintRedeemerValue",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Set the redeemer for the reference input to be spent in same transaction"
									}
								],
								"blockTags": [
									{
										"tag": "@returns",
										"content": [
											{
												"kind": "text",
												"text": "The MeshTxBuilder instance"
											}
										]
									}
								]
							},
							"sources": [
								{
									"fileName": "transaction/meshTxBuilder/meshTxBuilderCore.ts",
									"line": 638,
									"character": 22,
									"url": "https://github.com/MeshJS/mesh/blob/1cc00f9/packages/module/src/transaction/meshTxBuilder/meshTxBuilderCore.ts#L638"
								}
							],
							"parameters": [
								{
									"id": 966,
									"name": "redeemer",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The redeemer in Mesh Data type, JSON in raw constructor like format, or CBOR hex string"
											}
										]
									},
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "src/types/Data.ts",
											"qualifiedName": "Data"
										},
										"name": "Data",
										"package": "@meshsdk/core"
									}
								},
								{
									"id": 967,
									"name": "exUnits",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The execution units budget for the redeemer"
											}
										]
									},
									"type": {
										"type": "reflection",
										"declaration": {
											"id": 968,
											"name": "__type",
											"variant": "declaration",
											"kind": 65536,
											"flags": {},
											"children": [
												{
													"id": 969,
													"name": "mem",
													"variant": "declaration",
													"kind": 1024,
													"flags": {},
													"sources": [
														{
															"fileName": "types/Action.ts",
															"line": 12,
															"character": 2,
															"url": "https://github.com/MeshJS/mesh/blob/1cc00f9/packages/module/src/types/Action.ts#L12"
														}
													],
													"type": {
														"type": "intrinsic",
														"name": "number"
													}
												},
												{
													"id": 970,
													"name": "steps",
													"variant": "declaration",
													"kind": 1024,
													"flags": {},
													"sources": [
														{
															"fileName": "types/Action.ts",
															"line": 13,
															"character": 2,
															"url": "https://github.com/MeshJS/mesh/blob/1cc00f9/packages/module/src/types/Action.ts#L13"
														}
													],
													"type": {
														"type": "intrinsic",
														"name": "number"
													}
												}
											],
											"groups": [
												{
													"title": "Properties",
													"children": [
														969,
														970
													]
												}
											],
											"sources": [
												{
													"fileName": "transaction/meshTxBuilder/meshTxBuilderCore.ts",
													"line": 640,
													"character": 14,
													"url": "https://github.com/MeshJS/mesh/blob/1cc00f9/packages/module/src/transaction/meshTxBuilder/meshTxBuilderCore.ts#L640"
												}
											]
										}
									},
									"defaultValue": "..."
								},
								{
									"id": 971,
									"name": "type",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The redeemer data type, either Mesh Data type, JSON in raw constructor like format, or CBOR hex string"
											}
										]
									},
									"type": {
										"type": "union",
										"types": [
											{
												"type": "literal",
												"value": "Mesh"
											},
											{
												"type": "literal",
												"value": "JSON"
											},
											{
												"type": "literal",
												"value": "CBOR"
											}
										]
									},
									"defaultValue": "'Mesh'"
								}
							],
							"type": {
								"type": "reference",
								"target": 824,
								"name": "MeshTxBuilder",
								"package": "@meshsdk/core"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "MeshTxBuilderCore.mintRedeemerValue"
							}
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"target": -1,
						"name": "MeshTxBuilderCore.mintRedeemerValue"
					}
				},
				{
					"id": 956,
					"name": "mintReferenceTxInRedeemerValue",
					"variant": "declaration",
					"kind": 2048,
					"flags": {},
					"sources": [
						{
							"fileName": "transaction/meshTxBuilder/meshTxBuilderCore.ts",
							"line": 593,
							"character": 2,
							"url": "https://github.com/MeshJS/mesh/blob/1cc00f9/packages/module/src/transaction/meshTxBuilder/meshTxBuilderCore.ts#L593"
						}
					],
					"signatures": [
						{
							"id": 957,
							"name": "mintReferenceTxInRedeemerValue",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Set the redeemer for minting"
									}
								],
								"blockTags": [
									{
										"tag": "@returns",
										"content": [
											{
												"kind": "text",
												"text": "The MeshTxBuilder instance"
											}
										]
									}
								]
							},
							"sources": [
								{
									"fileName": "transaction/meshTxBuilder/meshTxBuilderCore.ts",
									"line": 593,
									"character": 35,
									"url": "https://github.com/MeshJS/mesh/blob/1cc00f9/packages/module/src/transaction/meshTxBuilder/meshTxBuilderCore.ts#L593"
								}
							],
							"parameters": [
								{
									"id": 958,
									"name": "redeemer",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The redeemer in Mesh Data type, JSON in raw constructor like format, or CBOR hex string"
											}
										]
									},
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "src/types/Data.ts",
											"qualifiedName": "Data"
										},
										"name": "Data",
										"package": "@meshsdk/core"
									}
								},
								{
									"id": 959,
									"name": "exUnits",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The execution units budget for the redeemer"
											}
										]
									},
									"type": {
										"type": "reflection",
										"declaration": {
											"id": 960,
											"name": "__type",
											"variant": "declaration",
											"kind": 65536,
											"flags": {},
											"children": [
												{
													"id": 961,
													"name": "mem",
													"variant": "declaration",
													"kind": 1024,
													"flags": {},
													"sources": [
														{
															"fileName": "types/Action.ts",
															"line": 12,
															"character": 2,
															"url": "https://github.com/MeshJS/mesh/blob/1cc00f9/packages/module/src/types/Action.ts#L12"
														}
													],
													"type": {
														"type": "intrinsic",
														"name": "number"
													}
												},
												{
													"id": 962,
													"name": "steps",
													"variant": "declaration",
													"kind": 1024,
													"flags": {},
													"sources": [
														{
															"fileName": "types/Action.ts",
															"line": 13,
															"character": 2,
															"url": "https://github.com/MeshJS/mesh/blob/1cc00f9/packages/module/src/types/Action.ts#L13"
														}
													],
													"type": {
														"type": "intrinsic",
														"name": "number"
													}
												}
											],
											"groups": [
												{
													"title": "Properties",
													"children": [
														961,
														962
													]
												}
											],
											"sources": [
												{
													"fileName": "transaction/meshTxBuilder/meshTxBuilderCore.ts",
													"line": 595,
													"character": 14,
													"url": "https://github.com/MeshJS/mesh/blob/1cc00f9/packages/module/src/transaction/meshTxBuilder/meshTxBuilderCore.ts#L595"
												}
											]
										}
									},
									"defaultValue": "..."
								},
								{
									"id": 963,
									"name": "type",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The redeemer data type, either Mesh Data type, JSON in raw constructor like format, or CBOR hex string"
											}
										]
									},
									"type": {
										"type": "union",
										"types": [
											{
												"type": "literal",
												"value": "Mesh"
											},
											{
												"type": "literal",
												"value": "JSON"
											},
											{
												"type": "literal",
												"value": "CBOR"
											}
										]
									},
									"defaultValue": "'Mesh'"
								}
							],
							"type": {
								"type": "reference",
								"target": 824,
								"name": "MeshTxBuilder",
								"package": "@meshsdk/core"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "MeshTxBuilderCore.mintReferenceTxInRedeemerValue"
							}
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"target": -1,
						"name": "MeshTxBuilderCore.mintReferenceTxInRedeemerValue"
					}
				},
				{
					"id": 951,
					"name": "mintTxInReference",
					"variant": "declaration",
					"kind": 2048,
					"flags": {},
					"sources": [
						{
							"fileName": "transaction/meshTxBuilder/meshTxBuilderCore.ts",
							"line": 563,
							"character": 2,
							"url": "https://github.com/MeshJS/mesh/blob/1cc00f9/packages/module/src/transaction/meshTxBuilder/meshTxBuilderCore.ts#L563"
						}
					],
					"signatures": [
						{
							"id": 952,
							"name": "mintTxInReference",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Use reference script for minting"
									}
								],
								"blockTags": [
									{
										"tag": "@returns",
										"content": [
											{
												"kind": "text",
												"text": "The MeshTxBuilder instance"
											}
										]
									}
								]
							},
							"sources": [
								{
									"fileName": "transaction/meshTxBuilder/meshTxBuilderCore.ts",
									"line": 563,
									"character": 22,
									"url": "https://github.com/MeshJS/mesh/blob/1cc00f9/packages/module/src/transaction/meshTxBuilder/meshTxBuilderCore.ts#L563"
								}
							],
							"parameters": [
								{
									"id": 953,
									"name": "txHash",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The transaction hash of the UTxO"
											}
										]
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 954,
									"name": "txIndex",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The transaction index of the UTxO"
											}
										]
									},
									"type": {
										"type": "intrinsic",
										"name": "number"
									}
								},
								{
									"id": 955,
									"name": "version",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "src/types/PlutusScript.ts",
											"qualifiedName": "LanguageVersion"
										},
										"name": "LanguageVersion",
										"package": "@meshsdk/core"
									},
									"defaultValue": "'V2'"
								}
							],
							"type": {
								"type": "reference",
								"target": 824,
								"name": "MeshTxBuilder",
								"package": "@meshsdk/core"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "MeshTxBuilderCore.mintTxInReference"
							}
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"target": -1,
						"name": "MeshTxBuilderCore.mintTxInReference"
					}
				},
				{
					"id": 947,
					"name": "mintingScript",
					"variant": "declaration",
					"kind": 2048,
					"flags": {},
					"sources": [
						{
							"fileName": "transaction/meshTxBuilder/meshTxBuilderCore.ts",
							"line": 547,
							"character": 2,
							"url": "https://github.com/MeshJS/mesh/blob/1cc00f9/packages/module/src/transaction/meshTxBuilder/meshTxBuilderCore.ts#L547"
						}
					],
					"signatures": [
						{
							"id": 948,
							"name": "mintingScript",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Set the minting script of current mint"
									}
								],
								"blockTags": [
									{
										"tag": "@returns",
										"content": [
											{
												"kind": "text",
												"text": "The MeshTxBuilder instance"
											}
										]
									}
								]
							},
							"sources": [
								{
									"fileName": "transaction/meshTxBuilder/meshTxBuilderCore.ts",
									"line": 547,
									"character": 18,
									"url": "https://github.com/MeshJS/mesh/blob/1cc00f9/packages/module/src/transaction/meshTxBuilder/meshTxBuilderCore.ts#L547"
								}
							],
							"parameters": [
								{
									"id": 949,
									"name": "scriptCBOR",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The CBOR hex of the minting policy script"
											}
										]
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 950,
									"name": "version",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "Optional - The Plutus script version"
											}
										]
									},
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "src/types/PlutusScript.ts",
											"qualifiedName": "LanguageVersion"
										},
										"name": "LanguageVersion",
										"package": "@meshsdk/core"
									},
									"defaultValue": "'V2'"
								}
							],
							"type": {
								"type": "reference",
								"target": 824,
								"name": "MeshTxBuilder",
								"package": "@meshsdk/core"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "MeshTxBuilderCore.mintingScript"
							}
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"target": -1,
						"name": "MeshTxBuilderCore.mintingScript"
					}
				},
				{
					"id": 1012,
					"name": "protocolParams",
					"variant": "declaration",
					"kind": 2048,
					"flags": {},
					"sources": [
						{
							"fileName": "transaction/meshTxBuilder/meshTxBuilderCore.ts",
							"line": 802,
							"character": 2,
							"url": "https://github.com/MeshJS/mesh/blob/1cc00f9/packages/module/src/transaction/meshTxBuilder/meshTxBuilderCore.ts#L802"
						}
					],
					"signatures": [
						{
							"id": 1013,
							"name": "protocolParams",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Set the protocol parameters to be used for the transaction other than the default one"
									}
								],
								"blockTags": [
									{
										"tag": "@returns",
										"content": [
											{
												"kind": "text",
												"text": "The MeshTxBuilder instance"
											}
										]
									}
								]
							},
							"sources": [
								{
									"fileName": "transaction/meshTxBuilder/meshTxBuilderCore.ts",
									"line": 802,
									"character": 19,
									"url": "https://github.com/MeshJS/mesh/blob/1cc00f9/packages/module/src/transaction/meshTxBuilder/meshTxBuilderCore.ts#L802"
								}
							],
							"parameters": [
								{
									"id": 1014,
									"name": "params",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "(Part of) the protocol parameters to be used for the transaction"
											}
										]
									},
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Partial"
										},
										"typeArguments": [
											{
												"type": "reference",
												"target": {
													"sourceFileName": "src/types/Protocol.ts",
													"qualifiedName": "Protocol"
												},
												"name": "Protocol",
												"package": "@meshsdk/core"
											}
										],
										"name": "Partial",
										"package": "typescript"
									}
								}
							],
							"type": {
								"type": "reference",
								"target": 824,
								"name": "MeshTxBuilder",
								"package": "@meshsdk/core"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "MeshTxBuilderCore.protocolParams"
							}
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"target": -1,
						"name": "MeshTxBuilderCore.protocolParams"
					}
				},
				{
					"id": 845,
					"name": "queryAllTxInfo",
					"variant": "declaration",
					"kind": 2048,
					"flags": {
						"isPrivate": true
					},
					"sources": [
						{
							"fileName": "transaction/meshTxBuilder/meshTxBuilder.service.ts",
							"line": 105,
							"character": 10,
							"url": "https://github.com/MeshJS/mesh/blob/1cc00f9/packages/module/src/transaction/meshTxBuilder/meshTxBuilder.service.ts#L105"
						}
					],
					"signatures": [
						{
							"id": 846,
							"name": "queryAllTxInfo",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"sources": [
								{
									"fileName": "transaction/meshTxBuilder/meshTxBuilder.service.ts",
									"line": 105,
									"character": 27,
									"url": "https://github.com/MeshJS/mesh/blob/1cc00f9/packages/module/src/transaction/meshTxBuilder/meshTxBuilder.service.ts#L105"
								}
							],
							"parameters": [
								{
									"id": 847,
									"name": "incompleteTxIns",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"type": {
										"type": "array",
										"elementType": {
											"type": "reference",
											"target": 1048,
											"name": "TxIn",
											"package": "@meshsdk/core"
										}
									}
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Promise"
								},
								"typeArguments": [
									{
										"type": "array",
										"elementType": {
											"type": "intrinsic",
											"name": "void"
										}
									}
								],
								"name": "Promise",
								"package": "typescript"
							}
						}
					]
				},
				{
					"id": 1024,
					"name": "queueAllLastItem",
					"variant": "declaration",
					"kind": 2048,
					"flags": {
						"isProtected": true
					},
					"sources": [
						{
							"fileName": "transaction/meshTxBuilder/meshTxBuilderCore.ts",
							"line": 876,
							"character": 12,
							"url": "https://github.com/MeshJS/mesh/blob/1cc00f9/packages/module/src/transaction/meshTxBuilder/meshTxBuilderCore.ts#L876"
						}
					],
					"signatures": [
						{
							"id": 1025,
							"name": "queueAllLastItem",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"sources": [
								{
									"fileName": "transaction/meshTxBuilder/meshTxBuilderCore.ts",
									"line": 876,
									"character": 31,
									"url": "https://github.com/MeshJS/mesh/blob/1cc00f9/packages/module/src/transaction/meshTxBuilder/meshTxBuilderCore.ts#L876"
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "void"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "MeshTxBuilderCore.queueAllLastItem"
							}
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"target": -1,
						"name": "MeshTxBuilderCore.queueAllLastItem"
					}
				},
				{
					"id": 936,
					"name": "readOnlyTxInReference",
					"variant": "declaration",
					"kind": 2048,
					"flags": {},
					"sources": [
						{
							"fileName": "transaction/meshTxBuilder/meshTxBuilderCore.ts",
							"line": 506,
							"character": 2,
							"url": "https://github.com/MeshJS/mesh/blob/1cc00f9/packages/module/src/transaction/meshTxBuilder/meshTxBuilderCore.ts#L506"
						}
					],
					"signatures": [
						{
							"id": 937,
							"name": "readOnlyTxInReference",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Specify a read only reference input. This reference input is not witnessing anything it is simply provided in the plutus script context."
									}
								],
								"blockTags": [
									{
										"tag": "@returns",
										"content": [
											{
												"kind": "text",
												"text": "The MeshTxBuilder instance"
											}
										]
									}
								]
							},
							"sources": [
								{
									"fileName": "transaction/meshTxBuilder/meshTxBuilderCore.ts",
									"line": 506,
									"character": 26,
									"url": "https://github.com/MeshJS/mesh/blob/1cc00f9/packages/module/src/transaction/meshTxBuilder/meshTxBuilderCore.ts#L506"
								}
							],
							"parameters": [
								{
									"id": 938,
									"name": "txHash",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The transaction hash of the reference UTxO"
											}
										]
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 939,
									"name": "txIndex",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The transaction index of the reference UTxO"
											}
										]
									},
									"type": {
										"type": "intrinsic",
										"name": "number"
									}
								}
							],
							"type": {
								"type": "reference",
								"target": 824,
								"name": "MeshTxBuilder",
								"package": "@meshsdk/core"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "MeshTxBuilderCore.readOnlyTxInReference"
							}
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"target": -1,
						"name": "MeshTxBuilderCore.readOnlyTxInReference"
					}
				},
				{
					"id": 981,
					"name": "registerPoolCertificate",
					"variant": "declaration",
					"kind": 2048,
					"flags": {},
					"sources": [
						{
							"fileName": "transaction/meshTxBuilder/meshTxBuilderCore.ts",
							"line": 691,
							"character": 2,
							"url": "https://github.com/MeshJS/mesh/blob/1cc00f9/packages/module/src/transaction/meshTxBuilder/meshTxBuilderCore.ts#L691"
						}
					],
					"signatures": [
						{
							"id": 982,
							"name": "registerPoolCertificate",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Creates a pool registration certificate, and adds it to the transaction"
									}
								],
								"blockTags": [
									{
										"tag": "@returns",
										"content": [
											{
												"kind": "text",
												"text": "The MeshTxBuilder instance"
											}
										]
									}
								]
							},
							"sources": [
								{
									"fileName": "transaction/meshTxBuilder/meshTxBuilderCore.ts",
									"line": 691,
									"character": 28,
									"url": "https://github.com/MeshJS/mesh/blob/1cc00f9/packages/module/src/transaction/meshTxBuilder/meshTxBuilderCore.ts#L691"
								}
							],
							"parameters": [
								{
									"id": 983,
									"name": "poolParams",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "Parameters for pool registration"
											}
										]
									},
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "src/types/PoolParams.ts",
											"qualifiedName": "PoolParams"
										},
										"name": "PoolParams",
										"package": "@meshsdk/core"
									}
								}
							],
							"type": {
								"type": "reference",
								"target": 824,
								"name": "MeshTxBuilder",
								"package": "@meshsdk/core"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "MeshTxBuilderCore.registerPoolCertificate"
							}
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"target": -1,
						"name": "MeshTxBuilderCore.registerPoolCertificate"
					}
				},
				{
					"id": 984,
					"name": "registerStakeCertificate",
					"variant": "declaration",
					"kind": 2048,
					"flags": {},
					"sources": [
						{
							"fileName": "transaction/meshTxBuilder/meshTxBuilderCore.ts",
							"line": 704,
							"character": 2,
							"url": "https://github.com/MeshJS/mesh/blob/1cc00f9/packages/module/src/transaction/meshTxBuilder/meshTxBuilderCore.ts#L704"
						}
					],
					"signatures": [
						{
							"id": 985,
							"name": "registerStakeCertificate",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Creates a stake registration certificate, and adds it to the transaction"
									}
								],
								"blockTags": [
									{
										"tag": "@returns",
										"content": [
											{
												"kind": "text",
												"text": "The MeshTxBuilder instance"
											}
										]
									}
								]
							},
							"sources": [
								{
									"fileName": "transaction/meshTxBuilder/meshTxBuilderCore.ts",
									"line": 704,
									"character": 29,
									"url": "https://github.com/MeshJS/mesh/blob/1cc00f9/packages/module/src/transaction/meshTxBuilder/meshTxBuilderCore.ts#L704"
								}
							],
							"parameters": [
								{
									"id": 986,
									"name": "stakeKeyHash",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The keyHash of the stake key"
											}
										]
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								}
							],
							"type": {
								"type": "reference",
								"target": 824,
								"name": "MeshTxBuilder",
								"package": "@meshsdk/core"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "MeshTxBuilderCore.registerStakeCertificate"
							}
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"target": -1,
						"name": "MeshTxBuilderCore.registerStakeCertificate"
					}
				},
				{
					"id": 1022,
					"name": "removeDuplicateInputs",
					"variant": "declaration",
					"kind": 2048,
					"flags": {
						"isProtected": true
					},
					"sources": [
						{
							"fileName": "transaction/meshTxBuilder/meshTxBuilderCore.ts",
							"line": 859,
							"character": 12,
							"url": "https://github.com/MeshJS/mesh/blob/1cc00f9/packages/module/src/transaction/meshTxBuilder/meshTxBuilderCore.ts#L859"
						}
					],
					"signatures": [
						{
							"id": 1023,
							"name": "removeDuplicateInputs",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"sources": [
								{
									"fileName": "transaction/meshTxBuilder/meshTxBuilderCore.ts",
									"line": 859,
									"character": 36,
									"url": "https://github.com/MeshJS/mesh/blob/1cc00f9/packages/module/src/transaction/meshTxBuilder/meshTxBuilderCore.ts#L859"
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "void"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "MeshTxBuilderCore.removeDuplicateInputs"
							}
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"target": -1,
						"name": "MeshTxBuilderCore.removeDuplicateInputs"
					}
				},
				{
					"id": 972,
					"name": "requiredSignerHash",
					"variant": "declaration",
					"kind": 2048,
					"flags": {},
					"sources": [
						{
							"fileName": "transaction/meshTxBuilder/meshTxBuilderCore.ts",
							"line": 652,
							"character": 2,
							"url": "https://github.com/MeshJS/mesh/blob/1cc00f9/packages/module/src/transaction/meshTxBuilder/meshTxBuilderCore.ts#L652"
						}
					],
					"signatures": [
						{
							"id": 973,
							"name": "requiredSignerHash",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Set the required signer of the transaction"
									}
								],
								"blockTags": [
									{
										"tag": "@returns",
										"content": [
											{
												"kind": "text",
												"text": "The MeshTxBuilder instance"
											}
										]
									}
								]
							},
							"sources": [
								{
									"fileName": "transaction/meshTxBuilder/meshTxBuilderCore.ts",
									"line": 652,
									"character": 23,
									"url": "https://github.com/MeshJS/mesh/blob/1cc00f9/packages/module/src/transaction/meshTxBuilder/meshTxBuilderCore.ts#L652"
								}
							],
							"parameters": [
								{
									"id": 974,
									"name": "pubKeyHash",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The PubKeyHash of the required signer"
											}
										]
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								}
							],
							"type": {
								"type": "reference",
								"target": 824,
								"name": "MeshTxBuilder",
								"package": "@meshsdk/core"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "MeshTxBuilderCore.requiredSignerHash"
							}
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"target": -1,
						"name": "MeshTxBuilderCore.requiredSignerHash"
					}
				},
				{
					"id": 869,
					"name": "reset",
					"variant": "declaration",
					"kind": 2048,
					"flags": {},
					"sources": [
						{
							"fileName": "transaction/meshTxBuilder/meshTxBuilderCore.ts",
							"line": 51,
							"character": 2,
							"url": "https://github.com/MeshJS/mesh/blob/1cc00f9/packages/module/src/transaction/meshTxBuilder/meshTxBuilderCore.ts#L51"
						}
					],
					"signatures": [
						{
							"id": 870,
							"name": "reset",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Reset everything in the MeshTxBuilder instance"
									}
								],
								"blockTags": [
									{
										"tag": "@returns",
										"content": [
											{
												"kind": "text",
												"text": "The MeshTxBuilder instance"
											}
										]
									}
								]
							},
							"sources": [
								{
									"fileName": "transaction/meshTxBuilder/meshTxBuilderCore.ts",
									"line": 51,
									"character": 10,
									"url": "https://github.com/MeshJS/mesh/blob/1cc00f9/packages/module/src/transaction/meshTxBuilder/meshTxBuilderCore.ts#L51"
								}
							],
							"type": {
								"type": "reference",
								"target": 824,
								"name": "MeshTxBuilder",
								"package": "@meshsdk/core"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "MeshTxBuilderCore.reset"
							}
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"target": -1,
						"name": "MeshTxBuilderCore.reset"
					}
				},
				{
					"id": 994,
					"name": "retirePoolCertificate",
					"variant": "declaration",
					"kind": 2048,
					"flags": {},
					"sources": [
						{
							"fileName": "transaction/meshTxBuilder/meshTxBuilderCore.ts",
							"line": 747,
							"character": 2,
							"url": "https://github.com/MeshJS/mesh/blob/1cc00f9/packages/module/src/transaction/meshTxBuilder/meshTxBuilderCore.ts#L747"
						}
					],
					"signatures": [
						{
							"id": 995,
							"name": "retirePoolCertificate",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Creates a pool retire certificate, and adds it to the transaction"
									}
								],
								"blockTags": [
									{
										"tag": "@returns",
										"content": [
											{
												"kind": "text",
												"text": "The MeshTxBuilder instance"
											}
										]
									}
								]
							},
							"sources": [
								{
									"fileName": "transaction/meshTxBuilder/meshTxBuilderCore.ts",
									"line": 747,
									"character": 26,
									"url": "https://github.com/MeshJS/mesh/blob/1cc00f9/packages/module/src/transaction/meshTxBuilder/meshTxBuilderCore.ts#L747"
								}
							],
							"parameters": [
								{
									"id": 996,
									"name": "poolId",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "poolId can be in either bech32 or hex form"
											}
										]
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 997,
									"name": "epoch",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The intended epoch to retire the pool"
											}
										]
									},
									"type": {
										"type": "intrinsic",
										"name": "number"
									}
								}
							],
							"type": {
								"type": "reference",
								"target": 824,
								"name": "MeshTxBuilder",
								"package": "@meshsdk/core"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "MeshTxBuilderCore.retirePoolCertificate"
							}
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"target": -1,
						"name": "MeshTxBuilderCore.retirePoolCertificate"
					}
				},
				{
					"id": 1018,
					"name": "selectUtxosFrom",
					"variant": "declaration",
					"kind": 2048,
					"flags": {},
					"sources": [
						{
							"fileName": "transaction/meshTxBuilder/meshTxBuilderCore.ts",
							"line": 823,
							"character": 2,
							"url": "https://github.com/MeshJS/mesh/blob/1cc00f9/packages/module/src/transaction/meshTxBuilder/meshTxBuilderCore.ts#L823"
						}
					],
					"signatures": [
						{
							"id": 1019,
							"name": "selectUtxosFrom",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "EXPERIMENTAL - Selects utxos to fill output value and puts them into inputs"
									}
								]
							},
							"sources": [
								{
									"fileName": "transaction/meshTxBuilder/meshTxBuilderCore.ts",
									"line": 823,
									"character": 20,
									"url": "https://github.com/MeshJS/mesh/blob/1cc00f9/packages/module/src/transaction/meshTxBuilder/meshTxBuilderCore.ts#L823"
								}
							],
							"parameters": [
								{
									"id": 1020,
									"name": "extraInputs",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The inputs already placed into the object will remain, these extra inputs will be used to fill the remaining  value needed"
											}
										]
									},
									"type": {
										"type": "array",
										"elementType": {
											"type": "reference",
											"target": {
												"sourceFileName": "src/types/UTxO.ts",
												"qualifiedName": "UTxO"
											},
											"name": "UTxO",
											"package": "@meshsdk/core"
										}
									}
								},
								{
									"id": 1021,
									"name": "threshold",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "Extra value needed to be selected for, usually for paying fees and min UTxO value of change output"
											}
										]
									},
									"type": {
										"type": "intrinsic",
										"name": "number"
									},
									"defaultValue": "5000000"
								}
							],
							"type": {
								"type": "reference",
								"target": 824,
								"name": "MeshTxBuilder",
								"package": "@meshsdk/core"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "MeshTxBuilderCore.selectUtxosFrom"
							}
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"target": -1,
						"name": "MeshTxBuilderCore.selectUtxosFrom"
					}
				},
				{
					"id": 1015,
					"name": "signingKey",
					"variant": "declaration",
					"kind": 2048,
					"flags": {},
					"sources": [
						{
							"fileName": "transaction/meshTxBuilder/meshTxBuilderCore.ts",
							"line": 813,
							"character": 2,
							"url": "https://github.com/MeshJS/mesh/blob/1cc00f9/packages/module/src/transaction/meshTxBuilder/meshTxBuilderCore.ts#L813"
						}
					],
					"signatures": [
						{
							"id": 1016,
							"name": "signingKey",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Sign the transaction with the private key"
									}
								],
								"blockTags": [
									{
										"tag": "@returns",
										"content": []
									}
								]
							},
							"sources": [
								{
									"fileName": "transaction/meshTxBuilder/meshTxBuilderCore.ts",
									"line": 813,
									"character": 15,
									"url": "https://github.com/MeshJS/mesh/blob/1cc00f9/packages/module/src/transaction/meshTxBuilder/meshTxBuilderCore.ts#L813"
								}
							],
							"parameters": [
								{
									"id": 1017,
									"name": "skeyHex",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The private key in cborHex (with or without 5820 prefix, i.e. the format when generated from cardano-cli)"
											}
										]
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								}
							],
							"type": {
								"type": "reference",
								"target": 824,
								"name": "MeshTxBuilder",
								"package": "@meshsdk/core"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "MeshTxBuilderCore.signingKey"
							}
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"target": -1,
						"name": "MeshTxBuilderCore.signingKey"
					}
				},
				{
					"id": 918,
					"name": "spendingPlutusScriptV2",
					"variant": "declaration",
					"kind": 2048,
					"flags": {},
					"sources": [
						{
							"fileName": "transaction/meshTxBuilder/meshTxBuilderCore.ts",
							"line": 434,
							"character": 2,
							"url": "https://github.com/MeshJS/mesh/blob/1cc00f9/packages/module/src/transaction/meshTxBuilder/meshTxBuilderCore.ts#L434"
						}
					],
					"signatures": [
						{
							"id": 919,
							"name": "spendingPlutusScriptV2",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Set the instruction that it is currently using V2 Plutus spending scripts"
									}
								],
								"blockTags": [
									{
										"tag": "@returns",
										"content": [
											{
												"kind": "text",
												"text": "The MeshTxBuilder instance"
											}
										]
									}
								]
							},
							"sources": [
								{
									"fileName": "transaction/meshTxBuilder/meshTxBuilderCore.ts",
									"line": 434,
									"character": 27,
									"url": "https://github.com/MeshJS/mesh/blob/1cc00f9/packages/module/src/transaction/meshTxBuilder/meshTxBuilderCore.ts#L434"
								}
							],
							"type": {
								"type": "reference",
								"target": 824,
								"name": "MeshTxBuilder",
								"package": "@meshsdk/core"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "MeshTxBuilderCore.spendingPlutusScriptV2"
							}
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"target": -1,
						"name": "MeshTxBuilderCore.spendingPlutusScriptV2"
					}
				},
				{
					"id": 926,
					"name": "spendingReferenceTxInInlineDatumPresent",
					"variant": "declaration",
					"kind": 2048,
					"flags": {},
					"sources": [
						{
							"fileName": "transaction/meshTxBuilder/meshTxBuilderCore.ts",
							"line": 479,
							"character": 2,
							"url": "https://github.com/MeshJS/mesh/blob/1cc00f9/packages/module/src/transaction/meshTxBuilder/meshTxBuilderCore.ts#L479"
						}
					],
					"signatures": [
						{
							"id": 927,
							"name": "spendingReferenceTxInInlineDatumPresent",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "[Alias of txInInlineDatumPresent] Set the instruction that the reference input has inline datum"
									}
								],
								"blockTags": [
									{
										"tag": "@returns",
										"content": [
											{
												"kind": "text",
												"text": "The MeshTxBuilder instance"
											}
										]
									}
								]
							},
							"sources": [
								{
									"fileName": "transaction/meshTxBuilder/meshTxBuilderCore.ts",
									"line": 479,
									"character": 44,
									"url": "https://github.com/MeshJS/mesh/blob/1cc00f9/packages/module/src/transaction/meshTxBuilder/meshTxBuilderCore.ts#L479"
								}
							],
							"type": {
								"type": "reference",
								"target": 824,
								"name": "MeshTxBuilder",
								"package": "@meshsdk/core"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "MeshTxBuilderCore.spendingReferenceTxInInlineDatumPresent"
							}
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"target": -1,
						"name": "MeshTxBuilderCore.spendingReferenceTxInInlineDatumPresent"
					}
				},
				{
					"id": 928,
					"name": "spendingReferenceTxInRedeemerValue",
					"variant": "declaration",
					"kind": 2048,
					"flags": {},
					"sources": [
						{
							"fileName": "transaction/meshTxBuilder/meshTxBuilderCore.ts",
							"line": 491,
							"character": 2,
							"url": "https://github.com/MeshJS/mesh/blob/1cc00f9/packages/module/src/transaction/meshTxBuilder/meshTxBuilderCore.ts#L491"
						}
					],
					"signatures": [
						{
							"id": 929,
							"name": "spendingReferenceTxInRedeemerValue",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "[Alias of txInRedeemerValue] Set the redeemer for the reference input to be spent in same transaction"
									}
								],
								"blockTags": [
									{
										"tag": "@returns",
										"content": [
											{
												"kind": "text",
												"text": "The MeshTxBuilder instance"
											}
										]
									}
								]
							},
							"sources": [
								{
									"fileName": "transaction/meshTxBuilder/meshTxBuilderCore.ts",
									"line": 491,
									"character": 39,
									"url": "https://github.com/MeshJS/mesh/blob/1cc00f9/packages/module/src/transaction/meshTxBuilder/meshTxBuilderCore.ts#L491"
								}
							],
							"parameters": [
								{
									"id": 930,
									"name": "redeemer",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The redeemer in Mesh Data type, JSON in raw constructor like format, or CBOR hex string"
											}
										]
									},
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "src/types/Data.ts",
											"qualifiedName": "Data"
										},
										"name": "Data",
										"package": "@meshsdk/core"
									}
								},
								{
									"id": 931,
									"name": "exUnits",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The execution units budget for the redeemer"
											}
										]
									},
									"type": {
										"type": "reflection",
										"declaration": {
											"id": 932,
											"name": "__type",
											"variant": "declaration",
											"kind": 65536,
											"flags": {},
											"children": [
												{
													"id": 933,
													"name": "mem",
													"variant": "declaration",
													"kind": 1024,
													"flags": {},
													"sources": [
														{
															"fileName": "types/Action.ts",
															"line": 12,
															"character": 2,
															"url": "https://github.com/MeshJS/mesh/blob/1cc00f9/packages/module/src/types/Action.ts#L12"
														}
													],
													"type": {
														"type": "intrinsic",
														"name": "number"
													}
												},
												{
													"id": 934,
													"name": "steps",
													"variant": "declaration",
													"kind": 1024,
													"flags": {},
													"sources": [
														{
															"fileName": "types/Action.ts",
															"line": 13,
															"character": 2,
															"url": "https://github.com/MeshJS/mesh/blob/1cc00f9/packages/module/src/types/Action.ts#L13"
														}
													],
													"type": {
														"type": "intrinsic",
														"name": "number"
													}
												}
											],
											"groups": [
												{
													"title": "Properties",
													"children": [
														933,
														934
													]
												}
											],
											"sources": [
												{
													"fileName": "transaction/meshTxBuilder/meshTxBuilderCore.ts",
													"line": 493,
													"character": 14,
													"url": "https://github.com/MeshJS/mesh/blob/1cc00f9/packages/module/src/transaction/meshTxBuilder/meshTxBuilderCore.ts#L493"
												}
											]
										}
									},
									"defaultValue": "..."
								},
								{
									"id": 935,
									"name": "type",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The redeemer data type, either Mesh Data type, JSON in raw constructor like format, or CBOR hex string"
											}
										]
									},
									"type": {
										"type": "union",
										"types": [
											{
												"type": "literal",
												"value": "Mesh"
											},
											{
												"type": "literal",
												"value": "JSON"
											},
											{
												"type": "literal",
												"value": "CBOR"
											}
										]
									},
									"defaultValue": "'Mesh'"
								}
							],
							"type": {
								"type": "reference",
								"target": 824,
								"name": "MeshTxBuilder",
								"package": "@meshsdk/core"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "MeshTxBuilderCore.spendingReferenceTxInRedeemerValue"
							}
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"target": -1,
						"name": "MeshTxBuilderCore.spendingReferenceTxInRedeemerValue"
					}
				},
				{
					"id": 920,
					"name": "spendingTxInReference",
					"variant": "declaration",
					"kind": 2048,
					"flags": {},
					"sources": [
						{
							"fileName": "transaction/meshTxBuilder/meshTxBuilderCore.ts",
							"line": 450,
							"character": 2,
							"url": "https://github.com/MeshJS/mesh/blob/1cc00f9/packages/module/src/transaction/meshTxBuilder/meshTxBuilderCore.ts#L450"
						}
					],
					"signatures": [
						{
							"id": 921,
							"name": "spendingTxInReference",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Set the reference input where it would also be spent in the transaction"
									}
								],
								"blockTags": [
									{
										"tag": "@returns",
										"content": [
											{
												"kind": "text",
												"text": "The MeshTxBuilder instance"
											}
										]
									}
								]
							},
							"sources": [
								{
									"fileName": "transaction/meshTxBuilder/meshTxBuilderCore.ts",
									"line": 450,
									"character": 26,
									"url": "https://github.com/MeshJS/mesh/blob/1cc00f9/packages/module/src/transaction/meshTxBuilder/meshTxBuilderCore.ts#L450"
								}
							],
							"parameters": [
								{
									"id": 922,
									"name": "txHash",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The transaction hash of the reference UTxO"
											}
										]
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 923,
									"name": "txIndex",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The transaction index of the reference UTxO"
											}
										]
									},
									"type": {
										"type": "intrinsic",
										"name": "number"
									}
								},
								{
									"id": 924,
									"name": "spendingScriptHash",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The script hash of the spending script"
											}
										]
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 925,
									"name": "version",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "src/types/PlutusScript.ts",
											"qualifiedName": "LanguageVersion"
										},
										"name": "LanguageVersion",
										"package": "@meshsdk/core"
									},
									"defaultValue": "'V2'"
								}
							],
							"type": {
								"type": "reference",
								"target": 824,
								"name": "MeshTxBuilder",
								"package": "@meshsdk/core"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "MeshTxBuilderCore.spendingTxInReference"
							}
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"target": -1,
						"name": "MeshTxBuilderCore.spendingTxInReference"
					}
				},
				{
					"id": 839,
					"name": "submitTx",
					"variant": "declaration",
					"kind": 2048,
					"flags": {},
					"sources": [
						{
							"fileName": "transaction/meshTxBuilder/meshTxBuilder.service.ts",
							"line": 87,
							"character": 2,
							"url": "https://github.com/MeshJS/mesh/blob/1cc00f9/packages/module/src/transaction/meshTxBuilder/meshTxBuilder.service.ts#L87"
						}
					],
					"signatures": [
						{
							"id": 840,
							"name": "submitTx",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Submit transactions to the blockchain using the fetcher instance"
									}
								],
								"blockTags": [
									{
										"tag": "@returns",
										"content": []
									}
								]
							},
							"sources": [
								{
									"fileName": "transaction/meshTxBuilder/meshTxBuilder.service.ts",
									"line": 87,
									"character": 13,
									"url": "https://github.com/MeshJS/mesh/blob/1cc00f9/packages/module/src/transaction/meshTxBuilder/meshTxBuilder.service.ts#L87"
								}
							],
							"parameters": [
								{
									"id": 841,
									"name": "txHex",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The signed transaction in hex"
											}
										]
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Promise"
								},
								"typeArguments": [
									{
										"type": "union",
										"types": [
											{
												"type": "intrinsic",
												"name": "undefined"
											},
											{
												"type": "intrinsic",
												"name": "string"
											}
										]
									}
								],
								"name": "Promise",
								"package": "typescript"
							}
						}
					]
				},
				{
					"id": 878,
					"name": "txIn",
					"variant": "declaration",
					"kind": 2048,
					"flags": {},
					"sources": [
						{
							"fileName": "transaction/meshTxBuilder/meshTxBuilderCore.ts",
							"line": 141,
							"character": 2,
							"url": "https://github.com/MeshJS/mesh/blob/1cc00f9/packages/module/src/transaction/meshTxBuilder/meshTxBuilderCore.ts#L141"
						}
					],
					"signatures": [
						{
							"id": 879,
							"name": "txIn",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Set the input for transaction"
									}
								],
								"blockTags": [
									{
										"tag": "@returns",
										"content": [
											{
												"kind": "text",
												"text": "The MeshTxBuilder instance"
											}
										]
									}
								]
							},
							"sources": [
								{
									"fileName": "transaction/meshTxBuilder/meshTxBuilderCore.ts",
									"line": 141,
									"character": 9,
									"url": "https://github.com/MeshJS/mesh/blob/1cc00f9/packages/module/src/transaction/meshTxBuilder/meshTxBuilderCore.ts#L141"
								}
							],
							"parameters": [
								{
									"id": 880,
									"name": "txHash",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The transaction hash of the input UTxO"
											}
										]
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 881,
									"name": "txIndex",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The transaction index of the input UTxO"
											}
										]
									},
									"type": {
										"type": "intrinsic",
										"name": "number"
									}
								},
								{
									"id": 882,
									"name": "amount",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The asset amount of index of the input UTxO"
											}
										]
									},
									"type": {
										"type": "array",
										"elementType": {
											"type": "reference",
											"target": {
												"sourceFileName": "src/types/Asset.ts",
												"qualifiedName": "Asset"
											},
											"name": "Asset",
											"package": "@meshsdk/core"
										}
									}
								},
								{
									"id": 883,
									"name": "address",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The address of the input UTxO"
											}
										]
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								}
							],
							"type": {
								"type": "reference",
								"target": 824,
								"name": "MeshTxBuilder",
								"package": "@meshsdk/core"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "MeshTxBuilderCore.txIn"
							}
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"target": -1,
						"name": "MeshTxBuilderCore.txIn"
					}
				},
				{
					"id": 975,
					"name": "txInCollateral",
					"variant": "declaration",
					"kind": 2048,
					"flags": {},
					"sources": [
						{
							"fileName": "transaction/meshTxBuilder/meshTxBuilderCore.ts",
							"line": 665,
							"character": 2,
							"url": "https://github.com/MeshJS/mesh/blob/1cc00f9/packages/module/src/transaction/meshTxBuilder/meshTxBuilderCore.ts#L665"
						}
					],
					"signatures": [
						{
							"id": 976,
							"name": "txInCollateral",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Set the collateral UTxO for the transaction"
									}
								],
								"blockTags": [
									{
										"tag": "@returns",
										"content": [
											{
												"kind": "text",
												"text": "The MeshTxBuilder instance"
											}
										]
									}
								]
							},
							"sources": [
								{
									"fileName": "transaction/meshTxBuilder/meshTxBuilderCore.ts",
									"line": 665,
									"character": 19,
									"url": "https://github.com/MeshJS/mesh/blob/1cc00f9/packages/module/src/transaction/meshTxBuilder/meshTxBuilderCore.ts#L665"
								}
							],
							"parameters": [
								{
									"id": 977,
									"name": "txHash",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The transaction hash of the collateral UTxO"
											}
										]
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 978,
									"name": "txIndex",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The transaction index of the collateral UTxO"
											}
										]
									},
									"type": {
										"type": "intrinsic",
										"name": "number"
									}
								},
								{
									"id": 979,
									"name": "amount",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The asset amount of index of the collateral UTxO"
											}
										]
									},
									"type": {
										"type": "array",
										"elementType": {
											"type": "reference",
											"target": {
												"sourceFileName": "src/types/Asset.ts",
												"qualifiedName": "Asset"
											},
											"name": "Asset",
											"package": "@meshsdk/core"
										}
									}
								},
								{
									"id": 980,
									"name": "address",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The address of the collateral UTxO"
											}
										]
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								}
							],
							"type": {
								"type": "reference",
								"target": 824,
								"name": "MeshTxBuilder",
								"package": "@meshsdk/core"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "MeshTxBuilderCore.txInCollateral"
							}
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"target": -1,
						"name": "MeshTxBuilderCore.txInCollateral"
					}
				},
				{
					"id": 888,
					"name": "txInDatumValue",
					"variant": "declaration",
					"kind": 2048,
					"flags": {},
					"sources": [
						{
							"fileName": "transaction/meshTxBuilder/meshTxBuilderCore.ts",
							"line": 202,
							"character": 2,
							"url": "https://github.com/MeshJS/mesh/blob/1cc00f9/packages/module/src/transaction/meshTxBuilder/meshTxBuilderCore.ts#L202"
						}
					],
					"signatures": [
						{
							"id": 889,
							"name": "txInDatumValue",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Set the input datum for transaction input"
									}
								],
								"blockTags": [
									{
										"tag": "@returns",
										"content": [
											{
												"kind": "text",
												"text": "The MeshTxBuilder instance"
											}
										]
									}
								]
							},
							"sources": [
								{
									"fileName": "transaction/meshTxBuilder/meshTxBuilderCore.ts",
									"line": 202,
									"character": 19,
									"url": "https://github.com/MeshJS/mesh/blob/1cc00f9/packages/module/src/transaction/meshTxBuilder/meshTxBuilderCore.ts#L202"
								}
							],
							"parameters": [
								{
									"id": 890,
									"name": "datum",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The datum in Mesh Data type, JSON in raw constructor like format, or CBOR hex string"
											}
										]
									},
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "src/types/Data.ts",
											"qualifiedName": "Data"
										},
										"name": "Data",
										"package": "@meshsdk/core"
									}
								},
								{
									"id": 891,
									"name": "type",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The datum type, either Mesh Data type, JSON in raw constructor like format, or CBOR hex string"
											}
										]
									},
									"type": {
										"type": "union",
										"types": [
											{
												"type": "literal",
												"value": "Mesh"
											},
											{
												"type": "literal",
												"value": "JSON"
											},
											{
												"type": "literal",
												"value": "CBOR"
											}
										]
									},
									"defaultValue": "'Mesh'"
								}
							],
							"type": {
								"type": "reference",
								"target": 824,
								"name": "MeshTxBuilder",
								"package": "@meshsdk/core"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "MeshTxBuilderCore.txInDatumValue"
							}
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"target": -1,
						"name": "MeshTxBuilderCore.txInDatumValue"
					}
				},
				{
					"id": 892,
					"name": "txInInlineDatumPresent",
					"variant": "declaration",
					"kind": 2048,
					"flags": {},
					"sources": [
						{
							"fileName": "transaction/meshTxBuilder/meshTxBuilderCore.ts",
							"line": 238,
							"character": 2,
							"url": "https://github.com/MeshJS/mesh/blob/1cc00f9/packages/module/src/transaction/meshTxBuilder/meshTxBuilderCore.ts#L238"
						}
					],
					"signatures": [
						{
							"id": 893,
							"name": "txInInlineDatumPresent",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Tell the transaction builder that the input UTxO has inlined datum"
									}
								],
								"blockTags": [
									{
										"tag": "@returns",
										"content": [
											{
												"kind": "text",
												"text": "The MeshTxBuilder instance"
											}
										]
									}
								]
							},
							"sources": [
								{
									"fileName": "transaction/meshTxBuilder/meshTxBuilderCore.ts",
									"line": 238,
									"character": 27,
									"url": "https://github.com/MeshJS/mesh/blob/1cc00f9/packages/module/src/transaction/meshTxBuilder/meshTxBuilderCore.ts#L238"
								}
							],
							"type": {
								"type": "reference",
								"target": 824,
								"name": "MeshTxBuilder",
								"package": "@meshsdk/core"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "MeshTxBuilderCore.txInInlineDatumPresent"
							}
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"target": -1,
						"name": "MeshTxBuilderCore.txInInlineDatumPresent"
					}
				},
				{
					"id": 894,
					"name": "txInRedeemerValue",
					"variant": "declaration",
					"kind": 2048,
					"flags": {},
					"sources": [
						{
							"fileName": "transaction/meshTxBuilder/meshTxBuilderCore.ts",
							"line": 290,
							"character": 2,
							"url": "https://github.com/MeshJS/mesh/blob/1cc00f9/packages/module/src/transaction/meshTxBuilder/meshTxBuilderCore.ts#L290"
						}
					],
					"signatures": [
						{
							"id": 895,
							"name": "txInRedeemerValue",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Set the redeemer for the reference input to be spent in same transaction"
									}
								],
								"blockTags": [
									{
										"tag": "@returns",
										"content": [
											{
												"kind": "text",
												"text": "The MeshTxBuilder instance"
											}
										]
									}
								]
							},
							"sources": [
								{
									"fileName": "transaction/meshTxBuilder/meshTxBuilderCore.ts",
									"line": 290,
									"character": 22,
									"url": "https://github.com/MeshJS/mesh/blob/1cc00f9/packages/module/src/transaction/meshTxBuilder/meshTxBuilderCore.ts#L290"
								}
							],
							"parameters": [
								{
									"id": 896,
									"name": "redeemer",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The redeemer in Mesh Data type, JSON in raw constructor like format, or CBOR hex string"
											}
										]
									},
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "src/types/Data.ts",
											"qualifiedName": "Data"
										},
										"name": "Data",
										"package": "@meshsdk/core"
									}
								},
								{
									"id": 897,
									"name": "exUnits",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The execution units budget for the redeemer"
											}
										]
									},
									"type": {
										"type": "reflection",
										"declaration": {
											"id": 898,
											"name": "__type",
											"variant": "declaration",
											"kind": 65536,
											"flags": {},
											"children": [
												{
													"id": 899,
													"name": "mem",
													"variant": "declaration",
													"kind": 1024,
													"flags": {},
													"sources": [
														{
															"fileName": "types/Action.ts",
															"line": 12,
															"character": 2,
															"url": "https://github.com/MeshJS/mesh/blob/1cc00f9/packages/module/src/types/Action.ts#L12"
														}
													],
													"type": {
														"type": "intrinsic",
														"name": "number"
													}
												},
												{
													"id": 900,
													"name": "steps",
													"variant": "declaration",
													"kind": 1024,
													"flags": {},
													"sources": [
														{
															"fileName": "types/Action.ts",
															"line": 13,
															"character": 2,
															"url": "https://github.com/MeshJS/mesh/blob/1cc00f9/packages/module/src/types/Action.ts#L13"
														}
													],
													"type": {
														"type": "intrinsic",
														"name": "number"
													}
												}
											],
											"groups": [
												{
													"title": "Properties",
													"children": [
														899,
														900
													]
												}
											],
											"sources": [
												{
													"fileName": "transaction/meshTxBuilder/meshTxBuilderCore.ts",
													"line": 292,
													"character": 14,
													"url": "https://github.com/MeshJS/mesh/blob/1cc00f9/packages/module/src/transaction/meshTxBuilder/meshTxBuilderCore.ts#L292"
												}
											]
										}
									},
									"defaultValue": "..."
								},
								{
									"id": 901,
									"name": "type",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The redeemer data type, either Mesh Data type, JSON in raw constructor like format, or CBOR hex string"
											}
										]
									},
									"type": {
										"type": "union",
										"types": [
											{
												"type": "literal",
												"value": "Mesh"
											},
											{
												"type": "literal",
												"value": "JSON"
											},
											{
												"type": "literal",
												"value": "CBOR"
											}
										]
									},
									"defaultValue": "'Mesh'"
								}
							],
							"type": {
								"type": "reference",
								"target": 824,
								"name": "MeshTxBuilder",
								"package": "@meshsdk/core"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "MeshTxBuilderCore.txInRedeemerValue"
							}
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"target": -1,
						"name": "MeshTxBuilderCore.txInRedeemerValue"
					}
				},
				{
					"id": 884,
					"name": "txInScript",
					"variant": "declaration",
					"kind": 2048,
					"flags": {},
					"sources": [
						{
							"fileName": "transaction/meshTxBuilder/meshTxBuilderCore.ts",
							"line": 182,
							"character": 2,
							"url": "https://github.com/MeshJS/mesh/blob/1cc00f9/packages/module/src/transaction/meshTxBuilder/meshTxBuilderCore.ts#L182"
						}
					],
					"signatures": [
						{
							"id": 885,
							"name": "txInScript",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Set the script for transaction input"
									}
								],
								"blockTags": [
									{
										"tag": "@returns",
										"content": [
											{
												"kind": "text",
												"text": "The MeshTxBuilder instance"
											}
										]
									}
								]
							},
							"sources": [
								{
									"fileName": "transaction/meshTxBuilder/meshTxBuilderCore.ts",
									"line": 182,
									"character": 15,
									"url": "https://github.com/MeshJS/mesh/blob/1cc00f9/packages/module/src/transaction/meshTxBuilder/meshTxBuilderCore.ts#L182"
								}
							],
							"parameters": [
								{
									"id": 886,
									"name": "scriptCbor",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The CborHex of the script"
											}
										]
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 887,
									"name": "version",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "Optional - The Plutus script version"
											}
										]
									},
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "src/types/PlutusScript.ts",
											"qualifiedName": "LanguageVersion"
										},
										"name": "LanguageVersion",
										"package": "@meshsdk/core"
									},
									"defaultValue": "'V2'"
								}
							],
							"type": {
								"type": "reference",
								"target": 824,
								"name": "MeshTxBuilder",
								"package": "@meshsdk/core"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "MeshTxBuilderCore.txInScript"
							}
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"target": -1,
						"name": "MeshTxBuilderCore.txInScript"
					}
				},
				{
					"id": 902,
					"name": "txOut",
					"variant": "declaration",
					"kind": 2048,
					"flags": {},
					"sources": [
						{
							"fileName": "transaction/meshTxBuilder/meshTxBuilderCore.ts",
							"line": 330,
							"character": 2,
							"url": "https://github.com/MeshJS/mesh/blob/1cc00f9/packages/module/src/transaction/meshTxBuilder/meshTxBuilderCore.ts#L330"
						}
					],
					"signatures": [
						{
							"id": 903,
							"name": "txOut",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Set the output for transaction"
									}
								],
								"blockTags": [
									{
										"tag": "@returns",
										"content": [
											{
												"kind": "text",
												"text": "The MeshTxBuilder instance"
											}
										]
									}
								]
							},
							"sources": [
								{
									"fileName": "transaction/meshTxBuilder/meshTxBuilderCore.ts",
									"line": 330,
									"character": 10,
									"url": "https://github.com/MeshJS/mesh/blob/1cc00f9/packages/module/src/transaction/meshTxBuilder/meshTxBuilderCore.ts#L330"
								}
							],
							"parameters": [
								{
									"id": 904,
									"name": "address",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The recipient of the output"
											}
										]
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 905,
									"name": "amount",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The amount of other native assets attached with UTxO"
											}
										]
									},
									"type": {
										"type": "array",
										"elementType": {
											"type": "reference",
											"target": {
												"sourceFileName": "src/types/Asset.ts",
												"qualifiedName": "Asset"
											},
											"name": "Asset",
											"package": "@meshsdk/core"
										}
									}
								}
							],
							"type": {
								"type": "reference",
								"target": 824,
								"name": "MeshTxBuilder",
								"package": "@meshsdk/core"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "MeshTxBuilderCore.txOut"
							}
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"target": -1,
						"name": "MeshTxBuilderCore.txOut"
					}
				},
				{
					"id": 906,
					"name": "txOutDatumHashValue",
					"variant": "declaration",
					"kind": 2048,
					"flags": {},
					"sources": [
						{
							"fileName": "transaction/meshTxBuilder/meshTxBuilderCore.ts",
							"line": 348,
							"character": 2,
							"url": "https://github.com/MeshJS/mesh/blob/1cc00f9/packages/module/src/transaction/meshTxBuilder/meshTxBuilderCore.ts#L348"
						}
					],
					"signatures": [
						{
							"id": 907,
							"name": "txOutDatumHashValue",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Set the output datum hash for transaction"
									}
								],
								"blockTags": [
									{
										"tag": "@returns",
										"content": [
											{
												"kind": "text",
												"text": "The MeshTxBuilder instance"
											}
										]
									}
								]
							},
							"sources": [
								{
									"fileName": "transaction/meshTxBuilder/meshTxBuilderCore.ts",
									"line": 348,
									"character": 24,
									"url": "https://github.com/MeshJS/mesh/blob/1cc00f9/packages/module/src/transaction/meshTxBuilder/meshTxBuilderCore.ts#L348"
								}
							],
							"parameters": [
								{
									"id": 908,
									"name": "datum",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The datum in Mesh Data type, JSON in raw constructor like format, or CBOR hex string"
											}
										]
									},
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "src/types/Data.ts",
											"qualifiedName": "Data"
										},
										"name": "Data",
										"package": "@meshsdk/core"
									}
								},
								{
									"id": 909,
									"name": "type",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The datum type, either Mesh Data type, JSON in raw constructor like format, or CBOR hex string"
											}
										]
									},
									"type": {
										"type": "union",
										"types": [
											{
												"type": "literal",
												"value": "Mesh"
											},
											{
												"type": "literal",
												"value": "JSON"
											},
											{
												"type": "literal",
												"value": "CBOR"
											}
										]
									},
									"defaultValue": "'Mesh'"
								}
							],
							"type": {
								"type": "reference",
								"target": 824,
								"name": "MeshTxBuilder",
								"package": "@meshsdk/core"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "MeshTxBuilderCore.txOutDatumHashValue"
							}
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"target": -1,
						"name": "MeshTxBuilderCore.txOutDatumHashValue"
					}
				},
				{
					"id": 910,
					"name": "txOutInlineDatumValue",
					"variant": "declaration",
					"kind": 2048,
					"flags": {},
					"sources": [
						{
							"fileName": "transaction/meshTxBuilder/meshTxBuilderCore.ts",
							"line": 384,
							"character": 2,
							"url": "https://github.com/MeshJS/mesh/blob/1cc00f9/packages/module/src/transaction/meshTxBuilder/meshTxBuilderCore.ts#L384"
						}
					],
					"signatures": [
						{
							"id": 911,
							"name": "txOutInlineDatumValue",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Set the output inline datum for transaction"
									}
								],
								"blockTags": [
									{
										"tag": "@returns",
										"content": [
											{
												"kind": "text",
												"text": "The MeshTxBuilder instance"
											}
										]
									}
								]
							},
							"sources": [
								{
									"fileName": "transaction/meshTxBuilder/meshTxBuilderCore.ts",
									"line": 384,
									"character": 26,
									"url": "https://github.com/MeshJS/mesh/blob/1cc00f9/packages/module/src/transaction/meshTxBuilder/meshTxBuilderCore.ts#L384"
								}
							],
							"parameters": [
								{
									"id": 912,
									"name": "datum",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The datum in Mesh Data type, JSON in raw constructor like format, or CBOR hex string"
											}
										]
									},
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "src/types/Data.ts",
											"qualifiedName": "Data"
										},
										"name": "Data",
										"package": "@meshsdk/core"
									}
								},
								{
									"id": 913,
									"name": "type",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The datum type, either Mesh Data type, JSON in raw constructor like format, or CBOR hex string"
											}
										]
									},
									"type": {
										"type": "union",
										"types": [
											{
												"type": "literal",
												"value": "Mesh"
											},
											{
												"type": "literal",
												"value": "JSON"
											},
											{
												"type": "literal",
												"value": "CBOR"
											}
										]
									},
									"defaultValue": "'Mesh'"
								}
							],
							"type": {
								"type": "reference",
								"target": 824,
								"name": "MeshTxBuilder",
								"package": "@meshsdk/core"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "MeshTxBuilderCore.txOutInlineDatumValue"
							}
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"target": -1,
						"name": "MeshTxBuilderCore.txOutInlineDatumValue"
					}
				},
				{
					"id": 914,
					"name": "txOutReferenceScript",
					"variant": "declaration",
					"kind": 2048,
					"flags": {},
					"sources": [
						{
							"fileName": "transaction/meshTxBuilder/meshTxBuilderCore.ts",
							"line": 420,
							"character": 2,
							"url": "https://github.com/MeshJS/mesh/blob/1cc00f9/packages/module/src/transaction/meshTxBuilder/meshTxBuilderCore.ts#L420"
						}
					],
					"signatures": [
						{
							"id": 915,
							"name": "txOutReferenceScript",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Set the reference script to be attached with the output"
									}
								],
								"blockTags": [
									{
										"tag": "@returns",
										"content": [
											{
												"kind": "text",
												"text": "The MeshTxBuilder instance"
											}
										]
									}
								]
							},
							"sources": [
								{
									"fileName": "transaction/meshTxBuilder/meshTxBuilderCore.ts",
									"line": 420,
									"character": 25,
									"url": "https://github.com/MeshJS/mesh/blob/1cc00f9/packages/module/src/transaction/meshTxBuilder/meshTxBuilderCore.ts#L420"
								}
							],
							"parameters": [
								{
									"id": 916,
									"name": "scriptCbor",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The CBOR hex of the script to be attached to UTxO as reference script"
											}
										]
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 917,
									"name": "version",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "Optional - The Plutus script version"
											}
										]
									},
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "src/types/PlutusScript.ts",
											"qualifiedName": "LanguageVersion"
										},
										"name": "LanguageVersion",
										"package": "@meshsdk/core"
									},
									"defaultValue": "'V2'"
								}
							],
							"type": {
								"type": "reference",
								"target": 824,
								"name": "MeshTxBuilder",
								"package": "@meshsdk/core"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "MeshTxBuilderCore.txOutReferenceScript"
							}
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"target": -1,
						"name": "MeshTxBuilderCore.txOutReferenceScript"
					}
				},
				{
					"id": 1026,
					"name": "updateRedeemer",
					"variant": "declaration",
					"kind": 2048,
					"flags": {
						"isProtected": true
					},
					"sources": [
						{
							"fileName": "transaction/meshTxBuilder/meshTxBuilderCore.ts",
							"line": 893,
							"character": 12,
							"url": "https://github.com/MeshJS/mesh/blob/1cc00f9/packages/module/src/transaction/meshTxBuilder/meshTxBuilderCore.ts#L893"
						}
					],
					"signatures": [
						{
							"id": 1027,
							"name": "updateRedeemer",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"sources": [
								{
									"fileName": "transaction/meshTxBuilder/meshTxBuilderCore.ts",
									"line": 893,
									"character": 29,
									"url": "https://github.com/MeshJS/mesh/blob/1cc00f9/packages/module/src/transaction/meshTxBuilder/meshTxBuilderCore.ts#L893"
								}
							],
							"parameters": [
								{
									"id": 1028,
									"name": "meshTxBuilderBody",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"type": {
										"type": "reference",
										"target": 1033,
										"name": "MeshTxBuilderBody",
										"package": "@meshsdk/core"
									}
								},
								{
									"id": 1029,
									"name": "txEvaluation",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"type": {
										"type": "array",
										"elementType": {
											"type": "reference",
											"target": {
												"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
												"qualifiedName": "Omit"
											},
											"typeArguments": [
												{
													"type": "reference",
													"target": {
														"sourceFileName": "src/types/Action.ts",
														"qualifiedName": "Action"
													},
													"name": "Action",
													"package": "@meshsdk/core"
												},
												{
													"type": "literal",
													"value": "data"
												}
											],
											"name": "Omit",
											"package": "typescript"
										}
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "void"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "MeshTxBuilderCore.updateRedeemer"
							}
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"target": -1,
						"name": "MeshTxBuilderCore.updateRedeemer"
					}
				}
			],
			"groups": [
				{
					"title": "Constructors",
					"children": [
						825
					]
				},
				{
					"title": "Properties",
					"children": [
						830,
						828,
						829,
						867,
						863,
						864,
						865,
						831,
						832,
						868,
						862,
						861,
						860,
						866
					]
				},
				{
					"title": "Methods",
					"children": [
						1030,
						998,
						836,
						876,
						873,
						848,
						987,
						991,
						871,
						842,
						1001,
						1004,
						851,
						854,
						857,
						1007,
						942,
						940,
						964,
						956,
						951,
						947,
						1012,
						845,
						1024,
						936,
						981,
						984,
						1022,
						972,
						869,
						994,
						1018,
						1015,
						918,
						926,
						928,
						920,
						839,
						878,
						975,
						888,
						892,
						894,
						884,
						902,
						906,
						910,
						914,
						1026
					]
				}
			],
			"sources": [
				{
					"fileName": "transaction/meshTxBuilder/meshTxBuilder.service.ts",
					"line": 24,
					"character": 13,
					"url": "https://github.com/MeshJS/mesh/blob/1cc00f9/packages/module/src/transaction/meshTxBuilder/meshTxBuilder.service.ts#L24"
				}
			],
			"extendedTypes": [
				{
					"type": "reference",
					"target": {
						"sourceFileName": "src/transaction/meshTxBuilder/meshTxBuilderCore.ts",
						"qualifiedName": "MeshTxBuilderCore"
					},
					"name": "MeshTxBuilderCore",
					"package": "@meshsdk/core"
				}
			]
		},
		{
			"id": 1386,
			"name": "MeshWallet",
			"variant": "declaration",
			"kind": 128,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "Mesh Wallet provides a set of APIs to interact with the blockchain. This wallet is compatible with Mesh transaction builders.\n\nIt is a single address wallet, a wrapper around the AppWallet class.\n\n"
					},
					{
						"kind": "code",
						"text": "```javascript\nimport { MeshWallet, BlockfrostProvider } from '@meshsdk/core';\n\nconst blockchainProvider = new BlockfrostProvider('<BLOCKFROST_API_KEY>');\n\nconst wallet = new MeshWallet({\n  networkId: 0,\n  fetcher: blockchainProvider,\n  submitter: blockchainProvider,\n  key: {\n    type: 'mnemonic',\n    words: [\"solution\",\"solution\",\"solution\",\"solution\",\"solution\",\"solution\",\"solution\",\"solution\",\"solution\",\"solution\",\"solution\",\"solution\",\"solution\",\"solution\",\"solution\",\"solution\",\"solution\",\"solution\",\"solution\",\"solution\",\"solution\",\"solution\",\"solution\",\"solution\"],\n  },\n});\n```"
					}
				]
			},
			"children": [
				{
					"id": 1391,
					"name": "constructor",
					"variant": "declaration",
					"kind": 512,
					"flags": {},
					"sources": [
						{
							"fileName": "wallet/mesh.service.ts",
							"line": 65,
							"character": 2,
							"url": "https://github.com/MeshJS/mesh/blob/1cc00f9/packages/module/src/wallet/mesh.service.ts#L65"
						}
					],
					"signatures": [
						{
							"id": 1392,
							"name": "new MeshWallet",
							"variant": "signature",
							"kind": 16384,
							"flags": {},
							"sources": [
								{
									"fileName": "wallet/mesh.service.ts",
									"line": 65,
									"character": 2,
									"url": "https://github.com/MeshJS/mesh/blob/1cc00f9/packages/module/src/wallet/mesh.service.ts#L65"
								}
							],
							"parameters": [
								{
									"id": 1393,
									"name": "options",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"type": {
										"type": "reference",
										"target": 1370,
										"name": "CreateMeshWalletOptions",
										"package": "@meshsdk/core"
									}
								}
							],
							"type": {
								"type": "reference",
								"target": 1386,
								"name": "MeshWallet",
								"package": "@meshsdk/core"
							}
						}
					]
				},
				{
					"id": 1395,
					"name": "_network",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isPrivate": true,
						"isReadonly": true
					},
					"sources": [
						{
							"fileName": "wallet/mesh.service.ts",
							"line": 63,
							"character": 19,
							"url": "https://github.com/MeshJS/mesh/blob/1cc00f9/packages/module/src/wallet/mesh.service.ts#L63"
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "number"
					}
				},
				{
					"id": 1394,
					"name": "_wallet",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isPrivate": true,
						"isReadonly": true
					},
					"sources": [
						{
							"fileName": "wallet/mesh.service.ts",
							"line": 62,
							"character": 19,
							"url": "https://github.com/MeshJS/mesh/blob/1cc00f9/packages/module/src/wallet/mesh.service.ts#L62"
						}
					],
					"type": {
						"type": "reference",
						"target": 1176,
						"name": "AppWallet",
						"package": "@meshsdk/core"
					}
				},
				{
					"id": 1441,
					"name": "createCollateral",
					"variant": "declaration",
					"kind": 2048,
					"flags": {},
					"sources": [
						{
							"fileName": "wallet/mesh.service.ts",
							"line": 388,
							"character": 8,
							"url": "https://github.com/MeshJS/mesh/blob/1cc00f9/packages/module/src/wallet/mesh.service.ts#L388"
						}
					],
					"signatures": [
						{
							"id": 1442,
							"name": "createCollateral",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "A helper function to create a collateral input for a transaction."
									}
								],
								"blockTags": [
									{
										"tag": "@returns",
										"content": [
											{
												"kind": "text",
												"text": "a transaction hash"
											}
										]
									}
								]
							},
							"sources": [
								{
									"fileName": "wallet/mesh.service.ts",
									"line": 388,
									"character": 8,
									"url": "https://github.com/MeshJS/mesh/blob/1cc00f9/packages/module/src/wallet/mesh.service.ts#L388"
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Promise"
								},
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "string"
									}
								],
								"name": "Promise",
								"package": "typescript"
							}
						}
					]
				},
				{
					"id": 1432,
					"name": "getAssets",
					"variant": "declaration",
					"kind": 2048,
					"flags": {},
					"sources": [
						{
							"fileName": "wallet/mesh.service.ts",
							"line": 329,
							"character": 8,
							"url": "https://github.com/MeshJS/mesh/blob/1cc00f9/packages/module/src/wallet/mesh.service.ts#L329"
						}
					],
					"signatures": [
						{
							"id": 1433,
							"name": "getAssets",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "A helper function to get the assets in the wallet."
									}
								],
								"blockTags": [
									{
										"tag": "@returns",
										"content": [
											{
												"kind": "text",
												"text": "a list of assets"
											}
										]
									}
								]
							},
							"sources": [
								{
									"fileName": "wallet/mesh.service.ts",
									"line": 329,
									"character": 8,
									"url": "https://github.com/MeshJS/mesh/blob/1cc00f9/packages/module/src/wallet/mesh.service.ts#L329"
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Promise"
								},
								"typeArguments": [
									{
										"type": "array",
										"elementType": {
											"type": "reference",
											"target": {
												"sourceFileName": "src/types/AssetExtended.ts",
												"qualifiedName": "AssetExtended"
											},
											"name": "AssetExtended",
											"package": "@meshsdk/core"
										}
									}
								],
								"name": "Promise",
								"package": "typescript"
							}
						}
					]
				},
				{
					"id": 1396,
					"name": "getBalance",
					"variant": "declaration",
					"kind": 2048,
					"flags": {},
					"sources": [
						{
							"fileName": "wallet/mesh.service.ts",
							"line": 112,
							"character": 8,
							"url": "https://github.com/MeshJS/mesh/blob/1cc00f9/packages/module/src/wallet/mesh.service.ts#L112"
						}
					],
					"signatures": [
						{
							"id": 1397,
							"name": "getBalance",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Returns a list of assets in the wallet. This API will return every assets in the wallet. Each asset is an object with the following properties:\n- A unit is provided to display asset's name on the user interface.\n- A quantity is provided to display asset's quantity on the user interface."
									}
								],
								"blockTags": [
									{
										"tag": "@returns",
										"content": [
											{
												"kind": "text",
												"text": "a list of assets and their quantities"
											}
										]
									}
								]
							},
							"sources": [
								{
									"fileName": "wallet/mesh.service.ts",
									"line": 112,
									"character": 8,
									"url": "https://github.com/MeshJS/mesh/blob/1cc00f9/packages/module/src/wallet/mesh.service.ts#L112"
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Promise"
								},
								"typeArguments": [
									{
										"type": "array",
										"elementType": {
											"type": "reference",
											"target": {
												"sourceFileName": "src/types/Asset.ts",
												"qualifiedName": "Asset"
											},
											"name": "Asset",
											"package": "@meshsdk/core"
										}
									}
								],
								"name": "Promise",
								"package": "typescript"
							}
						}
					]
				},
				{
					"id": 1398,
					"name": "getChangeAddress",
					"variant": "declaration",
					"kind": 2048,
					"flags": {},
					"sources": [
						{
							"fileName": "wallet/mesh.service.ts",
							"line": 142,
							"character": 2,
							"url": "https://github.com/MeshJS/mesh/blob/1cc00f9/packages/module/src/wallet/mesh.service.ts#L142"
						}
					],
					"signatures": [
						{
							"id": 1399,
							"name": "getChangeAddress",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Returns an address owned by the wallet that should be used as a change address to return leftover assets during transaction creation back to the connected wallet."
									}
								],
								"blockTags": [
									{
										"tag": "@returns",
										"content": [
											{
												"kind": "text",
												"text": "an address"
											}
										]
									}
								]
							},
							"sources": [
								{
									"fileName": "wallet/mesh.service.ts",
									"line": 142,
									"character": 2,
									"url": "https://github.com/MeshJS/mesh/blob/1cc00f9/packages/module/src/wallet/mesh.service.ts#L142"
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						}
					]
				},
				{
					"id": 1400,
					"name": "getCollateral",
					"variant": "declaration",
					"kind": 2048,
					"flags": {},
					"sources": [
						{
							"fileName": "wallet/mesh.service.ts",
							"line": 154,
							"character": 8,
							"url": "https://github.com/MeshJS/mesh/blob/1cc00f9/packages/module/src/wallet/mesh.service.ts#L154"
						}
					],
					"signatures": [
						{
							"id": 1401,
							"name": "getCollateral",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "This function shall return a list of one or more UTXOs (unspent transaction outputs) controlled by the wallet that are required to reach AT LEAST the combined ADA value target specified in amount AND the best suitable to be used as collateral inputs for transactions with plutus script inputs (pure ADA-only UTXOs).\n\nIf this cannot be attained, an error message with an explanation of the blocking problem shall be returned. NOTE: wallets are free to return UTXOs that add up to a greater total ADA value than requested in the amount parameter, but wallets must never return any result where UTXOs would sum up to a smaller total ADA value, instead in a case like that an error message must be returned."
									}
								],
								"blockTags": [
									{
										"tag": "@returns",
										"content": [
											{
												"kind": "text",
												"text": "a list of UTXOs"
											}
										]
									}
								]
							},
							"sources": [
								{
									"fileName": "wallet/mesh.service.ts",
									"line": 154,
									"character": 8,
									"url": "https://github.com/MeshJS/mesh/blob/1cc00f9/packages/module/src/wallet/mesh.service.ts#L154"
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Promise"
								},
								"typeArguments": [
									{
										"type": "array",
										"elementType": {
											"type": "reference",
											"target": {
												"sourceFileName": "src/types/UTxO.ts",
												"qualifiedName": "UTxO"
											},
											"name": "UTxO",
											"package": "@meshsdk/core"
										}
									}
								],
								"name": "Promise",
								"package": "typescript"
							}
						}
					]
				},
				{
					"id": 1434,
					"name": "getLovelace",
					"variant": "declaration",
					"kind": 2048,
					"flags": {},
					"sources": [
						{
							"fileName": "wallet/mesh.service.ts",
							"line": 353,
							"character": 8,
							"url": "https://github.com/MeshJS/mesh/blob/1cc00f9/packages/module/src/wallet/mesh.service.ts#L353"
						}
					],
					"signatures": [
						{
							"id": 1435,
							"name": "getLovelace",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "A helper function to get the lovelace balance in the wallet."
									}
								],
								"blockTags": [
									{
										"tag": "@returns",
										"content": [
											{
												"kind": "text",
												"text": "lovelace balance"
											}
										]
									}
								]
							},
							"sources": [
								{
									"fileName": "wallet/mesh.service.ts",
									"line": 353,
									"character": 8,
									"url": "https://github.com/MeshJS/mesh/blob/1cc00f9/packages/module/src/wallet/mesh.service.ts#L353"
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Promise"
								},
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "string"
									}
								],
								"name": "Promise",
								"package": "typescript"
							}
						}
					]
				},
				{
					"id": 1402,
					"name": "getNetworkId",
					"variant": "declaration",
					"kind": 2048,
					"flags": {},
					"sources": [
						{
							"fileName": "wallet/mesh.service.ts",
							"line": 188,
							"character": 2,
							"url": "https://github.com/MeshJS/mesh/blob/1cc00f9/packages/module/src/wallet/mesh.service.ts#L188"
						}
					],
					"signatures": [
						{
							"id": 1403,
							"name": "getNetworkId",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Returns the network ID of the currently connected account. 0 is testnet and 1 is mainnet but other networks can possibly be returned by wallets. Those other network ID values are not governed by CIP-30. This result will stay the same unless the connected account has changed."
									}
								],
								"blockTags": [
									{
										"tag": "@returns",
										"content": [
											{
												"kind": "text",
												"text": "network ID"
											}
										]
									}
								]
							},
							"sources": [
								{
									"fileName": "wallet/mesh.service.ts",
									"line": 188,
									"character": 2,
									"url": "https://github.com/MeshJS/mesh/blob/1cc00f9/packages/module/src/wallet/mesh.service.ts#L188"
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "number"
							}
						}
					]
				},
				{
					"id": 1436,
					"name": "getPolicyIdAssets",
					"variant": "declaration",
					"kind": 2048,
					"flags": {},
					"sources": [
						{
							"fileName": "wallet/mesh.service.ts",
							"line": 366,
							"character": 8,
							"url": "https://github.com/MeshJS/mesh/blob/1cc00f9/packages/module/src/wallet/mesh.service.ts#L366"
						}
					],
					"signatures": [
						{
							"id": 1437,
							"name": "getPolicyIdAssets",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "A helper function to get the assets of a specific policy ID in the wallet."
									}
								],
								"blockTags": [
									{
										"tag": "@returns",
										"content": [
											{
												"kind": "text",
												"text": "a list of assets"
											}
										]
									}
								]
							},
							"sources": [
								{
									"fileName": "wallet/mesh.service.ts",
									"line": 366,
									"character": 8,
									"url": "https://github.com/MeshJS/mesh/blob/1cc00f9/packages/module/src/wallet/mesh.service.ts#L366"
								}
							],
							"parameters": [
								{
									"id": 1438,
									"name": "policyId",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Promise"
								},
								"typeArguments": [
									{
										"type": "array",
										"elementType": {
											"type": "reference",
											"target": {
												"sourceFileName": "src/types/AssetExtended.ts",
												"qualifiedName": "AssetExtended"
											},
											"name": "AssetExtended",
											"package": "@meshsdk/core"
										}
									}
								],
								"name": "Promise",
								"package": "typescript"
							}
						}
					]
				},
				{
					"id": 1439,
					"name": "getPolicyIds",
					"variant": "declaration",
					"kind": 2048,
					"flags": {},
					"sources": [
						{
							"fileName": "wallet/mesh.service.ts",
							"line": 376,
							"character": 8,
							"url": "https://github.com/MeshJS/mesh/blob/1cc00f9/packages/module/src/wallet/mesh.service.ts#L376"
						}
					],
					"signatures": [
						{
							"id": 1440,
							"name": "getPolicyIds",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "A helper function to get the policy IDs of all the assets in the wallet."
									}
								],
								"blockTags": [
									{
										"tag": "@returns",
										"content": [
											{
												"kind": "text",
												"text": "a list of policy IDs"
											}
										]
									}
								]
							},
							"sources": [
								{
									"fileName": "wallet/mesh.service.ts",
									"line": 376,
									"character": 8,
									"url": "https://github.com/MeshJS/mesh/blob/1cc00f9/packages/module/src/wallet/mesh.service.ts#L376"
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Promise"
								},
								"typeArguments": [
									{
										"type": "array",
										"elementType": {
											"type": "intrinsic",
											"name": "string"
										}
									}
								],
								"name": "Promise",
								"package": "typescript"
							}
						}
					]
				},
				{
					"id": 1404,
					"name": "getRewardAddresses",
					"variant": "declaration",
					"kind": 2048,
					"flags": {},
					"sources": [
						{
							"fileName": "wallet/mesh.service.ts",
							"line": 197,
							"character": 8,
							"url": "https://github.com/MeshJS/mesh/blob/1cc00f9/packages/module/src/wallet/mesh.service.ts#L197"
						}
					],
					"signatures": [
						{
							"id": 1405,
							"name": "getRewardAddresses",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Returns a list of reward addresses owned by the wallet. A reward address is a stake address that is used to receive rewards from staking, generally starts from "
									},
									{
										"kind": "code",
										"text": "`stake`"
									},
									{
										"kind": "text",
										"text": " prefix."
									}
								],
								"blockTags": [
									{
										"tag": "@returns",
										"content": [
											{
												"kind": "text",
												"text": "a list of reward addresses"
											}
										]
									}
								]
							},
							"sources": [
								{
									"fileName": "wallet/mesh.service.ts",
									"line": 197,
									"character": 8,
									"url": "https://github.com/MeshJS/mesh/blob/1cc00f9/packages/module/src/wallet/mesh.service.ts#L197"
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Promise"
								},
								"typeArguments": [
									{
										"type": "array",
										"elementType": {
											"type": "intrinsic",
											"name": "string"
										}
									}
								],
								"name": "Promise",
								"package": "typescript"
							}
						}
					]
				},
				{
					"id": 1406,
					"name": "getUnusedAddresses",
					"variant": "declaration",
					"kind": 2048,
					"flags": {},
					"sources": [
						{
							"fileName": "wallet/mesh.service.ts",
							"line": 206,
							"character": 2,
							"url": "https://github.com/MeshJS/mesh/blob/1cc00f9/packages/module/src/wallet/mesh.service.ts#L206"
						}
					],
					"signatures": [
						{
							"id": 1407,
							"name": "getUnusedAddresses",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Returns a list of unused addresses controlled by the wallet."
									}
								],
								"blockTags": [
									{
										"tag": "@returns",
										"content": [
											{
												"kind": "text",
												"text": "a list of unused addresses"
											}
										]
									}
								]
							},
							"sources": [
								{
									"fileName": "wallet/mesh.service.ts",
									"line": 206,
									"character": 2,
									"url": "https://github.com/MeshJS/mesh/blob/1cc00f9/packages/module/src/wallet/mesh.service.ts#L206"
								}
							],
							"type": {
								"type": "array",
								"elementType": {
									"type": "intrinsic",
									"name": "string"
								}
							}
						}
					]
				},
				{
					"id": 1426,
					"name": "getUsedAddress",
					"variant": "declaration",
					"kind": 2048,
					"flags": {},
					"sources": [
						{
							"fileName": "wallet/mesh.service.ts",
							"line": 292,
							"character": 2,
							"url": "https://github.com/MeshJS/mesh/blob/1cc00f9/packages/module/src/wallet/mesh.service.ts#L292"
						}
					],
					"signatures": [
						{
							"id": 1427,
							"name": "getUsedAddress",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Get a used address of type Address from the wallet.\n\nThis is used in transaction building."
									}
								],
								"blockTags": [
									{
										"tag": "@returns",
										"content": [
											{
												"kind": "text",
												"text": "an Address object"
											}
										]
									}
								]
							},
							"sources": [
								{
									"fileName": "wallet/mesh.service.ts",
									"line": 292,
									"character": 2,
									"url": "https://github.com/MeshJS/mesh/blob/1cc00f9/packages/module/src/wallet/mesh.service.ts#L292"
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/@sidan-lab/sidan-csl-rs-nodejs/sidan_csl_rs.d.ts",
									"qualifiedName": "Address"
								},
								"name": "Address",
								"package": "@sidan-lab/sidan-csl-rs-nodejs"
							},
							"implementationOf": {
								"type": "reference",
								"target": 58,
								"name": "IInitiator.getUsedAddress"
							}
						}
					],
					"implementationOf": {
						"type": "reference",
						"target": 57,
						"name": "IInitiator.getUsedAddress"
					}
				},
				{
					"id": 1408,
					"name": "getUsedAddresses",
					"variant": "declaration",
					"kind": 2048,
					"flags": {},
					"sources": [
						{
							"fileName": "wallet/mesh.service.ts",
							"line": 216,
							"character": 8,
							"url": "https://github.com/MeshJS/mesh/blob/1cc00f9/packages/module/src/wallet/mesh.service.ts#L216"
						}
					],
					"signatures": [
						{
							"id": 1409,
							"name": "getUsedAddresses",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Returns a list of used addresses controlled by the wallet."
									}
								],
								"blockTags": [
									{
										"tag": "@returns",
										"content": [
											{
												"kind": "text",
												"text": "a list of used addresses"
											}
										]
									}
								]
							},
							"sources": [
								{
									"fileName": "wallet/mesh.service.ts",
									"line": 216,
									"character": 8,
									"url": "https://github.com/MeshJS/mesh/blob/1cc00f9/packages/module/src/wallet/mesh.service.ts#L216"
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Promise"
								},
								"typeArguments": [
									{
										"type": "array",
										"elementType": {
											"type": "intrinsic",
											"name": "string"
										}
									}
								],
								"name": "Promise",
								"package": "typescript"
							}
						}
					]
				},
				{
					"id": 1428,
					"name": "getUsedCollateral",
					"variant": "declaration",
					"kind": 2048,
					"flags": {},
					"sources": [
						{
							"fileName": "wallet/mesh.service.ts",
							"line": 303,
							"character": 8,
							"url": "https://github.com/MeshJS/mesh/blob/1cc00f9/packages/module/src/wallet/mesh.service.ts#L303"
						}
					],
					"signatures": [
						{
							"id": 1429,
							"name": "getUsedCollateral",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Get a list of UTXOs to be used as collateral inputs for transactions with plutus script inputs.\n\nThis is used in transaction building."
									}
								],
								"blockTags": [
									{
										"tag": "@returns",
										"content": [
											{
												"kind": "text",
												"text": "a list of UTXOs"
											}
										]
									}
								]
							},
							"sources": [
								{
									"fileName": "wallet/mesh.service.ts",
									"line": 303,
									"character": 8,
									"url": "https://github.com/MeshJS/mesh/blob/1cc00f9/packages/module/src/wallet/mesh.service.ts#L303"
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Promise"
								},
								"typeArguments": [
									{
										"type": "array",
										"elementType": {
											"type": "reference",
											"target": {
												"sourceFileName": "../../node_modules/@sidan-lab/sidan-csl-rs-nodejs/sidan_csl_rs.d.ts",
												"qualifiedName": "TransactionUnspentOutput"
											},
											"name": "TransactionUnspentOutput",
											"package": "@sidan-lab/sidan-csl-rs-nodejs"
										}
									}
								],
								"name": "Promise",
								"package": "typescript"
							},
							"implementationOf": {
								"type": "reference",
								"target": 60,
								"name": "IInitiator.getUsedCollateral"
							}
						}
					],
					"implementationOf": {
						"type": "reference",
						"target": 59,
						"name": "IInitiator.getUsedCollateral"
					}
				},
				{
					"id": 1430,
					"name": "getUsedUTxOs",
					"variant": "declaration",
					"kind": 2048,
					"flags": {},
					"sources": [
						{
							"fileName": "wallet/mesh.service.ts",
							"line": 320,
							"character": 8,
							"url": "https://github.com/MeshJS/mesh/blob/1cc00f9/packages/module/src/wallet/mesh.service.ts#L320"
						}
					],
					"signatures": [
						{
							"id": 1431,
							"name": "getUsedUTxOs",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Get a list of UTXOs to be used for transaction building.\n\nThis is used in transaction building."
									}
								],
								"blockTags": [
									{
										"tag": "@returns",
										"content": [
											{
												"kind": "text",
												"text": "a list of UTXOs"
											}
										]
									}
								]
							},
							"sources": [
								{
									"fileName": "wallet/mesh.service.ts",
									"line": 320,
									"character": 8,
									"url": "https://github.com/MeshJS/mesh/blob/1cc00f9/packages/module/src/wallet/mesh.service.ts#L320"
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Promise"
								},
								"typeArguments": [
									{
										"type": "array",
										"elementType": {
											"type": "reference",
											"target": {
												"sourceFileName": "../../node_modules/@sidan-lab/sidan-csl-rs-nodejs/sidan_csl_rs.d.ts",
												"qualifiedName": "TransactionUnspentOutput"
											},
											"name": "TransactionUnspentOutput",
											"package": "@sidan-lab/sidan-csl-rs-nodejs"
										}
									}
								],
								"name": "Promise",
								"package": "typescript"
							},
							"implementationOf": {
								"type": "reference",
								"target": 63,
								"name": "IInitiator.getUsedUTxOs"
							}
						}
					],
					"implementationOf": {
						"type": "reference",
						"target": 62,
						"name": "IInitiator.getUsedUTxOs"
					}
				},
				{
					"id": 1410,
					"name": "getUtxos",
					"variant": "declaration",
					"kind": 2048,
					"flags": {},
					"sources": [
						{
							"fileName": "wallet/mesh.service.ts",
							"line": 226,
							"character": 8,
							"url": "https://github.com/MeshJS/mesh/blob/1cc00f9/packages/module/src/wallet/mesh.service.ts#L226"
						}
					],
					"signatures": [
						{
							"id": 1411,
							"name": "getUtxos",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Return a list of all UTXOs (unspent transaction outputs) controlled by the wallet."
									}
								],
								"blockTags": [
									{
										"tag": "@returns",
										"content": [
											{
												"kind": "text",
												"text": "a list of UTXOs"
											}
										]
									}
								]
							},
							"sources": [
								{
									"fileName": "wallet/mesh.service.ts",
									"line": 226,
									"character": 8,
									"url": "https://github.com/MeshJS/mesh/blob/1cc00f9/packages/module/src/wallet/mesh.service.ts#L226"
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Promise"
								},
								"typeArguments": [
									{
										"type": "array",
										"elementType": {
											"type": "reference",
											"target": {
												"sourceFileName": "src/types/UTxO.ts",
												"qualifiedName": "UTxO"
											},
											"name": "UTxO",
											"package": "@meshsdk/core"
										}
									}
								],
								"name": "Promise",
								"package": "typescript"
							}
						}
					]
				},
				{
					"id": 1412,
					"name": "signData",
					"variant": "declaration",
					"kind": 2048,
					"flags": {},
					"sources": [
						{
							"fileName": "wallet/mesh.service.ts",
							"line": 240,
							"character": 2,
							"url": "https://github.com/MeshJS/mesh/blob/1cc00f9/packages/module/src/wallet/mesh.service.ts#L240"
						}
					],
					"signatures": [
						{
							"id": 1413,
							"name": "signData",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "This endpoint utilizes the [CIP-8 - Message Signing](https://github.com/cardano-foundation/CIPs/tree/master/CIP-0030) to sign arbitrary data, to verify the data was signed by the owner of the private key.\n\nHere, we get the first wallet's address with wallet.getUsedAddresses(), alternativelly you can use reward addresses (getRewardAddresses()) too. It's really up to you as the developer which address you want to use in your application."
									}
								],
								"blockTags": [
									{
										"tag": "@returns",
										"content": [
											{
												"kind": "text",
												"text": "a signature"
											}
										]
									}
								]
							},
							"sources": [
								{
									"fileName": "wallet/mesh.service.ts",
									"line": 240,
									"character": 2,
									"url": "https://github.com/MeshJS/mesh/blob/1cc00f9/packages/module/src/wallet/mesh.service.ts#L240"
								}
							],
							"parameters": [
								{
									"id": 1414,
									"name": "payload",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "src/types/DataSignature.ts",
									"qualifiedName": "DataSignature"
								},
								"name": "DataSignature",
								"package": "@meshsdk/core"
							},
							"implementationOf": {
								"type": "reference",
								"target": 74,
								"name": "ISigner.signData"
							}
						}
					],
					"implementationOf": {
						"type": "reference",
						"target": 73,
						"name": "ISigner.signData"
					}
				},
				{
					"id": 1415,
					"name": "signTx",
					"variant": "declaration",
					"kind": 2048,
					"flags": {},
					"sources": [
						{
							"fileName": "wallet/mesh.service.ts",
							"line": 251,
							"character": 8,
							"url": "https://github.com/MeshJS/mesh/blob/1cc00f9/packages/module/src/wallet/mesh.service.ts#L251"
						}
					],
					"signatures": [
						{
							"id": 1416,
							"name": "signTx",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Requests user to sign the provided transaction (tx). The wallet should ask the user for permission, and if given, try to sign the supplied body and return a signed transaction. partialSign should be true if the transaction provided requires multiple signatures."
									}
								],
								"blockTags": [
									{
										"tag": "@returns",
										"content": [
											{
												"kind": "text",
												"text": "a signed transaction in CBOR"
											}
										]
									}
								]
							},
							"sources": [
								{
									"fileName": "wallet/mesh.service.ts",
									"line": 251,
									"character": 8,
									"url": "https://github.com/MeshJS/mesh/blob/1cc00f9/packages/module/src/wallet/mesh.service.ts#L251"
								}
							],
							"parameters": [
								{
									"id": 1417,
									"name": "unsignedTx",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 1418,
									"name": "partialSign",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "boolean"
									},
									"defaultValue": "false"
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Promise"
								},
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "string"
									}
								],
								"name": "Promise",
								"package": "typescript"
							},
							"implementationOf": {
								"type": "reference",
								"target": 78,
								"name": "ISigner.signTx"
							}
						}
					],
					"implementationOf": {
						"type": "reference",
						"target": 77,
						"name": "ISigner.signTx"
					}
				},
				{
					"id": 1419,
					"name": "signTxs",
					"variant": "declaration",
					"kind": 2048,
					"flags": {},
					"sources": [
						{
							"fileName": "wallet/mesh.service.ts",
							"line": 262,
							"character": 8,
							"url": "https://github.com/MeshJS/mesh/blob/1cc00f9/packages/module/src/wallet/mesh.service.ts#L262"
						}
					],
					"signatures": [
						{
							"id": 1420,
							"name": "signTxs",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Experimental feature - sign multiple transactions at once."
									}
								],
								"blockTags": [
									{
										"tag": "@returns",
										"content": [
											{
												"kind": "text",
												"text": "array of signed transactions CborHex string"
											}
										]
									}
								]
							},
							"sources": [
								{
									"fileName": "wallet/mesh.service.ts",
									"line": 262,
									"character": 8,
									"url": "https://github.com/MeshJS/mesh/blob/1cc00f9/packages/module/src/wallet/mesh.service.ts#L262"
								}
							],
							"parameters": [
								{
									"id": 1421,
									"name": "unsignedTxs",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "array of unsigned transactions in CborHex string"
											}
										]
									},
									"type": {
										"type": "array",
										"elementType": {
											"type": "intrinsic",
											"name": "string"
										}
									}
								},
								{
									"id": 1422,
									"name": "partialSign",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "if the transactions are signed partially"
											}
										]
									},
									"type": {
										"type": "intrinsic",
										"name": "boolean"
									},
									"defaultValue": "false"
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Promise"
								},
								"typeArguments": [
									{
										"type": "array",
										"elementType": {
											"type": "intrinsic",
											"name": "string"
										}
									}
								],
								"name": "Promise",
								"package": "typescript"
							},
							"implementationOf": {
								"type": "reference",
								"target": 82,
								"name": "ISigner.signTxs"
							}
						}
					],
					"implementationOf": {
						"type": "reference",
						"target": 81,
						"name": "ISigner.signTxs"
					}
				},
				{
					"id": 1423,
					"name": "submitTx",
					"variant": "declaration",
					"kind": 2048,
					"flags": {},
					"sources": [
						{
							"fileName": "wallet/mesh.service.ts",
							"line": 281,
							"character": 8,
							"url": "https://github.com/MeshJS/mesh/blob/1cc00f9/packages/module/src/wallet/mesh.service.ts#L281"
						}
					],
					"signatures": [
						{
							"id": 1424,
							"name": "submitTx",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Submits the signed transaction to the blockchain network.\n\nAs wallets should already have this ability to submit transaction, we allow dApps to request that a transaction be sent through it. If the wallet accepts the transaction and tries to send it, it shall return the transaction ID for the dApp to track. The wallet can return error messages or failure if there was an error in sending it."
									}
								],
								"blockTags": [
									{
										"tag": "@returns",
										"content": [
											{
												"kind": "text",
												"text": "a transaction hash"
											}
										]
									}
								]
							},
							"sources": [
								{
									"fileName": "wallet/mesh.service.ts",
									"line": 281,
									"character": 8,
									"url": "https://github.com/MeshJS/mesh/blob/1cc00f9/packages/module/src/wallet/mesh.service.ts#L281"
								}
							],
							"parameters": [
								{
									"id": 1425,
									"name": "tx",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Promise"
								},
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "string"
									}
								],
								"name": "Promise",
								"package": "typescript"
							},
							"implementationOf": {
								"type": "reference",
								"target": 87,
								"name": "ISubmitter.submitTx"
							}
						}
					],
					"implementationOf": {
						"type": "reference",
						"target": 86,
						"name": "ISubmitter.submitTx"
					}
				},
				{
					"id": 1387,
					"name": "brew",
					"variant": "declaration",
					"kind": 2048,
					"flags": {
						"isStatic": true
					},
					"sources": [
						{
							"fileName": "wallet/mesh.service.ts",
							"line": 399,
							"character": 9,
							"url": "https://github.com/MeshJS/mesh/blob/1cc00f9/packages/module/src/wallet/mesh.service.ts#L399"
						}
					],
					"signatures": [
						{
							"id": 1388,
							"name": "brew",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"sources": [
								{
									"fileName": "wallet/mesh.service.ts",
									"line": 399,
									"character": 9,
									"url": "https://github.com/MeshJS/mesh/blob/1cc00f9/packages/module/src/wallet/mesh.service.ts#L399"
								}
							],
							"parameters": [
								{
									"id": 1389,
									"name": "privateKey",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "boolean"
									},
									"defaultValue": "false"
								},
								{
									"id": 1390,
									"name": "strength",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "number"
									},
									"defaultValue": "256"
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "array",
										"elementType": {
											"type": "intrinsic",
											"name": "string"
										}
									}
								]
							}
						}
					]
				}
			],
			"groups": [
				{
					"title": "Constructors",
					"children": [
						1391
					]
				},
				{
					"title": "Properties",
					"children": [
						1395,
						1394
					]
				},
				{
					"title": "Methods",
					"children": [
						1441,
						1432,
						1396,
						1398,
						1400,
						1434,
						1402,
						1436,
						1439,
						1404,
						1406,
						1426,
						1408,
						1428,
						1430,
						1410,
						1412,
						1415,
						1419,
						1423,
						1387
					]
				}
			],
			"sources": [
				{
					"fileName": "wallet/mesh.service.ts",
					"line": 61,
					"character": 13,
					"url": "https://github.com/MeshJS/mesh/blob/1cc00f9/packages/module/src/wallet/mesh.service.ts#L61"
				}
			],
			"implementedTypes": [
				{
					"type": "reference",
					"target": 56,
					"name": "IInitiator",
					"package": "@meshsdk/core"
				},
				{
					"type": "reference",
					"target": 72,
					"name": "ISigner",
					"package": "@meshsdk/core"
				},
				{
					"type": "reference",
					"target": 85,
					"name": "ISubmitter",
					"package": "@meshsdk/core"
				}
			]
		},
		{
			"id": 493,
			"name": "OgmiosProvider",
			"variant": "declaration",
			"kind": 128,
			"flags": {},
			"children": [
				{
					"id": 494,
					"name": "constructor",
					"variant": "declaration",
					"kind": 512,
					"flags": {},
					"sources": [
						{
							"fileName": "providers/ogmios.provider.ts",
							"line": 8,
							"character": 2,
							"url": "https://github.com/MeshJS/mesh/blob/1cc00f9/packages/module/src/providers/ogmios.provider.ts#L8"
						},
						{
							"fileName": "providers/ogmios.provider.ts",
							"line": 9,
							"character": 2,
							"url": "https://github.com/MeshJS/mesh/blob/1cc00f9/packages/module/src/providers/ogmios.provider.ts#L9"
						},
						{
							"fileName": "providers/ogmios.provider.ts",
							"line": 11,
							"character": 2,
							"url": "https://github.com/MeshJS/mesh/blob/1cc00f9/packages/module/src/providers/ogmios.provider.ts#L11"
						}
					],
					"signatures": [
						{
							"id": 495,
							"name": "new OgmiosProvider",
							"variant": "signature",
							"kind": 16384,
							"flags": {},
							"sources": [
								{
									"fileName": "providers/ogmios.provider.ts",
									"line": 8,
									"character": 2,
									"url": "https://github.com/MeshJS/mesh/blob/1cc00f9/packages/module/src/providers/ogmios.provider.ts#L8"
								}
							],
							"parameters": [
								{
									"id": 496,
									"name": "baseUrl",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								}
							],
							"type": {
								"type": "reference",
								"target": 493,
								"name": "OgmiosProvider",
								"package": "@meshsdk/core"
							}
						},
						{
							"id": 497,
							"name": "new OgmiosProvider",
							"variant": "signature",
							"kind": 16384,
							"flags": {},
							"sources": [
								{
									"fileName": "providers/ogmios.provider.ts",
									"line": 9,
									"character": 2,
									"url": "https://github.com/MeshJS/mesh/blob/1cc00f9/packages/module/src/providers/ogmios.provider.ts#L9"
								}
							],
							"parameters": [
								{
									"id": 498,
									"name": "network",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"type": {
										"type": "union",
										"types": [
											{
												"type": "literal",
												"value": "testnet"
											},
											{
												"type": "literal",
												"value": "preview"
											},
											{
												"type": "literal",
												"value": "preprod"
											},
											{
												"type": "literal",
												"value": "mainnet"
											}
										]
									}
								}
							],
							"type": {
								"type": "reference",
								"target": 493,
								"name": "OgmiosProvider",
								"package": "@meshsdk/core"
							}
						}
					]
				},
				{
					"id": 499,
					"name": "_baseUrl",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isPrivate": true,
						"isReadonly": true
					},
					"sources": [
						{
							"fileName": "providers/ogmios.provider.ts",
							"line": 6,
							"character": 19,
							"url": "https://github.com/MeshJS/mesh/blob/1cc00f9/packages/module/src/providers/ogmios.provider.ts#L6"
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 500,
					"name": "evaluateTx",
					"variant": "declaration",
					"kind": 2048,
					"flags": {},
					"sources": [
						{
							"fileName": "providers/ogmios.provider.ts",
							"line": 17,
							"character": 8,
							"url": "https://github.com/MeshJS/mesh/blob/1cc00f9/packages/module/src/providers/ogmios.provider.ts#L17"
						}
					],
					"signatures": [
						{
							"id": 501,
							"name": "evaluateTx",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"sources": [
								{
									"fileName": "providers/ogmios.provider.ts",
									"line": 17,
									"character": 8,
									"url": "https://github.com/MeshJS/mesh/blob/1cc00f9/packages/module/src/providers/ogmios.provider.ts#L17"
								}
							],
							"parameters": [
								{
									"id": 502,
									"name": "tx",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Promise"
								},
								"typeArguments": [
									{
										"type": "array",
										"elementType": {
											"type": "reference",
											"target": {
												"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
												"qualifiedName": "Omit"
											},
											"typeArguments": [
												{
													"type": "reference",
													"target": {
														"sourceFileName": "src/types/Action.ts",
														"qualifiedName": "Action"
													},
													"name": "Action",
													"package": "@meshsdk/core"
												},
												{
													"type": "literal",
													"value": "data"
												}
											],
											"name": "Omit",
											"package": "typescript"
										}
									}
								],
								"name": "Promise",
								"package": "typescript"
							},
							"implementationOf": {
								"type": "reference",
								"target": 15,
								"name": "IEvaluator.evaluateTx"
							}
						}
					],
					"implementationOf": {
						"type": "reference",
						"target": 14,
						"name": "IEvaluator.evaluateTx"
					}
				},
				{
					"id": 503,
					"name": "onNextTx",
					"variant": "declaration",
					"kind": 2048,
					"flags": {},
					"sources": [
						{
							"fileName": "providers/ogmios.provider.ts",
							"line": 59,
							"character": 8,
							"url": "https://github.com/MeshJS/mesh/blob/1cc00f9/packages/module/src/providers/ogmios.provider.ts#L59"
						}
					],
					"signatures": [
						{
							"id": 504,
							"name": "onNextTx",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"sources": [
								{
									"fileName": "providers/ogmios.provider.ts",
									"line": 59,
									"character": 8,
									"url": "https://github.com/MeshJS/mesh/blob/1cc00f9/packages/module/src/providers/ogmios.provider.ts#L59"
								}
							],
							"parameters": [
								{
									"id": 505,
									"name": "callback",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"type": {
										"type": "reflection",
										"declaration": {
											"id": 506,
											"name": "__type",
											"variant": "declaration",
											"kind": 65536,
											"flags": {},
											"sources": [
												{
													"fileName": "providers/ogmios.provider.ts",
													"line": 59,
													"character": 27,
													"url": "https://github.com/MeshJS/mesh/blob/1cc00f9/packages/module/src/providers/ogmios.provider.ts#L59"
												}
											],
											"signatures": [
												{
													"id": 507,
													"name": "__type",
													"variant": "signature",
													"kind": 4096,
													"flags": {},
													"sources": [
														{
															"fileName": "providers/ogmios.provider.ts",
															"line": 59,
															"character": 27,
															"url": "https://github.com/MeshJS/mesh/blob/1cc00f9/packages/module/src/providers/ogmios.provider.ts#L59"
														}
													],
													"parameters": [
														{
															"id": 508,
															"name": "tx",
															"variant": "param",
															"kind": 32768,
															"flags": {},
															"type": {
																"type": "intrinsic",
																"name": "unknown"
															}
														}
													],
													"type": {
														"type": "intrinsic",
														"name": "void"
													}
												}
											]
										}
									}
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Promise"
								},
								"typeArguments": [
									{
										"type": "reflection",
										"declaration": {
											"id": 509,
											"name": "__type",
											"variant": "declaration",
											"kind": 65536,
											"flags": {},
											"sources": [
												{
													"fileName": "providers/ogmios.provider.ts",
													"line": 59,
													"character": 59,
													"url": "https://github.com/MeshJS/mesh/blob/1cc00f9/packages/module/src/providers/ogmios.provider.ts#L59"
												}
											],
											"signatures": [
												{
													"id": 510,
													"name": "__type",
													"variant": "signature",
													"kind": 4096,
													"flags": {},
													"sources": [
														{
															"fileName": "providers/ogmios.provider.ts",
															"line": 59,
															"character": 59,
															"url": "https://github.com/MeshJS/mesh/blob/1cc00f9/packages/module/src/providers/ogmios.provider.ts#L59"
														}
													],
													"type": {
														"type": "intrinsic",
														"name": "void"
													}
												}
											]
										}
									}
								],
								"name": "Promise",
								"package": "typescript"
							}
						}
					]
				},
				{
					"id": 514,
					"name": "open",
					"variant": "declaration",
					"kind": 2048,
					"flags": {
						"isPrivate": true
					},
					"sources": [
						{
							"fileName": "providers/ogmios.provider.ts",
							"line": 111,
							"character": 16,
							"url": "https://github.com/MeshJS/mesh/blob/1cc00f9/packages/module/src/providers/ogmios.provider.ts#L111"
						}
					],
					"signatures": [
						{
							"id": 515,
							"name": "open",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"sources": [
								{
									"fileName": "providers/ogmios.provider.ts",
									"line": 111,
									"character": 16,
									"url": "https://github.com/MeshJS/mesh/blob/1cc00f9/packages/module/src/providers/ogmios.provider.ts#L111"
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Promise"
								},
								"typeArguments": [
									{
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.dom.d.ts",
											"qualifiedName": "WebSocket"
										},
										"name": "WebSocket",
										"package": "typescript"
									}
								],
								"name": "Promise",
								"package": "typescript"
							}
						}
					]
				},
				{
					"id": 516,
					"name": "send",
					"variant": "declaration",
					"kind": 2048,
					"flags": {
						"isPrivate": true
					},
					"sources": [
						{
							"fileName": "providers/ogmios.provider.ts",
							"line": 121,
							"character": 10,
							"url": "https://github.com/MeshJS/mesh/blob/1cc00f9/packages/module/src/providers/ogmios.provider.ts#L121"
						}
					],
					"signatures": [
						{
							"id": 517,
							"name": "send",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"sources": [
								{
									"fileName": "providers/ogmios.provider.ts",
									"line": 121,
									"character": 10,
									"url": "https://github.com/MeshJS/mesh/blob/1cc00f9/packages/module/src/providers/ogmios.provider.ts#L121"
								}
							],
							"parameters": [
								{
									"id": 518,
									"name": "client",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.dom.d.ts",
											"qualifiedName": "WebSocket"
										},
										"name": "WebSocket",
										"package": "typescript"
									}
								},
								{
									"id": 519,
									"name": "methodname",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 520,
									"name": "args",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "unknown"
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "void"
							}
						}
					]
				},
				{
					"id": 511,
					"name": "submitTx",
					"variant": "declaration",
					"kind": 2048,
					"flags": {},
					"sources": [
						{
							"fileName": "providers/ogmios.provider.ts",
							"line": 81,
							"character": 8,
							"url": "https://github.com/MeshJS/mesh/blob/1cc00f9/packages/module/src/providers/ogmios.provider.ts#L81"
						}
					],
					"signatures": [
						{
							"id": 512,
							"name": "submitTx",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"sources": [
								{
									"fileName": "providers/ogmios.provider.ts",
									"line": 81,
									"character": 8,
									"url": "https://github.com/MeshJS/mesh/blob/1cc00f9/packages/module/src/providers/ogmios.provider.ts#L81"
								}
							],
							"parameters": [
								{
									"id": 513,
									"name": "tx",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Promise"
								},
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "string"
									}
								],
								"name": "Promise",
								"package": "typescript"
							},
							"implementationOf": {
								"type": "reference",
								"target": 87,
								"name": "ISubmitter.submitTx"
							}
						}
					],
					"implementationOf": {
						"type": "reference",
						"target": 86,
						"name": "ISubmitter.submitTx"
					}
				}
			],
			"groups": [
				{
					"title": "Constructors",
					"children": [
						494
					]
				},
				{
					"title": "Properties",
					"children": [
						499
					]
				},
				{
					"title": "Methods",
					"children": [
						500,
						503,
						514,
						516,
						511
					]
				}
			],
			"sources": [
				{
					"fileName": "providers/ogmios.provider.ts",
					"line": 5,
					"character": 13,
					"url": "https://github.com/MeshJS/mesh/blob/1cc00f9/packages/module/src/providers/ogmios.provider.ts#L5"
				}
			],
			"implementedTypes": [
				{
					"type": "reference",
					"target": 13,
					"name": "IEvaluator",
					"package": "@meshsdk/core"
				},
				{
					"type": "reference",
					"target": 85,
					"name": "ISubmitter",
					"package": "@meshsdk/core"
				}
			]
		},
		{
			"id": 679,
			"name": "Transaction",
			"variant": "declaration",
			"kind": 128,
			"flags": {},
			"children": [
				{
					"id": 700,
					"name": "constructor",
					"variant": "declaration",
					"kind": 512,
					"flags": {},
					"sources": [
						{
							"fileName": "transaction/transaction.service.ts",
							"line": 82,
							"character": 2,
							"url": "https://github.com/MeshJS/mesh/blob/1cc00f9/packages/module/src/transaction/transaction.service.ts#L82"
						}
					],
					"signatures": [
						{
							"id": 701,
							"name": "new Transaction",
							"variant": "signature",
							"kind": 16384,
							"flags": {},
							"sources": [
								{
									"fileName": "transaction/transaction.service.ts",
									"line": 82,
									"character": 2,
									"url": "https://github.com/MeshJS/mesh/blob/1cc00f9/packages/module/src/transaction/transaction.service.ts#L82"
								}
							],
							"parameters": [
								{
									"id": 702,
									"name": "options",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Partial"
										},
										"typeArguments": [
											{
												"type": "reference",
												"target": {
													"sourceFileName": "src/transaction/transaction.service.ts",
													"qualifiedName": "CreateTxOptions"
												},
												"name": "CreateTxOptions",
												"package": "@meshsdk/core"
											}
										],
										"name": "Partial",
										"package": "typescript"
									},
									"defaultValue": "..."
								}
							],
							"type": {
								"type": "reference",
								"target": 679,
								"name": "Transaction",
								"package": "@meshsdk/core"
							}
						}
					]
				},
				{
					"id": 703,
					"name": "_changeAddress",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isPrivate": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "transaction/transaction.service.ts",
							"line": 67,
							"character": 10,
							"url": "https://github.com/MeshJS/mesh/blob/1cc00f9/packages/module/src/transaction/transaction.service.ts#L67"
						}
					],
					"type": {
						"type": "reference",
						"target": {
							"sourceFileName": "../../node_modules/@sidan-lab/sidan-csl-rs-nodejs/sidan_csl_rs.d.ts",
							"qualifiedName": "Address"
						},
						"name": "Address",
						"package": "@sidan-lab/sidan-csl-rs-nodejs"
					}
				},
				{
					"id": 708,
					"name": "_era",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isPrivate": true,
						"isOptional": true,
						"isReadonly": true
					},
					"sources": [
						{
							"fileName": "transaction/transaction.service.ts",
							"line": 73,
							"character": 19,
							"url": "https://github.com/MeshJS/mesh/blob/1cc00f9/packages/module/src/transaction/transaction.service.ts#L73"
						}
					],
					"type": {
						"type": "reference",
						"target": {
							"sourceFileName": "src/types/Era.ts",
							"qualifiedName": "Era"
						},
						"name": "Era",
						"package": "@meshsdk/core"
					}
				},
				{
					"id": 709,
					"name": "_initiator",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isPrivate": true,
						"isOptional": true,
						"isReadonly": true
					},
					"sources": [
						{
							"fileName": "transaction/transaction.service.ts",
							"line": 74,
							"character": 19,
							"url": "https://github.com/MeshJS/mesh/blob/1cc00f9/packages/module/src/transaction/transaction.service.ts#L74"
						}
					],
					"type": {
						"type": "reference",
						"target": 56,
						"name": "IInitiator",
						"package": "@meshsdk/core"
					}
				},
				{
					"id": 710,
					"name": "_mintBuilder",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isPrivate": true,
						"isReadonly": true
					},
					"sources": [
						{
							"fileName": "transaction/transaction.service.ts",
							"line": 75,
							"character": 19,
							"url": "https://github.com/MeshJS/mesh/blob/1cc00f9/packages/module/src/transaction/transaction.service.ts#L75"
						}
					],
					"type": {
						"type": "reference",
						"target": {
							"sourceFileName": "../../node_modules/@sidan-lab/sidan-csl-rs-nodejs/sidan_csl_rs.d.ts",
							"qualifiedName": "MintBuilder"
						},
						"name": "MintBuilder",
						"package": "@sidan-lab/sidan-csl-rs-nodejs"
					}
				},
				{
					"id": 711,
					"name": "_protocolParameters",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isPrivate": true,
						"isReadonly": true
					},
					"sources": [
						{
							"fileName": "transaction/transaction.service.ts",
							"line": 76,
							"character": 19,
							"url": "https://github.com/MeshJS/mesh/blob/1cc00f9/packages/module/src/transaction/transaction.service.ts#L76"
						}
					],
					"type": {
						"type": "reference",
						"target": {
							"sourceFileName": "src/types/Protocol.ts",
							"qualifiedName": "Protocol"
						},
						"name": "Protocol",
						"package": "@meshsdk/core"
					}
				},
				{
					"id": 705,
					"name": "_recipients",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isPrivate": true
					},
					"sources": [
						{
							"fileName": "transaction/transaction.service.ts",
							"line": 69,
							"character": 10,
							"url": "https://github.com/MeshJS/mesh/blob/1cc00f9/packages/module/src/transaction/transaction.service.ts#L69"
						}
					],
					"type": {
						"type": "reference",
						"target": {
							"sourceFileName": "../../node_modules/typescript/lib/lib.es2015.collection.d.ts",
							"qualifiedName": "Map"
						},
						"typeArguments": [
							{
								"type": "reference",
								"target": {
									"sourceFileName": "src/types/Recipient.ts",
									"qualifiedName": "Recipient"
								},
								"name": "Recipient",
								"package": "@meshsdk/core"
							},
							{
								"type": "array",
								"elementType": {
									"type": "reference",
									"target": {
										"sourceFileName": "src/types/Asset.ts",
										"qualifiedName": "Asset"
									},
									"name": "Asset",
									"package": "@meshsdk/core"
								}
							}
						],
						"name": "Map",
						"package": "typescript"
					},
					"defaultValue": "..."
				},
				{
					"id": 706,
					"name": "_totalBurns",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isPrivate": true
					},
					"sources": [
						{
							"fileName": "transaction/transaction.service.ts",
							"line": 70,
							"character": 10,
							"url": "https://github.com/MeshJS/mesh/blob/1cc00f9/packages/module/src/transaction/transaction.service.ts#L70"
						}
					],
					"type": {
						"type": "reference",
						"target": {
							"sourceFileName": "../../node_modules/typescript/lib/lib.es2015.collection.d.ts",
							"qualifiedName": "Map"
						},
						"typeArguments": [
							{
								"type": "intrinsic",
								"name": "string"
							},
							{
								"type": "intrinsic",
								"name": "string"
							}
						],
						"name": "Map",
						"package": "typescript"
					},
					"defaultValue": "..."
				},
				{
					"id": 707,
					"name": "_totalMints",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isPrivate": true
					},
					"sources": [
						{
							"fileName": "transaction/transaction.service.ts",
							"line": 71,
							"character": 10,
							"url": "https://github.com/MeshJS/mesh/blob/1cc00f9/packages/module/src/transaction/transaction.service.ts#L71"
						}
					],
					"type": {
						"type": "reference",
						"target": {
							"sourceFileName": "../../node_modules/typescript/lib/lib.es2015.collection.d.ts",
							"qualifiedName": "Map"
						},
						"typeArguments": [
							{
								"type": "intrinsic",
								"name": "string"
							},
							{
								"type": "reference",
								"target": {
									"sourceFileName": "src/types/Mint.ts",
									"qualifiedName": "Mint"
								},
								"name": "Mint",
								"package": "@meshsdk/core"
							}
						],
						"name": "Map",
						"package": "typescript"
					},
					"defaultValue": "..."
				},
				{
					"id": 712,
					"name": "_txBuilder",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isPrivate": true,
						"isReadonly": true
					},
					"sources": [
						{
							"fileName": "transaction/transaction.service.ts",
							"line": 77,
							"character": 19,
							"url": "https://github.com/MeshJS/mesh/blob/1cc00f9/packages/module/src/transaction/transaction.service.ts#L77"
						}
					],
					"type": {
						"type": "reference",
						"target": {
							"sourceFileName": "../../node_modules/@sidan-lab/sidan-csl-rs-nodejs/sidan_csl_rs.d.ts",
							"qualifiedName": "TransactionBuilder"
						},
						"name": "TransactionBuilder",
						"package": "@sidan-lab/sidan-csl-rs-nodejs"
					}
				},
				{
					"id": 713,
					"name": "_txCertificates",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isPrivate": true,
						"isReadonly": true
					},
					"sources": [
						{
							"fileName": "transaction/transaction.service.ts",
							"line": 78,
							"character": 19,
							"url": "https://github.com/MeshJS/mesh/blob/1cc00f9/packages/module/src/transaction/transaction.service.ts#L78"
						}
					],
					"type": {
						"type": "reference",
						"target": {
							"sourceFileName": "../../node_modules/@sidan-lab/sidan-csl-rs-nodejs/sidan_csl_rs.d.ts",
							"qualifiedName": "Certificates"
						},
						"name": "Certificates",
						"package": "@sidan-lab/sidan-csl-rs-nodejs"
					}
				},
				{
					"id": 714,
					"name": "_txInputsBuilder",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isPrivate": true,
						"isReadonly": true
					},
					"sources": [
						{
							"fileName": "transaction/transaction.service.ts",
							"line": 79,
							"character": 19,
							"url": "https://github.com/MeshJS/mesh/blob/1cc00f9/packages/module/src/transaction/transaction.service.ts#L79"
						}
					],
					"type": {
						"type": "reference",
						"target": {
							"sourceFileName": "../../node_modules/@sidan-lab/sidan-csl-rs-nodejs/sidan_csl_rs.d.ts",
							"qualifiedName": "TxInputsBuilder"
						},
						"name": "TxInputsBuilder",
						"package": "@sidan-lab/sidan-csl-rs-nodejs"
					}
				},
				{
					"id": 704,
					"name": "_txOutputs",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isPrivate": true
					},
					"sources": [
						{
							"fileName": "transaction/transaction.service.ts",
							"line": 68,
							"character": 10,
							"url": "https://github.com/MeshJS/mesh/blob/1cc00f9/packages/module/src/transaction/transaction.service.ts#L68"
						}
					],
					"type": {
						"type": "reference",
						"target": {
							"sourceFileName": "../../node_modules/typescript/lib/lib.es2015.collection.d.ts",
							"qualifiedName": "Map"
						},
						"typeArguments": [
							{
								"type": "intrinsic",
								"name": "string"
							},
							{
								"type": "intrinsic",
								"name": "string"
							}
						],
						"name": "Map",
						"package": "typescript"
					},
					"defaultValue": "..."
				},
				{
					"id": 715,
					"name": "_txWithdrawals",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isPrivate": true,
						"isReadonly": true
					},
					"sources": [
						{
							"fileName": "transaction/transaction.service.ts",
							"line": 80,
							"character": 19,
							"url": "https://github.com/MeshJS/mesh/blob/1cc00f9/packages/module/src/transaction/transaction.service.ts#L80"
						}
					],
					"type": {
						"type": "reference",
						"target": {
							"sourceFileName": "../../node_modules/@sidan-lab/sidan-csl-rs-nodejs/sidan_csl_rs.d.ts",
							"qualifiedName": "Withdrawals"
						},
						"name": "Withdrawals",
						"package": "@sidan-lab/sidan-csl-rs-nodejs"
					}
				},
				{
					"id": 716,
					"name": "size",
					"variant": "declaration",
					"kind": 262144,
					"flags": {},
					"sources": [
						{
							"fileName": "transaction/transaction.service.ts",
							"line": 183,
							"character": 6,
							"url": "https://github.com/MeshJS/mesh/blob/1cc00f9/packages/module/src/transaction/transaction.service.ts#L183"
						}
					],
					"getSignature": {
						"id": 717,
						"name": "size",
						"variant": "signature",
						"kind": 524288,
						"flags": {},
						"sources": [
							{
								"fileName": "transaction/transaction.service.ts",
								"line": 183,
								"character": 6,
								"url": "https://github.com/MeshJS/mesh/blob/1cc00f9/packages/module/src/transaction/transaction.service.ts#L183"
							}
						],
						"type": {
							"type": "intrinsic",
							"name": "number"
						}
					}
				},
				{
					"id": 801,
					"name": "addBurnInputsIfNeeded",
					"variant": "declaration",
					"kind": 2048,
					"flags": {
						"isPrivate": true
					},
					"sources": [
						{
							"fileName": "transaction/transaction.service.ts",
							"line": 663,
							"character": 16,
							"url": "https://github.com/MeshJS/mesh/blob/1cc00f9/packages/module/src/transaction/transaction.service.ts#L663"
						}
					],
					"signatures": [
						{
							"id": 802,
							"name": "addBurnInputsIfNeeded",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"sources": [
								{
									"fileName": "transaction/transaction.service.ts",
									"line": 663,
									"character": 16,
									"url": "https://github.com/MeshJS/mesh/blob/1cc00f9/packages/module/src/transaction/transaction.service.ts#L663"
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Promise"
								},
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "void"
									}
								],
								"name": "Promise",
								"package": "typescript"
							}
						}
					]
				},
				{
					"id": 803,
					"name": "addChangeAddress",
					"variant": "declaration",
					"kind": 2048,
					"flags": {
						"isPrivate": true
					},
					"sources": [
						{
							"fileName": "transaction/transaction.service.ts",
							"line": 685,
							"character": 16,
							"url": "https://github.com/MeshJS/mesh/blob/1cc00f9/packages/module/src/transaction/transaction.service.ts#L685"
						}
					],
					"signatures": [
						{
							"id": 804,
							"name": "addChangeAddress",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"sources": [
								{
									"fileName": "transaction/transaction.service.ts",
									"line": 685,
									"character": 16,
									"url": "https://github.com/MeshJS/mesh/blob/1cc00f9/packages/module/src/transaction/transaction.service.ts#L685"
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Promise"
								},
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "void"
									}
								],
								"name": "Promise",
								"package": "typescript"
							}
						}
					]
				},
				{
					"id": 805,
					"name": "addCollateralIfNeeded",
					"variant": "declaration",
					"kind": 2048,
					"flags": {
						"isPrivate": true
					},
					"sources": [
						{
							"fileName": "transaction/transaction.service.ts",
							"line": 694,
							"character": 16,
							"url": "https://github.com/MeshJS/mesh/blob/1cc00f9/packages/module/src/transaction/transaction.service.ts#L694"
						}
					],
					"signatures": [
						{
							"id": 806,
							"name": "addCollateralIfNeeded",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"sources": [
								{
									"fileName": "transaction/transaction.service.ts",
									"line": 694,
									"character": 16,
									"url": "https://github.com/MeshJS/mesh/blob/1cc00f9/packages/module/src/transaction/transaction.service.ts#L694"
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Promise"
								},
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "void"
									}
								],
								"name": "Promise",
								"package": "typescript"
							}
						}
					]
				},
				{
					"id": 816,
					"name": "addMintOutputs",
					"variant": "declaration",
					"kind": 2048,
					"flags": {
						"isPrivate": true
					},
					"sources": [
						{
							"fileName": "transaction/transaction.service.ts",
							"line": 842,
							"character": 10,
							"url": "https://github.com/MeshJS/mesh/blob/1cc00f9/packages/module/src/transaction/transaction.service.ts#L842"
						}
					],
					"signatures": [
						{
							"id": 817,
							"name": "addMintOutputs",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"sources": [
								{
									"fileName": "transaction/transaction.service.ts",
									"line": 842,
									"character": 10,
									"url": "https://github.com/MeshJS/mesh/blob/1cc00f9/packages/module/src/transaction/transaction.service.ts#L842"
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "void"
							}
						}
					]
				},
				{
					"id": 807,
					"name": "addRequiredSignersIfNeeded",
					"variant": "declaration",
					"kind": 2048,
					"flags": {
						"isPrivate": true
					},
					"sources": [
						{
							"fileName": "transaction/transaction.service.ts",
							"line": 701,
							"character": 16,
							"url": "https://github.com/MeshJS/mesh/blob/1cc00f9/packages/module/src/transaction/transaction.service.ts#L701"
						}
					],
					"signatures": [
						{
							"id": 808,
							"name": "addRequiredSignersIfNeeded",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"sources": [
								{
									"fileName": "transaction/transaction.service.ts",
									"line": 701,
									"character": 16,
									"url": "https://github.com/MeshJS/mesh/blob/1cc00f9/packages/module/src/transaction/transaction.service.ts#L701"
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Promise"
								},
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "void"
									}
								],
								"name": "Promise",
								"package": "typescript"
							}
						}
					]
				},
				{
					"id": 809,
					"name": "addTxInputsAsNeeded",
					"variant": "declaration",
					"kind": 2048,
					"flags": {
						"isPrivate": true
					},
					"sources": [
						{
							"fileName": "transaction/transaction.service.ts",
							"line": 709,
							"character": 16,
							"url": "https://github.com/MeshJS/mesh/blob/1cc00f9/packages/module/src/transaction/transaction.service.ts#L709"
						}
					],
					"signatures": [
						{
							"id": 810,
							"name": "addTxInputsAsNeeded",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"sources": [
								{
									"fileName": "transaction/transaction.service.ts",
									"line": 709,
									"character": 16,
									"url": "https://github.com/MeshJS/mesh/blob/1cc00f9/packages/module/src/transaction/transaction.service.ts#L709"
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Promise"
								},
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "void"
									}
								],
								"name": "Promise",
								"package": "typescript"
							}
						}
					]
				},
				{
					"id": 718,
					"name": "build",
					"variant": "declaration",
					"kind": 2048,
					"flags": {},
					"sources": [
						{
							"fileName": "transaction/transaction.service.ts",
							"line": 187,
							"character": 8,
							"url": "https://github.com/MeshJS/mesh/blob/1cc00f9/packages/module/src/transaction/transaction.service.ts#L187"
						}
					],
					"signatures": [
						{
							"id": 719,
							"name": "build",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"sources": [
								{
									"fileName": "transaction/transaction.service.ts",
									"line": 187,
									"character": 8,
									"url": "https://github.com/MeshJS/mesh/blob/1cc00f9/packages/module/src/transaction/transaction.service.ts#L187"
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Promise"
								},
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "string"
									}
								],
								"name": "Promise",
								"package": "typescript"
							}
						}
					]
				},
				{
					"id": 720,
					"name": "burnAsset",
					"variant": "declaration",
					"kind": 2048,
					"flags": {},
					"sources": [
						{
							"fileName": "transaction/transaction.service.ts",
							"line": 209,
							"character": 2,
							"url": "https://github.com/MeshJS/mesh/blob/1cc00f9/packages/module/src/transaction/transaction.service.ts#L209"
						}
					],
					"signatures": [
						{
							"id": 721,
							"name": "burnAsset",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"sources": [
								{
									"fileName": "transaction/transaction.service.ts",
									"line": 209,
									"character": 2,
									"url": "https://github.com/MeshJS/mesh/blob/1cc00f9/packages/module/src/transaction/transaction.service.ts#L209"
								}
							],
							"parameters": [
								{
									"id": 722,
									"name": "forgeScript",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"type": {
										"type": "union",
										"types": [
											{
												"type": "intrinsic",
												"name": "string"
											},
											{
												"type": "reference",
												"target": {
													"sourceFileName": "src/types/PlutusScript.ts",
													"qualifiedName": "PlutusScript"
												},
												"name": "PlutusScript",
												"package": "@meshsdk/core"
											},
											{
												"type": "reference",
												"target": {
													"sourceFileName": "src/types/UTxO.ts",
													"qualifiedName": "UTxO"
												},
												"name": "UTxO",
												"package": "@meshsdk/core"
											}
										]
									}
								},
								{
									"id": 723,
									"name": "asset",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "src/types/Asset.ts",
											"qualifiedName": "Asset"
										},
										"name": "Asset",
										"package": "@meshsdk/core"
									}
								},
								{
									"id": 724,
									"name": "redeemer",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Partial"
										},
										"typeArguments": [
											{
												"type": "reference",
												"target": {
													"sourceFileName": "src/types/Action.ts",
													"qualifiedName": "Action"
												},
												"name": "Action",
												"package": "@meshsdk/core"
											}
										],
										"name": "Partial",
										"package": "typescript"
									}
								}
							],
							"type": {
								"type": "reference",
								"target": 679,
								"name": "Transaction",
								"package": "@meshsdk/core"
							}
						}
					]
				},
				{
					"id": 725,
					"name": "delegateStake",
					"variant": "declaration",
					"kind": 2048,
					"flags": {},
					"sources": [
						{
							"fileName": "transaction/transaction.service.ts",
							"line": 231,
							"character": 2,
							"url": "https://github.com/MeshJS/mesh/blob/1cc00f9/packages/module/src/transaction/transaction.service.ts#L231"
						}
					],
					"signatures": [
						{
							"id": 726,
							"name": "delegateStake",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"sources": [
								{
									"fileName": "transaction/transaction.service.ts",
									"line": 231,
									"character": 2,
									"url": "https://github.com/MeshJS/mesh/blob/1cc00f9/packages/module/src/transaction/transaction.service.ts#L231"
								}
							],
							"parameters": [
								{
									"id": 727,
									"name": "rewardAddress",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 728,
									"name": "poolId",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								}
							],
							"type": {
								"type": "reference",
								"target": 679,
								"name": "Transaction",
								"package": "@meshsdk/core"
							}
						}
					]
				},
				{
					"id": 729,
					"name": "deregisterStake",
					"variant": "declaration",
					"kind": 2048,
					"flags": {},
					"sources": [
						{
							"fileName": "transaction/transaction.service.ts",
							"line": 246,
							"character": 2,
							"url": "https://github.com/MeshJS/mesh/blob/1cc00f9/packages/module/src/transaction/transaction.service.ts#L246"
						}
					],
					"signatures": [
						{
							"id": 730,
							"name": "deregisterStake",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"sources": [
								{
									"fileName": "transaction/transaction.service.ts",
									"line": 246,
									"character": 2,
									"url": "https://github.com/MeshJS/mesh/blob/1cc00f9/packages/module/src/transaction/transaction.service.ts#L246"
								}
							],
							"parameters": [
								{
									"id": 731,
									"name": "rewardAddress",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								}
							],
							"type": {
								"type": "reference",
								"target": 679,
								"name": "Transaction",
								"package": "@meshsdk/core"
							}
						}
					]
				},
				{
					"id": 813,
					"name": "filterAvailableUTxOs",
					"variant": "declaration",
					"kind": 2048,
					"flags": {
						"isPrivate": true
					},
					"sources": [
						{
							"fileName": "transaction/transaction.service.ts",
							"line": 828,
							"character": 16,
							"url": "https://github.com/MeshJS/mesh/blob/1cc00f9/packages/module/src/transaction/transaction.service.ts#L828"
						}
					],
					"signatures": [
						{
							"id": 814,
							"name": "filterAvailableUTxOs",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"sources": [
								{
									"fileName": "transaction/transaction.service.ts",
									"line": 828,
									"character": 16,
									"url": "https://github.com/MeshJS/mesh/blob/1cc00f9/packages/module/src/transaction/transaction.service.ts#L828"
								}
							],
							"parameters": [
								{
									"id": 815,
									"name": "selectedUTxOs",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"type": {
										"type": "array",
										"elementType": {
											"type": "reference",
											"target": {
												"sourceFileName": "src/types/UTxO.ts",
												"qualifiedName": "UTxO"
											},
											"name": "UTxO",
											"package": "@meshsdk/core"
										}
									},
									"defaultValue": "[]"
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Promise"
								},
								"typeArguments": [
									{
										"type": "array",
										"elementType": {
											"type": "reference",
											"target": {
												"sourceFileName": "../../node_modules/@sidan-lab/sidan-csl-rs-nodejs/sidan_csl_rs.d.ts",
												"qualifiedName": "TransactionUnspentOutput"
											},
											"name": "TransactionUnspentOutput",
											"package": "@sidan-lab/sidan-csl-rs-nodejs"
										}
									}
								],
								"name": "Promise",
								"package": "typescript"
							}
						}
					]
				},
				{
					"id": 811,
					"name": "forgeAssetsIfNeeded",
					"variant": "declaration",
					"kind": 2048,
					"flags": {
						"isPrivate": true
					},
					"sources": [
						{
							"fileName": "transaction/transaction.service.ts",
							"line": 759,
							"character": 16,
							"url": "https://github.com/MeshJS/mesh/blob/1cc00f9/packages/module/src/transaction/transaction.service.ts#L759"
						}
					],
					"signatures": [
						{
							"id": 812,
							"name": "forgeAssetsIfNeeded",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"sources": [
								{
									"fileName": "transaction/transaction.service.ts",
									"line": 759,
									"character": 16,
									"url": "https://github.com/MeshJS/mesh/blob/1cc00f9/packages/module/src/transaction/transaction.service.ts#L759"
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Promise"
								},
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "void"
									}
								],
								"name": "Promise",
								"package": "typescript"
							}
						}
					]
				},
				{
					"id": 732,
					"name": "mintAsset",
					"variant": "declaration",
					"kind": 2048,
					"flags": {},
					"sources": [
						{
							"fileName": "transaction/transaction.service.ts",
							"line": 261,
							"character": 2,
							"url": "https://github.com/MeshJS/mesh/blob/1cc00f9/packages/module/src/transaction/transaction.service.ts#L261"
						}
					],
					"signatures": [
						{
							"id": 733,
							"name": "mintAsset",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"sources": [
								{
									"fileName": "transaction/transaction.service.ts",
									"line": 261,
									"character": 2,
									"url": "https://github.com/MeshJS/mesh/blob/1cc00f9/packages/module/src/transaction/transaction.service.ts#L261"
								}
							],
							"parameters": [
								{
									"id": 734,
									"name": "forgeScript",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"type": {
										"type": "union",
										"types": [
											{
												"type": "intrinsic",
												"name": "string"
											},
											{
												"type": "reference",
												"target": {
													"sourceFileName": "src/types/PlutusScript.ts",
													"qualifiedName": "PlutusScript"
												},
												"name": "PlutusScript",
												"package": "@meshsdk/core"
											},
											{
												"type": "reference",
												"target": {
													"sourceFileName": "src/types/UTxO.ts",
													"qualifiedName": "UTxO"
												},
												"name": "UTxO",
												"package": "@meshsdk/core"
											}
										]
									}
								},
								{
									"id": 735,
									"name": "mint",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "src/types/Mint.ts",
											"qualifiedName": "Mint"
										},
										"name": "Mint",
										"package": "@meshsdk/core"
									}
								},
								{
									"id": 736,
									"name": "redeemer",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Partial"
										},
										"typeArguments": [
											{
												"type": "reference",
												"target": {
													"sourceFileName": "src/types/Action.ts",
													"qualifiedName": "Action"
												},
												"name": "Action",
												"package": "@meshsdk/core"
											}
										],
										"name": "Partial",
										"package": "typescript"
									}
								}
							],
							"type": {
								"type": "reference",
								"target": 679,
								"name": "Transaction",
								"package": "@meshsdk/core"
							}
						}
					]
				},
				{
					"id": 818,
					"name": "notVisited",
					"variant": "declaration",
					"kind": 2048,
					"flags": {
						"isPrivate": true
					},
					"sources": [
						{
							"fileName": "transaction/transaction.service.ts",
							"line": 863,
							"character": 10,
							"url": "https://github.com/MeshJS/mesh/blob/1cc00f9/packages/module/src/transaction/transaction.service.ts#L863"
						}
					],
					"signatures": [
						{
							"id": 819,
							"name": "notVisited",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"sources": [
								{
									"fileName": "transaction/transaction.service.ts",
									"line": 863,
									"character": 10,
									"url": "https://github.com/MeshJS/mesh/blob/1cc00f9/packages/module/src/transaction/transaction.service.ts#L863"
								}
							],
							"parameters": [
								{
									"id": 820,
									"name": "checkpoint",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							}
						}
					]
				},
				{
					"id": 737,
					"name": "redeemValue",
					"variant": "declaration",
					"kind": 2048,
					"flags": {},
					"sources": [
						{
							"fileName": "transaction/transaction.service.ts",
							"line": 338,
							"character": 2,
							"url": "https://github.com/MeshJS/mesh/blob/1cc00f9/packages/module/src/transaction/transaction.service.ts#L338"
						}
					],
					"signatures": [
						{
							"id": 738,
							"name": "redeemValue",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"sources": [
								{
									"fileName": "transaction/transaction.service.ts",
									"line": 338,
									"character": 2,
									"url": "https://github.com/MeshJS/mesh/blob/1cc00f9/packages/module/src/transaction/transaction.service.ts#L338"
								}
							],
							"parameters": [
								{
									"id": 739,
									"name": "options",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"type": {
										"type": "reflection",
										"declaration": {
											"id": 740,
											"name": "__type",
											"variant": "declaration",
											"kind": 65536,
											"flags": {},
											"children": [
												{
													"id": 743,
													"name": "datum",
													"variant": "declaration",
													"kind": 1024,
													"flags": {
														"isOptional": true
													},
													"sources": [
														{
															"fileName": "transaction/transaction.service.ts",
															"line": 341,
															"character": 4,
															"url": "https://github.com/MeshJS/mesh/blob/1cc00f9/packages/module/src/transaction/transaction.service.ts#L341"
														}
													],
													"type": {
														"type": "union",
														"types": [
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "src/types/Data.ts",
																	"qualifiedName": "Data"
																},
																"name": "Data",
																"package": "@meshsdk/core"
															},
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "src/types/UTxO.ts",
																	"qualifiedName": "UTxO"
																},
																"name": "UTxO",
																"package": "@meshsdk/core"
															}
														]
													}
												},
												{
													"id": 744,
													"name": "redeemer",
													"variant": "declaration",
													"kind": 1024,
													"flags": {
														"isOptional": true
													},
													"sources": [
														{
															"fileName": "transaction/transaction.service.ts",
															"line": 342,
															"character": 4,
															"url": "https://github.com/MeshJS/mesh/blob/1cc00f9/packages/module/src/transaction/transaction.service.ts#L342"
														}
													],
													"type": {
														"type": "reference",
														"target": {
															"sourceFileName": "src/types/Action.ts",
															"qualifiedName": "Action"
														},
														"name": "Action",
														"package": "@meshsdk/core"
													}
												},
												{
													"id": 742,
													"name": "script",
													"variant": "declaration",
													"kind": 1024,
													"flags": {},
													"sources": [
														{
															"fileName": "transaction/transaction.service.ts",
															"line": 340,
															"character": 4,
															"url": "https://github.com/MeshJS/mesh/blob/1cc00f9/packages/module/src/transaction/transaction.service.ts#L340"
														}
													],
													"type": {
														"type": "union",
														"types": [
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "src/types/PlutusScript.ts",
																	"qualifiedName": "PlutusScript"
																},
																"name": "PlutusScript",
																"package": "@meshsdk/core"
															},
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "src/types/UTxO.ts",
																	"qualifiedName": "UTxO"
																},
																"name": "UTxO",
																"package": "@meshsdk/core"
															}
														]
													}
												},
												{
													"id": 741,
													"name": "value",
													"variant": "declaration",
													"kind": 1024,
													"flags": {},
													"sources": [
														{
															"fileName": "transaction/transaction.service.ts",
															"line": 339,
															"character": 4,
															"url": "https://github.com/MeshJS/mesh/blob/1cc00f9/packages/module/src/transaction/transaction.service.ts#L339"
														}
													],
													"type": {
														"type": "reference",
														"target": {
															"sourceFileName": "src/types/UTxO.ts",
															"qualifiedName": "UTxO"
														},
														"name": "UTxO",
														"package": "@meshsdk/core"
													}
												}
											],
											"groups": [
												{
													"title": "Properties",
													"children": [
														743,
														744,
														742,
														741
													]
												}
											],
											"sources": [
												{
													"fileName": "transaction/transaction.service.ts",
													"line": 338,
													"character": 23,
													"url": "https://github.com/MeshJS/mesh/blob/1cc00f9/packages/module/src/transaction/transaction.service.ts#L338"
												}
											]
										}
									}
								}
							],
							"type": {
								"type": "reference",
								"target": 679,
								"name": "Transaction",
								"package": "@meshsdk/core"
							}
						}
					]
				},
				{
					"id": 748,
					"name": "registerPool",
					"variant": "declaration",
					"kind": 2048,
					"flags": {},
					"sources": [
						{
							"fileName": "transaction/transaction.service.ts",
							"line": 391,
							"character": 2,
							"url": "https://github.com/MeshJS/mesh/blob/1cc00f9/packages/module/src/transaction/transaction.service.ts#L391"
						}
					],
					"signatures": [
						{
							"id": 749,
							"name": "registerPool",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"sources": [
								{
									"fileName": "transaction/transaction.service.ts",
									"line": 391,
									"character": 2,
									"url": "https://github.com/MeshJS/mesh/blob/1cc00f9/packages/module/src/transaction/transaction.service.ts#L391"
								}
							],
							"parameters": [
								{
									"id": 750,
									"name": "params",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "src/types/PoolParams.ts",
											"qualifiedName": "PoolParams"
										},
										"name": "PoolParams",
										"package": "@meshsdk/core"
									}
								}
							],
							"type": {
								"type": "reference",
								"target": 679,
								"name": "Transaction",
								"package": "@meshsdk/core"
							}
						}
					]
				},
				{
					"id": 745,
					"name": "registerStake",
					"variant": "declaration",
					"kind": 2048,
					"flags": {},
					"sources": [
						{
							"fileName": "transaction/transaction.service.ts",
							"line": 377,
							"character": 2,
							"url": "https://github.com/MeshJS/mesh/blob/1cc00f9/packages/module/src/transaction/transaction.service.ts#L377"
						}
					],
					"signatures": [
						{
							"id": 746,
							"name": "registerStake",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"sources": [
								{
									"fileName": "transaction/transaction.service.ts",
									"line": 377,
									"character": 2,
									"url": "https://github.com/MeshJS/mesh/blob/1cc00f9/packages/module/src/transaction/transaction.service.ts#L377"
								}
							],
							"parameters": [
								{
									"id": 747,
									"name": "rewardAddress",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								}
							],
							"type": {
								"type": "reference",
								"target": 679,
								"name": "Transaction",
								"package": "@meshsdk/core"
							}
						}
					]
				},
				{
					"id": 751,
					"name": "retirePool",
					"variant": "declaration",
					"kind": 2048,
					"flags": {},
					"sources": [
						{
							"fileName": "transaction/transaction.service.ts",
							"line": 401,
							"character": 2,
							"url": "https://github.com/MeshJS/mesh/blob/1cc00f9/packages/module/src/transaction/transaction.service.ts#L401"
						}
					],
					"signatures": [
						{
							"id": 752,
							"name": "retirePool",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"sources": [
								{
									"fileName": "transaction/transaction.service.ts",
									"line": 401,
									"character": 2,
									"url": "https://github.com/MeshJS/mesh/blob/1cc00f9/packages/module/src/transaction/transaction.service.ts#L401"
								}
							],
							"parameters": [
								{
									"id": 753,
									"name": "poolId",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 754,
									"name": "epochNo",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "number"
									}
								}
							],
							"type": {
								"type": "reference",
								"target": 679,
								"name": "Transaction",
								"package": "@meshsdk/core"
							}
						}
					]
				},
				{
					"id": 755,
					"name": "sendAssets",
					"variant": "declaration",
					"kind": 2048,
					"flags": {},
					"sources": [
						{
							"fileName": "transaction/transaction.service.ts",
							"line": 420,
							"character": 2,
							"url": "https://github.com/MeshJS/mesh/blob/1cc00f9/packages/module/src/transaction/transaction.service.ts#L420"
						}
					],
					"signatures": [
						{
							"id": 756,
							"name": "sendAssets",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Adds an output to the transaction."
									}
								],
								"blockTags": [
									{
										"tag": "@returns",
										"content": [
											{
												"kind": "text",
												"text": "The transaction builder."
											}
										]
									},
									{
										"tag": "@see",
										"content": [
											{
												"kind": "inline-tag",
												"tag": "@link",
												"text": "https://meshjs.dev/apis/transaction#sendAssets",
												"target": "https://meshjs.dev/apis/transaction#sendAssets"
											}
										]
									}
								]
							},
							"sources": [
								{
									"fileName": "transaction/transaction.service.ts",
									"line": 420,
									"character": 2,
									"url": "https://github.com/MeshJS/mesh/blob/1cc00f9/packages/module/src/transaction/transaction.service.ts#L420"
								}
							],
							"parameters": [
								{
									"id": 757,
									"name": "recipient",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The recipient of the output."
											}
										]
									},
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "src/types/Recipient.ts",
											"qualifiedName": "Recipient"
										},
										"name": "Recipient",
										"package": "@meshsdk/core"
									}
								},
								{
									"id": 758,
									"name": "assets",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The assets to send."
											}
										]
									},
									"type": {
										"type": "array",
										"elementType": {
											"type": "reference",
											"target": {
												"sourceFileName": "src/types/Asset.ts",
												"qualifiedName": "Asset"
											},
											"name": "Asset",
											"package": "@meshsdk/core"
										}
									}
								}
							],
							"type": {
								"type": "reference",
								"target": 679,
								"name": "Transaction",
								"package": "@meshsdk/core"
							}
						}
					]
				},
				{
					"id": 759,
					"name": "sendLovelace",
					"variant": "declaration",
					"kind": 2048,
					"flags": {},
					"sources": [
						{
							"fileName": "transaction/transaction.service.ts",
							"line": 456,
							"character": 2,
							"url": "https://github.com/MeshJS/mesh/blob/1cc00f9/packages/module/src/transaction/transaction.service.ts#L456"
						}
					],
					"signatures": [
						{
							"id": 760,
							"name": "sendLovelace",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Adds a transaction output to the transaction."
									}
								],
								"blockTags": [
									{
										"tag": "@returns",
										"content": [
											{
												"kind": "text",
												"text": "The Transaction object."
											}
										]
									},
									{
										"tag": "@see",
										"content": [
											{
												"kind": "inline-tag",
												"tag": "@link",
												"text": "https://meshjs.dev/apis/transaction#sendAda",
												"target": "https://meshjs.dev/apis/transaction#sendAda"
											}
										]
									}
								]
							},
							"sources": [
								{
									"fileName": "transaction/transaction.service.ts",
									"line": 456,
									"character": 2,
									"url": "https://github.com/MeshJS/mesh/blob/1cc00f9/packages/module/src/transaction/transaction.service.ts#L456"
								}
							],
							"parameters": [
								{
									"id": 761,
									"name": "recipient",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The recipient of the transaction."
											}
										]
									},
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "src/types/Recipient.ts",
											"qualifiedName": "Recipient"
										},
										"name": "Recipient",
										"package": "@meshsdk/core"
									}
								},
								{
									"id": 762,
									"name": "lovelace",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The amount of lovelace to send."
											}
										]
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								}
							],
							"type": {
								"type": "reference",
								"target": 679,
								"name": "Transaction",
								"package": "@meshsdk/core"
							}
						}
					]
				},
				{
					"id": 763,
					"name": "sendToken",
					"variant": "declaration",
					"kind": 2048,
					"flags": {},
					"sources": [
						{
							"fileName": "transaction/transaction.service.ts",
							"line": 482,
							"character": 2,
							"url": "https://github.com/MeshJS/mesh/blob/1cc00f9/packages/module/src/transaction/transaction.service.ts#L482"
						}
					],
					"signatures": [
						{
							"id": 764,
							"name": "sendToken",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Adds stable coins transaction output to the transaction."
									}
								],
								"blockTags": [
									{
										"tag": "@returns",
										"content": [
											{
												"kind": "text",
												"text": "The Transaction object."
											}
										]
									},
									{
										"tag": "@see",
										"content": [
											{
												"kind": "inline-tag",
												"tag": "@link",
												"text": "https://meshjs.dev/apis/transaction#sendToken",
												"target": "https://meshjs.dev/apis/transaction#sendToken"
											}
										]
									}
								]
							},
							"sources": [
								{
									"fileName": "transaction/transaction.service.ts",
									"line": 482,
									"character": 2,
									"url": "https://github.com/MeshJS/mesh/blob/1cc00f9/packages/module/src/transaction/transaction.service.ts#L482"
								}
							],
							"parameters": [
								{
									"id": 765,
									"name": "recipient",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The recipient of the transaction."
											}
										]
									},
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "src/types/Recipient.ts",
											"qualifiedName": "Recipient"
										},
										"name": "Recipient",
										"package": "@meshsdk/core"
									}
								},
								{
									"id": 766,
									"name": "ticker",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The ticker of the token to send."
											}
										]
									},
									"type": {
										"type": "union",
										"types": [
											{
												"type": "literal",
												"value": "LQ"
											},
											{
												"type": "literal",
												"value": "MIN"
											},
											{
												"type": "literal",
												"value": "NTX"
											},
											{
												"type": "literal",
												"value": "iBTC"
											},
											{
												"type": "literal",
												"value": "iETH"
											},
											{
												"type": "literal",
												"value": "iUSD"
											},
											{
												"type": "literal",
												"value": "MILK"
											},
											{
												"type": "literal",
												"value": "AGIX"
											},
											{
												"type": "literal",
												"value": "MELD"
											},
											{
												"type": "literal",
												"value": "INDY"
											},
											{
												"type": "literal",
												"value": "CLAY"
											},
											{
												"type": "literal",
												"value": "MCOS"
											},
											{
												"type": "literal",
												"value": "DING"
											},
											{
												"type": "literal",
												"value": "GERO"
											},
											{
												"type": "literal",
												"value": "NMKR"
											},
											{
												"type": "literal",
												"value": "PAVIA"
											},
											{
												"type": "literal",
												"value": "HOSKY"
											},
											{
												"type": "literal",
												"value": "YUMMI"
											},
											{
												"type": "literal",
												"value": "C3"
											},
											{
												"type": "literal",
												"value": "GIMBAL"
											},
											{
												"type": "literal",
												"value": "SUNDAE"
											},
											{
												"type": "literal",
												"value": "GREENS"
											},
											{
												"type": "literal",
												"value": "GENS"
											},
											{
												"type": "literal",
												"value": "SOCIETY"
											},
											{
												"type": "literal",
												"value": "DJED"
											},
											{
												"type": "literal",
												"value": "SHEN"
											},
											{
												"type": "literal",
												"value": "WMT"
											},
											{
												"type": "literal",
												"value": "COPI"
											}
										]
									}
								},
								{
									"id": 767,
									"name": "amount",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The amount of the token to send."
											}
										]
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								}
							],
							"type": {
								"type": "reference",
								"target": 679,
								"name": "Transaction",
								"package": "@meshsdk/core"
							}
						}
					]
				},
				{
					"id": 768,
					"name": "sendValue",
					"variant": "declaration",
					"kind": 2048,
					"flags": {},
					"sources": [
						{
							"fileName": "transaction/transaction.service.ts",
							"line": 501,
							"character": 2,
							"url": "https://github.com/MeshJS/mesh/blob/1cc00f9/packages/module/src/transaction/transaction.service.ts#L501"
						}
					],
					"signatures": [
						{
							"id": 769,
							"name": "sendValue",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Adds an output to the transaction."
									}
								],
								"blockTags": [
									{
										"tag": "@returns",
										"content": [
											{
												"kind": "text",
												"text": "The Transaction object."
											}
										]
									}
								]
							},
							"sources": [
								{
									"fileName": "transaction/transaction.service.ts",
									"line": 501,
									"character": 2,
									"url": "https://github.com/MeshJS/mesh/blob/1cc00f9/packages/module/src/transaction/transaction.service.ts#L501"
								}
							],
							"parameters": [
								{
									"id": 770,
									"name": "recipient",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The recipient of the output."
											}
										]
									},
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "src/types/Recipient.ts",
											"qualifiedName": "Recipient"
										},
										"name": "Recipient",
										"package": "@meshsdk/core"
									}
								},
								{
									"id": 771,
									"name": "value",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The UTxO value of the output."
											}
										]
									},
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "src/types/UTxO.ts",
											"qualifiedName": "UTxO"
										},
										"name": "UTxO",
										"package": "@meshsdk/core"
									}
								}
							],
							"type": {
								"type": "reference",
								"target": 679,
								"name": "Transaction",
								"package": "@meshsdk/core"
							}
						}
					]
				},
				{
					"id": 772,
					"name": "setChangeAddress",
					"variant": "declaration",
					"kind": 2048,
					"flags": {},
					"sources": [
						{
							"fileName": "transaction/transaction.service.ts",
							"line": 522,
							"character": 2,
							"url": "https://github.com/MeshJS/mesh/blob/1cc00f9/packages/module/src/transaction/transaction.service.ts#L522"
						}
					],
					"signatures": [
						{
							"id": 773,
							"name": "setChangeAddress",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Sets the change address for the transaction."
									}
								],
								"blockTags": [
									{
										"tag": "@returns",
										"content": [
											{
												"kind": "text",
												"text": "The Transaction object."
											}
										]
									}
								]
							},
							"sources": [
								{
									"fileName": "transaction/transaction.service.ts",
									"line": 522,
									"character": 2,
									"url": "https://github.com/MeshJS/mesh/blob/1cc00f9/packages/module/src/transaction/transaction.service.ts#L522"
								}
							],
							"parameters": [
								{
									"id": 774,
									"name": "changeAddress",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The change address."
											}
										]
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								}
							],
							"type": {
								"type": "reference",
								"target": 679,
								"name": "Transaction",
								"package": "@meshsdk/core"
							}
						}
					]
				},
				{
					"id": 775,
					"name": "setCollateral",
					"variant": "declaration",
					"kind": 2048,
					"flags": {},
					"sources": [
						{
							"fileName": "transaction/transaction.service.ts",
							"line": 535,
							"character": 2,
							"url": "https://github.com/MeshJS/mesh/blob/1cc00f9/packages/module/src/transaction/transaction.service.ts#L535"
						}
					],
					"signatures": [
						{
							"id": 776,
							"name": "setCollateral",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Sets the collateral for the transaction."
									}
								],
								"blockTags": [
									{
										"tag": "@returns",
										"content": [
											{
												"kind": "text",
												"text": "The Transaction object."
											}
										]
									}
								]
							},
							"sources": [
								{
									"fileName": "transaction/transaction.service.ts",
									"line": 535,
									"character": 2,
									"url": "https://github.com/MeshJS/mesh/blob/1cc00f9/packages/module/src/transaction/transaction.service.ts#L535"
								}
							],
							"parameters": [
								{
									"id": 777,
									"name": "collateral",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "Set the UTxO for collateral."
											}
										]
									},
									"type": {
										"type": "array",
										"elementType": {
											"type": "reference",
											"target": {
												"sourceFileName": "src/types/UTxO.ts",
												"qualifiedName": "UTxO"
											},
											"name": "UTxO",
											"package": "@meshsdk/core"
										}
									}
								}
							],
							"type": {
								"type": "reference",
								"target": 679,
								"name": "Transaction",
								"package": "@meshsdk/core"
							}
						}
					]
				},
				{
					"id": 778,
					"name": "setMetadata",
					"variant": "declaration",
					"kind": 2048,
					"flags": {},
					"sources": [
						{
							"fileName": "transaction/transaction.service.ts",
							"line": 551,
							"character": 2,
							"url": "https://github.com/MeshJS/mesh/blob/1cc00f9/packages/module/src/transaction/transaction.service.ts#L551"
						}
					],
					"signatures": [
						{
							"id": 779,
							"name": "setMetadata",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Add a JSON metadata entry to the transaction."
									}
								],
								"blockTags": [
									{
										"tag": "@returns",
										"content": [
											{
												"kind": "text",
												"text": "The Transaction object."
											}
										]
									},
									{
										"tag": "@see",
										"content": [
											{
												"kind": "inline-tag",
												"tag": "@link",
												"text": "https://meshjs.dev/apis/transaction#setMetadata",
												"target": "https://meshjs.dev/apis/transaction#setMetadata"
											}
										]
									}
								]
							},
							"sources": [
								{
									"fileName": "transaction/transaction.service.ts",
									"line": 551,
									"character": 2,
									"url": "https://github.com/MeshJS/mesh/blob/1cc00f9/packages/module/src/transaction/transaction.service.ts#L551"
								}
							],
							"parameters": [
								{
									"id": 780,
									"name": "key",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The key to use for the metadata entry."
											}
										]
									},
									"type": {
										"type": "intrinsic",
										"name": "number"
									}
								},
								{
									"id": 781,
									"name": "value",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The value to use for the metadata entry."
											}
										]
									},
									"type": {
										"type": "intrinsic",
										"name": "unknown"
									}
								}
							],
							"type": {
								"type": "reference",
								"target": 679,
								"name": "Transaction",
								"package": "@meshsdk/core"
							}
						}
					]
				},
				{
					"id": 782,
					"name": "setRequiredSigners",
					"variant": "declaration",
					"kind": 2048,
					"flags": {},
					"sources": [
						{
							"fileName": "transaction/transaction.service.ts",
							"line": 568,
							"character": 2,
							"url": "https://github.com/MeshJS/mesh/blob/1cc00f9/packages/module/src/transaction/transaction.service.ts#L568"
						}
					],
					"signatures": [
						{
							"id": 783,
							"name": "setRequiredSigners",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Sets the required signers for the transaction."
									}
								],
								"blockTags": [
									{
										"tag": "@returns",
										"content": [
											{
												"kind": "text",
												"text": "The Transaction object."
											}
										]
									}
								]
							},
							"sources": [
								{
									"fileName": "transaction/transaction.service.ts",
									"line": 568,
									"character": 2,
									"url": "https://github.com/MeshJS/mesh/blob/1cc00f9/packages/module/src/transaction/transaction.service.ts#L568"
								}
							],
							"parameters": [
								{
									"id": 784,
									"name": "addresses",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The addresses of the required signers."
											}
										]
									},
									"type": {
										"type": "array",
										"elementType": {
											"type": "intrinsic",
											"name": "string"
										}
									}
								}
							],
							"type": {
								"type": "reference",
								"target": 679,
								"name": "Transaction",
								"package": "@meshsdk/core"
							}
						}
					]
				},
				{
					"id": 788,
					"name": "setTimeToExpire",
					"variant": "declaration",
					"kind": 2048,
					"flags": {},
					"sources": [
						{
							"fileName": "transaction/transaction.service.ts",
							"line": 610,
							"character": 2,
							"url": "https://github.com/MeshJS/mesh/blob/1cc00f9/packages/module/src/transaction/transaction.service.ts#L610"
						}
					],
					"signatures": [
						{
							"id": 789,
							"name": "setTimeToExpire",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Set the time to live for the transaction."
									}
								],
								"blockTags": [
									{
										"tag": "@returns",
										"content": [
											{
												"kind": "text",
												"text": "The Transaction object."
											}
										]
									},
									{
										"tag": "@see",
										"content": [
											{
												"kind": "inline-tag",
												"tag": "@link",
												"text": "https://meshjs.dev/apis/transaction#setTimeLimit",
												"target": "https://meshjs.dev/apis/transaction#setTimeLimit"
											}
										]
									}
								]
							},
							"sources": [
								{
									"fileName": "transaction/transaction.service.ts",
									"line": 610,
									"character": 2,
									"url": "https://github.com/MeshJS/mesh/blob/1cc00f9/packages/module/src/transaction/transaction.service.ts#L610"
								}
							],
							"parameters": [
								{
									"id": 790,
									"name": "slot",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The slot number to expire the transaction at."
											}
										]
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								}
							],
							"type": {
								"type": "reference",
								"target": 679,
								"name": "Transaction",
								"package": "@meshsdk/core"
							}
						}
					]
				},
				{
					"id": 785,
					"name": "setTimeToStart",
					"variant": "declaration",
					"kind": 2048,
					"flags": {},
					"sources": [
						{
							"fileName": "transaction/transaction.service.ts",
							"line": 595,
							"character": 2,
							"url": "https://github.com/MeshJS/mesh/blob/1cc00f9/packages/module/src/transaction/transaction.service.ts#L595"
						}
					],
					"signatures": [
						{
							"id": 786,
							"name": "setTimeToStart",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Sets the start slot for the transaction."
									}
								],
								"blockTags": [
									{
										"tag": "@returns",
										"content": [
											{
												"kind": "text",
												"text": "The Transaction object."
											}
										]
									},
									{
										"tag": "@see",
										"content": [
											{
												"kind": "inline-tag",
												"tag": "@link",
												"text": "https://meshjs.dev/apis/transaction#setTimeLimit",
												"target": "https://meshjs.dev/apis/transaction#setTimeLimit"
											}
										]
									}
								]
							},
							"sources": [
								{
									"fileName": "transaction/transaction.service.ts",
									"line": 595,
									"character": 2,
									"url": "https://github.com/MeshJS/mesh/blob/1cc00f9/packages/module/src/transaction/transaction.service.ts#L595"
								}
							],
							"parameters": [
								{
									"id": 787,
									"name": "slot",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The start slot for the transaction."
											}
										]
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								}
							],
							"type": {
								"type": "reference",
								"target": 679,
								"name": "Transaction",
								"package": "@meshsdk/core"
							}
						}
					]
				},
				{
					"id": 791,
					"name": "setTxInputs",
					"variant": "declaration",
					"kind": 2048,
					"flags": {},
					"sources": [
						{
							"fileName": "transaction/transaction.service.ts",
							"line": 623,
							"character": 2,
							"url": "https://github.com/MeshJS/mesh/blob/1cc00f9/packages/module/src/transaction/transaction.service.ts#L623"
						}
					],
					"signatures": [
						{
							"id": 792,
							"name": "setTxInputs",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Sets the inputs for the transaction."
									}
								],
								"blockTags": [
									{
										"tag": "@returns",
										"content": [
											{
												"kind": "text",
												"text": "The transaction."
											}
										]
									}
								]
							},
							"sources": [
								{
									"fileName": "transaction/transaction.service.ts",
									"line": 623,
									"character": 2,
									"url": "https://github.com/MeshJS/mesh/blob/1cc00f9/packages/module/src/transaction/transaction.service.ts#L623"
								}
							],
							"parameters": [
								{
									"id": 793,
									"name": "inputs",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The inputs to set."
											}
										]
									},
									"type": {
										"type": "array",
										"elementType": {
											"type": "reference",
											"target": {
												"sourceFileName": "src/types/UTxO.ts",
												"qualifiedName": "UTxO"
											},
											"name": "UTxO",
											"package": "@meshsdk/core"
										}
									}
								}
							],
							"type": {
								"type": "reference",
								"target": 679,
								"name": "Transaction",
								"package": "@meshsdk/core"
							}
						}
					]
				},
				{
					"id": 821,
					"name": "setTxOutput",
					"variant": "declaration",
					"kind": 2048,
					"flags": {
						"isPrivate": true
					},
					"sources": [
						{
							"fileName": "transaction/transaction.service.ts",
							"line": 870,
							"character": 10,
							"url": "https://github.com/MeshJS/mesh/blob/1cc00f9/packages/module/src/transaction/transaction.service.ts#L870"
						}
					],
					"signatures": [
						{
							"id": 822,
							"name": "setTxOutput",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"sources": [
								{
									"fileName": "transaction/transaction.service.ts",
									"line": 870,
									"character": 10,
									"url": "https://github.com/MeshJS/mesh/blob/1cc00f9/packages/module/src/transaction/transaction.service.ts#L870"
								}
							],
							"parameters": [
								{
									"id": 823,
									"name": "asset",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "src/types/Asset.ts",
											"qualifiedName": "Asset"
										},
										"name": "Asset",
										"package": "@meshsdk/core"
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "void"
							}
						}
					]
				},
				{
					"id": 794,
					"name": "setTxRefInputs",
					"variant": "declaration",
					"kind": 2048,
					"flags": {},
					"sources": [
						{
							"fileName": "transaction/transaction.service.ts",
							"line": 643,
							"character": 2,
							"url": "https://github.com/MeshJS/mesh/blob/1cc00f9/packages/module/src/transaction/transaction.service.ts#L643"
						}
					],
					"signatures": [
						{
							"id": 795,
							"name": "setTxRefInputs",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Sets the reference inputs for the transaction."
									}
								],
								"blockTags": [
									{
										"tag": "@returns",
										"content": [
											{
												"kind": "text",
												"text": "The transaction."
											}
										]
									}
								]
							},
							"sources": [
								{
									"fileName": "transaction/transaction.service.ts",
									"line": 643,
									"character": 2,
									"url": "https://github.com/MeshJS/mesh/blob/1cc00f9/packages/module/src/transaction/transaction.service.ts#L643"
								}
							],
							"parameters": [
								{
									"id": 796,
									"name": "inputs",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The reference inputs to set."
											}
										]
									},
									"type": {
										"type": "array",
										"elementType": {
											"type": "reference",
											"target": {
												"sourceFileName": "src/types/UTxO.ts",
												"qualifiedName": "UTxO"
											},
											"name": "UTxO",
											"package": "@meshsdk/core"
										}
									}
								}
							],
							"type": {
								"type": "reference",
								"target": 679,
								"name": "Transaction",
								"package": "@meshsdk/core"
							}
						}
					]
				},
				{
					"id": 797,
					"name": "withdrawRewards",
					"variant": "declaration",
					"kind": 2048,
					"flags": {},
					"sources": [
						{
							"fileName": "transaction/transaction.service.ts",
							"line": 653,
							"character": 2,
							"url": "https://github.com/MeshJS/mesh/blob/1cc00f9/packages/module/src/transaction/transaction.service.ts#L653"
						}
					],
					"signatures": [
						{
							"id": 798,
							"name": "withdrawRewards",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"sources": [
								{
									"fileName": "transaction/transaction.service.ts",
									"line": 653,
									"character": 2,
									"url": "https://github.com/MeshJS/mesh/blob/1cc00f9/packages/module/src/transaction/transaction.service.ts#L653"
								}
							],
							"parameters": [
								{
									"id": 799,
									"name": "rewardAddress",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 800,
									"name": "lovelace",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								}
							],
							"type": {
								"type": "reference",
								"target": 679,
								"name": "Transaction",
								"package": "@meshsdk/core"
							}
						}
					]
				},
				{
					"id": 680,
					"name": "attachMetadata",
					"variant": "declaration",
					"kind": 2048,
					"flags": {
						"isStatic": true
					},
					"sources": [
						{
							"fileName": "transaction/transaction.service.ts",
							"line": 94,
							"character": 9,
							"url": "https://github.com/MeshJS/mesh/blob/1cc00f9/packages/module/src/transaction/transaction.service.ts#L94"
						}
					],
					"signatures": [
						{
							"id": 681,
							"name": "attachMetadata",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"sources": [
								{
									"fileName": "transaction/transaction.service.ts",
									"line": 94,
									"character": 9,
									"url": "https://github.com/MeshJS/mesh/blob/1cc00f9/packages/module/src/transaction/transaction.service.ts#L94"
								}
							],
							"parameters": [
								{
									"id": 682,
									"name": "cborTx",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 683,
									"name": "cborTxMetadata",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 684,
									"name": "era",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "src/types/Era.ts",
											"qualifiedName": "Era"
										},
										"name": "Era",
										"package": "@meshsdk/core"
									},
									"defaultValue": "'BABBAGE'"
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						}
					]
				},
				{
					"id": 685,
					"name": "deattachMetadata",
					"variant": "declaration",
					"kind": 2048,
					"flags": {
						"isStatic": true
					},
					"sources": [
						{
							"fileName": "transaction/transaction.service.ts",
							"line": 120,
							"character": 9,
							"url": "https://github.com/MeshJS/mesh/blob/1cc00f9/packages/module/src/transaction/transaction.service.ts#L120"
						}
					],
					"signatures": [
						{
							"id": 686,
							"name": "deattachMetadata",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"sources": [
								{
									"fileName": "transaction/transaction.service.ts",
									"line": 120,
									"character": 9,
									"url": "https://github.com/MeshJS/mesh/blob/1cc00f9/packages/module/src/transaction/transaction.service.ts#L120"
								}
							],
							"parameters": [
								{
									"id": 687,
									"name": "cborTx",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						}
					]
				},
				{
					"id": 688,
					"name": "maskMetadata",
					"variant": "declaration",
					"kind": 2048,
					"flags": {
						"isStatic": true
					},
					"sources": [
						{
							"fileName": "transaction/transaction.service.ts",
							"line": 126,
							"character": 9,
							"url": "https://github.com/MeshJS/mesh/blob/1cc00f9/packages/module/src/transaction/transaction.service.ts#L126"
						}
					],
					"signatures": [
						{
							"id": 689,
							"name": "maskMetadata",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"sources": [
								{
									"fileName": "transaction/transaction.service.ts",
									"line": 126,
									"character": 9,
									"url": "https://github.com/MeshJS/mesh/blob/1cc00f9/packages/module/src/transaction/transaction.service.ts#L126"
								}
							],
							"parameters": [
								{
									"id": 690,
									"name": "cborTx",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 691,
									"name": "era",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "src/types/Era.ts",
											"qualifiedName": "Era"
										},
										"name": "Era",
										"package": "@meshsdk/core"
									},
									"defaultValue": "'BABBAGE'"
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						}
					]
				},
				{
					"id": 692,
					"name": "readMetadata",
					"variant": "declaration",
					"kind": 2048,
					"flags": {
						"isStatic": true
					},
					"sources": [
						{
							"fileName": "transaction/transaction.service.ts",
							"line": 161,
							"character": 9,
							"url": "https://github.com/MeshJS/mesh/blob/1cc00f9/packages/module/src/transaction/transaction.service.ts#L161"
						}
					],
					"signatures": [
						{
							"id": 693,
							"name": "readMetadata",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"sources": [
								{
									"fileName": "transaction/transaction.service.ts",
									"line": 161,
									"character": 9,
									"url": "https://github.com/MeshJS/mesh/blob/1cc00f9/packages/module/src/transaction/transaction.service.ts#L161"
								}
							],
							"parameters": [
								{
									"id": 694,
									"name": "cborTx",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						}
					]
				},
				{
					"id": 695,
					"name": "writeMetadata",
					"variant": "declaration",
					"kind": 2048,
					"flags": {
						"isStatic": true
					},
					"sources": [
						{
							"fileName": "transaction/transaction.service.ts",
							"line": 166,
							"character": 9,
							"url": "https://github.com/MeshJS/mesh/blob/1cc00f9/packages/module/src/transaction/transaction.service.ts#L166"
						}
					],
					"signatures": [
						{
							"id": 696,
							"name": "writeMetadata",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"sources": [
								{
									"fileName": "transaction/transaction.service.ts",
									"line": 166,
									"character": 9,
									"url": "https://github.com/MeshJS/mesh/blob/1cc00f9/packages/module/src/transaction/transaction.service.ts#L166"
								}
							],
							"parameters": [
								{
									"id": 697,
									"name": "cborTx",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 698,
									"name": "cborTxMetadata",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 699,
									"name": "era",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "src/types/Era.ts",
											"qualifiedName": "Era"
										},
										"name": "Era",
										"package": "@meshsdk/core"
									},
									"defaultValue": "'BABBAGE'"
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						}
					]
				}
			],
			"groups": [
				{
					"title": "Constructors",
					"children": [
						700
					]
				},
				{
					"title": "Properties",
					"children": [
						703,
						708,
						709,
						710,
						711,
						705,
						706,
						707,
						712,
						713,
						714,
						704,
						715
					]
				},
				{
					"title": "Accessors",
					"children": [
						716
					]
				},
				{
					"title": "Methods",
					"children": [
						801,
						803,
						805,
						816,
						807,
						809,
						718,
						720,
						725,
						729,
						813,
						811,
						732,
						818,
						737,
						748,
						745,
						751,
						755,
						759,
						763,
						768,
						772,
						775,
						778,
						782,
						788,
						785,
						791,
						821,
						794,
						797,
						680,
						685,
						688,
						692,
						695
					]
				}
			],
			"sources": [
				{
					"fileName": "transaction/transaction.service.ts",
					"line": 66,
					"character": 13,
					"url": "https://github.com/MeshJS/mesh/blob/1cc00f9/packages/module/src/transaction/transaction.service.ts#L66"
				}
			]
		},
		{
			"id": 594,
			"name": "YaciProvider",
			"variant": "declaration",
			"kind": 128,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "Fetcher interface defines end points to query blockchain data."
					}
				]
			},
			"children": [
				{
					"id": 595,
					"name": "constructor",
					"variant": "declaration",
					"kind": 512,
					"flags": {},
					"sources": [
						{
							"fileName": "providers/yaci.provider.ts",
							"line": 31,
							"character": 2,
							"url": "https://github.com/MeshJS/mesh/blob/1cc00f9/packages/module/src/providers/yaci.provider.ts#L31"
						}
					],
					"signatures": [
						{
							"id": 596,
							"name": "new YaciProvider",
							"variant": "signature",
							"kind": 16384,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Set the URL of the instance."
									}
								]
							},
							"sources": [
								{
									"fileName": "providers/yaci.provider.ts",
									"line": 31,
									"character": 2,
									"url": "https://github.com/MeshJS/mesh/blob/1cc00f9/packages/module/src/providers/yaci.provider.ts#L31"
								}
							],
							"parameters": [
								{
									"id": 597,
									"name": "baseUrl",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The base URL of the instance."
											}
										]
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									},
									"defaultValue": "'http://localhost:8080/api/v1'"
								}
							],
							"type": {
								"type": "reference",
								"target": 594,
								"name": "YaciProvider",
								"package": "@meshsdk/core"
							}
						}
					]
				},
				{
					"id": 598,
					"name": "_axiosInstance",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isPrivate": true,
						"isReadonly": true
					},
					"sources": [
						{
							"fileName": "providers/yaci.provider.ts",
							"line": 25,
							"character": 19,
							"url": "https://github.com/MeshJS/mesh/blob/1cc00f9/packages/module/src/providers/yaci.provider.ts#L25"
						}
					],
					"type": {
						"type": "reference",
						"target": {
							"sourceFileName": "../../node_modules/axios/index.d.ts",
							"qualifiedName": "AxiosInstance"
						},
						"name": "AxiosInstance",
						"package": "axios"
					}
				},
				{
					"id": 599,
					"name": "fetchAccountInfo",
					"variant": "declaration",
					"kind": 2048,
					"flags": {},
					"sources": [
						{
							"fileName": "providers/yaci.provider.ts",
							"line": 37,
							"character": 8,
							"url": "https://github.com/MeshJS/mesh/blob/1cc00f9/packages/module/src/providers/yaci.provider.ts#L37"
						}
					],
					"signatures": [
						{
							"id": 600,
							"name": "fetchAccountInfo",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"sources": [
								{
									"fileName": "providers/yaci.provider.ts",
									"line": 37,
									"character": 8,
									"url": "https://github.com/MeshJS/mesh/blob/1cc00f9/packages/module/src/providers/yaci.provider.ts#L37"
								}
							],
							"parameters": [
								{
									"id": 601,
									"name": "address",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Promise"
								},
								"typeArguments": [
									{
										"type": "reference",
										"target": {
											"sourceFileName": "src/types/AccountInfo.ts",
											"qualifiedName": "AccountInfo"
										},
										"name": "AccountInfo",
										"package": "@meshsdk/core"
									}
								],
								"name": "Promise",
								"package": "typescript"
							},
							"implementationOf": {
								"type": "reference",
								"target": 19,
								"name": "IFetcher.fetchAccountInfo"
							}
						}
					],
					"implementationOf": {
						"type": "reference",
						"target": 18,
						"name": "IFetcher.fetchAccountInfo"
					}
				},
				{
					"id": 609,
					"name": "fetchAddressUTxOs",
					"variant": "declaration",
					"kind": 2048,
					"flags": {},
					"sources": [
						{
							"fileName": "providers/yaci.provider.ts",
							"line": 108,
							"character": 8,
							"url": "https://github.com/MeshJS/mesh/blob/1cc00f9/packages/module/src/providers/yaci.provider.ts#L108"
						}
					],
					"signatures": [
						{
							"id": 610,
							"name": "fetchAddressUTxOs",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"sources": [
								{
									"fileName": "providers/yaci.provider.ts",
									"line": 108,
									"character": 8,
									"url": "https://github.com/MeshJS/mesh/blob/1cc00f9/packages/module/src/providers/yaci.provider.ts#L108"
								}
							],
							"parameters": [
								{
									"id": 611,
									"name": "address",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 612,
									"name": "asset",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Promise"
								},
								"typeArguments": [
									{
										"type": "array",
										"elementType": {
											"type": "reference",
											"target": {
												"sourceFileName": "src/types/UTxO.ts",
												"qualifiedName": "UTxO"
											},
											"name": "UTxO",
											"package": "@meshsdk/core"
										}
									}
								],
								"name": "Promise",
								"package": "typescript"
							},
							"implementationOf": {
								"type": "reference",
								"target": 22,
								"name": "IFetcher.fetchAddressUTxOs"
							}
						}
					],
					"implementationOf": {
						"type": "reference",
						"target": 21,
						"name": "IFetcher.fetchAddressUTxOs"
					}
				},
				{
					"id": 613,
					"name": "fetchAssetAddresses",
					"variant": "declaration",
					"kind": 2048,
					"flags": {},
					"sources": [
						{
							"fileName": "providers/yaci.provider.ts",
							"line": 140,
							"character": 8,
							"url": "https://github.com/MeshJS/mesh/blob/1cc00f9/packages/module/src/providers/yaci.provider.ts#L140"
						}
					],
					"signatures": [
						{
							"id": 614,
							"name": "fetchAssetAddresses",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"sources": [
								{
									"fileName": "providers/yaci.provider.ts",
									"line": 140,
									"character": 8,
									"url": "https://github.com/MeshJS/mesh/blob/1cc00f9/packages/module/src/providers/yaci.provider.ts#L140"
								}
							],
							"parameters": [
								{
									"id": 615,
									"name": "asset",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Promise"
								},
								"typeArguments": [
									{
										"type": "array",
										"elementType": {
											"type": "reflection",
											"declaration": {
												"id": 616,
												"name": "__type",
												"variant": "declaration",
												"kind": 65536,
												"flags": {},
												"children": [
													{
														"id": 617,
														"name": "address",
														"variant": "declaration",
														"kind": 1024,
														"flags": {},
														"sources": [
															{
																"fileName": "providers/yaci.provider.ts",
																"line": 142,
																"character": 15,
																"url": "https://github.com/MeshJS/mesh/blob/1cc00f9/packages/module/src/providers/yaci.provider.ts#L142"
															}
														],
														"type": {
															"type": "intrinsic",
															"name": "string"
														}
													},
													{
														"id": 618,
														"name": "quantity",
														"variant": "declaration",
														"kind": 1024,
														"flags": {},
														"sources": [
															{
																"fileName": "providers/yaci.provider.ts",
																"line": 142,
																"character": 32,
																"url": "https://github.com/MeshJS/mesh/blob/1cc00f9/packages/module/src/providers/yaci.provider.ts#L142"
															}
														],
														"type": {
															"type": "intrinsic",
															"name": "string"
														}
													}
												],
												"groups": [
													{
														"title": "Properties",
														"children": [
															617,
															618
														]
													}
												],
												"sources": [
													{
														"fileName": "providers/yaci.provider.ts",
														"line": 142,
														"character": 13,
														"url": "https://github.com/MeshJS/mesh/blob/1cc00f9/packages/module/src/providers/yaci.provider.ts#L142"
													}
												]
											}
										}
									}
								],
								"name": "Promise",
								"package": "typescript"
							},
							"implementationOf": {
								"type": "reference",
								"target": 26,
								"name": "IFetcher.fetchAssetAddresses"
							}
						}
					],
					"implementationOf": {
						"type": "reference",
						"target": 25,
						"name": "IFetcher.fetchAssetAddresses"
					}
				},
				{
					"id": 619,
					"name": "fetchAssetMetadata",
					"variant": "declaration",
					"kind": 2048,
					"flags": {},
					"sources": [
						{
							"fileName": "providers/yaci.provider.ts",
							"line": 167,
							"character": 8,
							"url": "https://github.com/MeshJS/mesh/blob/1cc00f9/packages/module/src/providers/yaci.provider.ts#L167"
						}
					],
					"signatures": [
						{
							"id": 620,
							"name": "fetchAssetMetadata",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"sources": [
								{
									"fileName": "providers/yaci.provider.ts",
									"line": 167,
									"character": 8,
									"url": "https://github.com/MeshJS/mesh/blob/1cc00f9/packages/module/src/providers/yaci.provider.ts#L167"
								}
							],
							"parameters": [
								{
									"id": 621,
									"name": "asset",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Promise"
								},
								"typeArguments": [
									{
										"type": "reference",
										"target": {
											"sourceFileName": "src/types/AssetMetadata.ts",
											"qualifiedName": "AssetMetadata"
										},
										"name": "AssetMetadata",
										"package": "@meshsdk/core"
									}
								],
								"name": "Promise",
								"package": "typescript"
							},
							"implementationOf": {
								"type": "reference",
								"target": 32,
								"name": "IFetcher.fetchAssetMetadata"
							}
						}
					],
					"implementationOf": {
						"type": "reference",
						"target": 31,
						"name": "IFetcher.fetchAssetMetadata"
					}
				},
				{
					"id": 622,
					"name": "fetchBlockInfo",
					"variant": "declaration",
					"kind": 2048,
					"flags": {},
					"sources": [
						{
							"fileName": "providers/yaci.provider.ts",
							"line": 185,
							"character": 8,
							"url": "https://github.com/MeshJS/mesh/blob/1cc00f9/packages/module/src/providers/yaci.provider.ts#L185"
						}
					],
					"signatures": [
						{
							"id": 623,
							"name": "fetchBlockInfo",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"sources": [
								{
									"fileName": "providers/yaci.provider.ts",
									"line": 185,
									"character": 8,
									"url": "https://github.com/MeshJS/mesh/blob/1cc00f9/packages/module/src/providers/yaci.provider.ts#L185"
								}
							],
							"parameters": [
								{
									"id": 624,
									"name": "hash",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Promise"
								},
								"typeArguments": [
									{
										"type": "reference",
										"target": {
											"sourceFileName": "src/types/BlockInfo.ts",
											"qualifiedName": "BlockInfo"
										},
										"name": "BlockInfo",
										"package": "@meshsdk/core"
									}
								],
								"name": "Promise",
								"package": "typescript"
							},
							"implementationOf": {
								"type": "reference",
								"target": 35,
								"name": "IFetcher.fetchBlockInfo"
							}
						}
					],
					"implementationOf": {
						"type": "reference",
						"target": 34,
						"name": "IFetcher.fetchBlockInfo"
					}
				},
				{
					"id": 625,
					"name": "fetchCollectionAssets",
					"variant": "declaration",
					"kind": 2048,
					"flags": {},
					"sources": [
						{
							"fileName": "providers/yaci.provider.ts",
							"line": 214,
							"character": 8,
							"url": "https://github.com/MeshJS/mesh/blob/1cc00f9/packages/module/src/providers/yaci.provider.ts#L214"
						}
					],
					"signatures": [
						{
							"id": 626,
							"name": "fetchCollectionAssets",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"sources": [
								{
									"fileName": "providers/yaci.provider.ts",
									"line": 214,
									"character": 8,
									"url": "https://github.com/MeshJS/mesh/blob/1cc00f9/packages/module/src/providers/yaci.provider.ts#L214"
								}
							],
							"parameters": [
								{
									"id": 627,
									"name": "policyId",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 628,
									"name": "cursor",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "number"
									},
									"defaultValue": "1"
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Promise"
								},
								"typeArguments": [
									{
										"type": "reflection",
										"declaration": {
											"id": 629,
											"name": "__type",
											"variant": "declaration",
											"kind": 65536,
											"flags": {},
											"children": [
												{
													"id": 630,
													"name": "assets",
													"variant": "declaration",
													"kind": 1024,
													"flags": {},
													"sources": [
														{
															"fileName": "providers/yaci.provider.ts",
															"line": 217,
															"character": 15,
															"url": "https://github.com/MeshJS/mesh/blob/1cc00f9/packages/module/src/providers/yaci.provider.ts#L217"
														}
													],
													"type": {
														"type": "array",
														"elementType": {
															"type": "reference",
															"target": {
																"sourceFileName": "src/types/Asset.ts",
																"qualifiedName": "Asset"
															},
															"name": "Asset",
															"package": "@meshsdk/core"
														}
													}
												},
												{
													"id": 631,
													"name": "next",
													"variant": "declaration",
													"kind": 1024,
													"flags": {},
													"sources": [
														{
															"fileName": "providers/yaci.provider.ts",
															"line": 217,
															"character": 32,
															"url": "https://github.com/MeshJS/mesh/blob/1cc00f9/packages/module/src/providers/yaci.provider.ts#L217"
														}
													],
													"type": {
														"type": "union",
														"types": [
															{
																"type": "literal",
																"value": null
															},
															{
																"type": "intrinsic",
																"name": "string"
															},
															{
																"type": "intrinsic",
																"name": "number"
															}
														]
													}
												}
											],
											"groups": [
												{
													"title": "Properties",
													"children": [
														630,
														631
													]
												}
											],
											"sources": [
												{
													"fileName": "providers/yaci.provider.ts",
													"line": 217,
													"character": 13,
													"url": "https://github.com/MeshJS/mesh/blob/1cc00f9/packages/module/src/providers/yaci.provider.ts#L217"
												}
											]
										}
									}
								],
								"name": "Promise",
								"package": "typescript"
							},
							"implementationOf": {
								"type": "reference",
								"target": 38,
								"name": "IFetcher.fetchCollectionAssets"
							}
						}
					],
					"implementationOf": {
						"type": "reference",
						"target": 37,
						"name": "IFetcher.fetchCollectionAssets"
					}
				},
				{
					"id": 632,
					"name": "fetchHandleAddress",
					"variant": "declaration",
					"kind": 2048,
					"flags": {},
					"sources": [
						{
							"fileName": "providers/yaci.provider.ts",
							"line": 238,
							"character": 8,
							"url": "https://github.com/MeshJS/mesh/blob/1cc00f9/packages/module/src/providers/yaci.provider.ts#L238"
						}
					],
					"signatures": [
						{
							"id": 633,
							"name": "fetchHandleAddress",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"sources": [
								{
									"fileName": "providers/yaci.provider.ts",
									"line": 238,
									"character": 8,
									"url": "https://github.com/MeshJS/mesh/blob/1cc00f9/packages/module/src/providers/yaci.provider.ts#L238"
								}
							],
							"parameters": [
								{
									"id": 634,
									"name": "handle",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Promise"
								},
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "string"
									}
								],
								"name": "Promise",
								"package": "typescript"
							},
							"implementationOf": {
								"type": "reference",
								"target": 45,
								"name": "IFetcher.fetchHandleAddress"
							}
						}
					],
					"implementationOf": {
						"type": "reference",
						"target": 44,
						"name": "IFetcher.fetchHandleAddress"
					}
				},
				{
					"id": 657,
					"name": "fetchNativeScriptJSON",
					"variant": "declaration",
					"kind": 2048,
					"flags": {
						"isPrivate": true
					},
					"sources": [
						{
							"fileName": "providers/yaci.provider.ts",
							"line": 390,
							"character": 16,
							"url": "https://github.com/MeshJS/mesh/blob/1cc00f9/packages/module/src/providers/yaci.provider.ts#L390"
						}
					],
					"signatures": [
						{
							"id": 658,
							"name": "fetchNativeScriptJSON",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"sources": [
								{
									"fileName": "providers/yaci.provider.ts",
									"line": 390,
									"character": 16,
									"url": "https://github.com/MeshJS/mesh/blob/1cc00f9/packages/module/src/providers/yaci.provider.ts#L390"
								}
							],
							"parameters": [
								{
									"id": 659,
									"name": "scriptHash",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Promise"
								},
								"typeArguments": [
									{
										"type": "reference",
										"target": {
											"sourceFileName": "src/types/NativeScript.ts",
											"qualifiedName": "NativeScript"
										},
										"name": "NativeScript",
										"package": "@meshsdk/core"
									}
								],
								"name": "Promise",
								"package": "typescript"
							}
						}
					]
				},
				{
					"id": 654,
					"name": "fetchPlutusScriptCBOR",
					"variant": "declaration",
					"kind": 2048,
					"flags": {
						"isPrivate": true
					},
					"sources": [
						{
							"fileName": "providers/yaci.provider.ts",
							"line": 380,
							"character": 16,
							"url": "https://github.com/MeshJS/mesh/blob/1cc00f9/packages/module/src/providers/yaci.provider.ts#L380"
						}
					],
					"signatures": [
						{
							"id": 655,
							"name": "fetchPlutusScriptCBOR",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"sources": [
								{
									"fileName": "providers/yaci.provider.ts",
									"line": 380,
									"character": 16,
									"url": "https://github.com/MeshJS/mesh/blob/1cc00f9/packages/module/src/providers/yaci.provider.ts#L380"
								}
							],
							"parameters": [
								{
									"id": 656,
									"name": "scriptHash",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Promise"
								},
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "string"
									}
								],
								"name": "Promise",
								"package": "typescript"
							}
						}
					]
				},
				{
					"id": 635,
					"name": "fetchProtocolParameters",
					"variant": "declaration",
					"kind": 2048,
					"flags": {},
					"sources": [
						{
							"fileName": "providers/yaci.provider.ts",
							"line": 253,
							"character": 8,
							"url": "https://github.com/MeshJS/mesh/blob/1cc00f9/packages/module/src/providers/yaci.provider.ts#L253"
						}
					],
					"signatures": [
						{
							"id": 636,
							"name": "fetchProtocolParameters",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"sources": [
								{
									"fileName": "providers/yaci.provider.ts",
									"line": 253,
									"character": 8,
									"url": "https://github.com/MeshJS/mesh/blob/1cc00f9/packages/module/src/providers/yaci.provider.ts#L253"
								}
							],
							"parameters": [
								{
									"id": 637,
									"name": "epoch",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "number"
									},
									"defaultValue": "Number.NaN"
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Promise"
								},
								"typeArguments": [
									{
										"type": "reference",
										"target": {
											"sourceFileName": "src/types/Protocol.ts",
											"qualifiedName": "Protocol"
										},
										"name": "Protocol",
										"package": "@meshsdk/core"
									}
								],
								"name": "Promise",
								"package": "typescript"
							},
							"implementationOf": {
								"type": "reference",
								"target": 48,
								"name": "IFetcher.fetchProtocolParameters"
							}
						}
					],
					"implementationOf": {
						"type": "reference",
						"target": 47,
						"name": "IFetcher.fetchProtocolParameters"
					}
				},
				{
					"id": 638,
					"name": "fetchTxInfo",
					"variant": "declaration",
					"kind": 2048,
					"flags": {},
					"sources": [
						{
							"fileName": "providers/yaci.provider.ts",
							"line": 289,
							"character": 8,
							"url": "https://github.com/MeshJS/mesh/blob/1cc00f9/packages/module/src/providers/yaci.provider.ts#L289"
						}
					],
					"signatures": [
						{
							"id": 639,
							"name": "fetchTxInfo",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"sources": [
								{
									"fileName": "providers/yaci.provider.ts",
									"line": 289,
									"character": 8,
									"url": "https://github.com/MeshJS/mesh/blob/1cc00f9/packages/module/src/providers/yaci.provider.ts#L289"
								}
							],
							"parameters": [
								{
									"id": 640,
									"name": "hash",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Promise"
								},
								"typeArguments": [
									{
										"type": "reference",
										"target": {
											"sourceFileName": "src/types/TransactionInfo.ts",
											"qualifiedName": "TransactionInfo"
										},
										"name": "TransactionInfo",
										"package": "@meshsdk/core"
									}
								],
								"name": "Promise",
								"package": "typescript"
							},
							"implementationOf": {
								"type": "reference",
								"target": 51,
								"name": "IFetcher.fetchTxInfo"
							}
						}
					],
					"implementationOf": {
						"type": "reference",
						"target": 50,
						"name": "IFetcher.fetchTxInfo"
					}
				},
				{
					"id": 641,
					"name": "fetchUTxOs",
					"variant": "declaration",
					"kind": 2048,
					"flags": {},
					"sources": [
						{
							"fileName": "providers/yaci.provider.ts",
							"line": 312,
							"character": 8,
							"url": "https://github.com/MeshJS/mesh/blob/1cc00f9/packages/module/src/providers/yaci.provider.ts#L312"
						}
					],
					"signatures": [
						{
							"id": 642,
							"name": "fetchUTxOs",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"sources": [
								{
									"fileName": "providers/yaci.provider.ts",
									"line": 312,
									"character": 8,
									"url": "https://github.com/MeshJS/mesh/blob/1cc00f9/packages/module/src/providers/yaci.provider.ts#L312"
								}
							],
							"parameters": [
								{
									"id": 643,
									"name": "hash",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Promise"
								},
								"typeArguments": [
									{
										"type": "array",
										"elementType": {
											"type": "reference",
											"target": {
												"sourceFileName": "src/types/UTxO.ts",
												"qualifiedName": "UTxO"
											},
											"name": "UTxO",
											"package": "@meshsdk/core"
										}
									}
								],
								"name": "Promise",
								"package": "typescript"
							},
							"implementationOf": {
								"type": "reference",
								"target": 54,
								"name": "IFetcher.fetchUTxOs"
							}
						}
					],
					"implementationOf": {
						"type": "reference",
						"target": 53,
						"name": "IFetcher.fetchUTxOs"
					}
				},
				{
					"id": 644,
					"name": "onTxConfirmed",
					"variant": "declaration",
					"kind": 2048,
					"flags": {},
					"sources": [
						{
							"fileName": "providers/yaci.provider.ts",
							"line": 332,
							"character": 2,
							"url": "https://github.com/MeshJS/mesh/blob/1cc00f9/packages/module/src/providers/yaci.provider.ts#L332"
						}
					],
					"signatures": [
						{
							"id": 645,
							"name": "onTxConfirmed",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"sources": [
								{
									"fileName": "providers/yaci.provider.ts",
									"line": 332,
									"character": 2,
									"url": "https://github.com/MeshJS/mesh/blob/1cc00f9/packages/module/src/providers/yaci.provider.ts#L332"
								}
							],
							"parameters": [
								{
									"id": 646,
									"name": "txHash",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 647,
									"name": "callback",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"type": {
										"type": "reflection",
										"declaration": {
											"id": 648,
											"name": "__type",
											"variant": "declaration",
											"kind": 65536,
											"flags": {},
											"sources": [
												{
													"fileName": "providers/yaci.provider.ts",
													"line": 332,
													"character": 42,
													"url": "https://github.com/MeshJS/mesh/blob/1cc00f9/packages/module/src/providers/yaci.provider.ts#L332"
												}
											],
											"signatures": [
												{
													"id": 649,
													"name": "__type",
													"variant": "signature",
													"kind": 4096,
													"flags": {},
													"sources": [
														{
															"fileName": "providers/yaci.provider.ts",
															"line": 332,
															"character": 42,
															"url": "https://github.com/MeshJS/mesh/blob/1cc00f9/packages/module/src/providers/yaci.provider.ts#L332"
														}
													],
													"type": {
														"type": "intrinsic",
														"name": "void"
													}
												}
											]
										}
									}
								},
								{
									"id": 650,
									"name": "limit",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "number"
									},
									"defaultValue": "100"
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "void"
							},
							"implementationOf": {
								"type": "reference",
								"target": 66,
								"name": "IListener.onTxConfirmed"
							}
						}
					],
					"implementationOf": {
						"type": "reference",
						"target": 65,
						"name": "IListener.onTxConfirmed"
					}
				},
				{
					"id": 602,
					"name": "resolveScriptRef",
					"variant": "declaration",
					"kind": 2048,
					"flags": {
						"isPrivate": true
					},
					"sources": [
						{
							"fileName": "providers/yaci.provider.ts",
							"line": 62,
							"character": 10,
							"url": "https://github.com/MeshJS/mesh/blob/1cc00f9/packages/module/src/providers/yaci.provider.ts#L62"
						}
					],
					"signatures": [
						{
							"id": 603,
							"name": "resolveScriptRef",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"sources": [
								{
									"fileName": "providers/yaci.provider.ts",
									"line": 62,
									"character": 29,
									"url": "https://github.com/MeshJS/mesh/blob/1cc00f9/packages/module/src/providers/yaci.provider.ts#L62"
								}
							],
							"parameters": [
								{
									"id": 604,
									"name": "scriptHash",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "any"
									}
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Promise"
								},
								"typeArguments": [
									{
										"type": "union",
										"types": [
											{
												"type": "intrinsic",
												"name": "undefined"
											},
											{
												"type": "intrinsic",
												"name": "string"
											}
										]
									}
								],
								"name": "Promise",
								"package": "typescript"
							}
						}
					]
				},
				{
					"id": 651,
					"name": "submitTx",
					"variant": "declaration",
					"kind": 2048,
					"flags": {},
					"sources": [
						{
							"fileName": "providers/yaci.provider.ts",
							"line": 358,
							"character": 8,
							"url": "https://github.com/MeshJS/mesh/blob/1cc00f9/packages/module/src/providers/yaci.provider.ts#L358"
						}
					],
					"signatures": [
						{
							"id": 652,
							"name": "submitTx",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"sources": [
								{
									"fileName": "providers/yaci.provider.ts",
									"line": 358,
									"character": 8,
									"url": "https://github.com/MeshJS/mesh/blob/1cc00f9/packages/module/src/providers/yaci.provider.ts#L358"
								}
							],
							"parameters": [
								{
									"id": 653,
									"name": "txHex",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Promise"
								},
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "string"
									}
								],
								"name": "Promise",
								"package": "typescript"
							},
							"implementationOf": {
								"type": "reference",
								"target": 87,
								"name": "ISubmitter.submitTx"
							}
						}
					],
					"implementationOf": {
						"type": "reference",
						"target": 86,
						"name": "ISubmitter.submitTx"
					}
				},
				{
					"id": 605,
					"name": "toUTxO",
					"variant": "declaration",
					"kind": 2048,
					"flags": {
						"isPrivate": true
					},
					"sources": [
						{
							"fileName": "providers/yaci.provider.ts",
							"line": 87,
							"character": 10,
							"url": "https://github.com/MeshJS/mesh/blob/1cc00f9/packages/module/src/providers/yaci.provider.ts#L87"
						}
					],
					"signatures": [
						{
							"id": 606,
							"name": "toUTxO",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"sources": [
								{
									"fileName": "providers/yaci.provider.ts",
									"line": 87,
									"character": 19,
									"url": "https://github.com/MeshJS/mesh/blob/1cc00f9/packages/module/src/providers/yaci.provider.ts#L87"
								}
							],
							"parameters": [
								{
									"id": 607,
									"name": "bfUTxO",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "src/providers/yaci.provider.ts",
											"qualifiedName": "BlockfrostUTxO"
										},
										"name": "BlockfrostUTxO",
										"package": "@meshsdk/core"
									}
								},
								{
									"id": 608,
									"name": "tx_hash",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Promise"
								},
								"typeArguments": [
									{
										"type": "reference",
										"target": {
											"sourceFileName": "src/types/UTxO.ts",
											"qualifiedName": "UTxO"
										},
										"name": "UTxO",
										"package": "@meshsdk/core"
									}
								],
								"name": "Promise",
								"package": "typescript"
							}
						}
					]
				}
			],
			"groups": [
				{
					"title": "Constructors",
					"children": [
						595
					]
				},
				{
					"title": "Properties",
					"children": [
						598
					]
				},
				{
					"title": "Methods",
					"children": [
						599,
						609,
						613,
						619,
						622,
						625,
						632,
						657,
						654,
						635,
						638,
						641,
						644,
						602,
						651,
						605
					]
				}
			],
			"sources": [
				{
					"fileName": "providers/yaci.provider.ts",
					"line": 24,
					"character": 13,
					"url": "https://github.com/MeshJS/mesh/blob/1cc00f9/packages/module/src/providers/yaci.provider.ts#L24"
				}
			],
			"implementedTypes": [
				{
					"type": "reference",
					"target": 17,
					"name": "IFetcher",
					"package": "@meshsdk/core"
				},
				{
					"type": "reference",
					"target": 64,
					"name": "IListener",
					"package": "@meshsdk/core"
				},
				{
					"type": "reference",
					"target": 85,
					"name": "ISubmitter",
					"package": "@meshsdk/core"
				}
			]
		},
		{
			"id": 13,
			"name": "IEvaluator",
			"variant": "declaration",
			"kind": 256,
			"flags": {},
			"children": [
				{
					"id": 14,
					"name": "evaluateTx",
					"variant": "declaration",
					"kind": 2048,
					"flags": {},
					"sources": [
						{
							"fileName": "common/contracts/evaluator.ts",
							"line": 4,
							"character": 2,
							"url": "https://github.com/MeshJS/mesh/blob/1cc00f9/packages/module/src/common/contracts/evaluator.ts#L4"
						}
					],
					"signatures": [
						{
							"id": 15,
							"name": "evaluateTx",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"sources": [
								{
									"fileName": "common/contracts/evaluator.ts",
									"line": 4,
									"character": 2,
									"url": "https://github.com/MeshJS/mesh/blob/1cc00f9/packages/module/src/common/contracts/evaluator.ts#L4"
								}
							],
							"parameters": [
								{
									"id": 16,
									"name": "tx",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Promise"
								},
								"typeArguments": [
									{
										"type": "array",
										"elementType": {
											"type": "reference",
											"target": {
												"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
												"qualifiedName": "Omit"
											},
											"typeArguments": [
												{
													"type": "reference",
													"target": {
														"sourceFileName": "src/types/Action.ts",
														"qualifiedName": "Action"
													},
													"name": "Action",
													"package": "@meshsdk/core"
												},
												{
													"type": "literal",
													"value": "data"
												}
											],
											"name": "Omit",
											"package": "typescript"
										}
									}
								],
								"name": "Promise",
								"package": "typescript"
							}
						}
					]
				}
			],
			"groups": [
				{
					"title": "Methods",
					"children": [
						14
					]
				}
			],
			"sources": [
				{
					"fileName": "common/contracts/evaluator.ts",
					"line": 3,
					"character": 17,
					"url": "https://github.com/MeshJS/mesh/blob/1cc00f9/packages/module/src/common/contracts/evaluator.ts#L3"
				}
			],
			"implementedBy": [
				{
					"type": "reference",
					"target": 526,
					"name": "MaestroProvider"
				},
				{
					"type": "reference",
					"target": 493,
					"name": "OgmiosProvider"
				}
			]
		},
		{
			"id": 17,
			"name": "IFetcher",
			"variant": "declaration",
			"kind": 256,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "Fetcher interface defines end points to query blockchain data."
					}
				]
			},
			"children": [
				{
					"id": 18,
					"name": "fetchAccountInfo",
					"variant": "declaration",
					"kind": 2048,
					"flags": {},
					"sources": [
						{
							"fileName": "common/contracts/fetcher.ts",
							"line": 15,
							"character": 2,
							"url": "https://github.com/MeshJS/mesh/blob/1cc00f9/packages/module/src/common/contracts/fetcher.ts#L15"
						}
					],
					"signatures": [
						{
							"id": 19,
							"name": "fetchAccountInfo",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"sources": [
								{
									"fileName": "common/contracts/fetcher.ts",
									"line": 15,
									"character": 2,
									"url": "https://github.com/MeshJS/mesh/blob/1cc00f9/packages/module/src/common/contracts/fetcher.ts#L15"
								}
							],
							"parameters": [
								{
									"id": 20,
									"name": "address",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Promise"
								},
								"typeArguments": [
									{
										"type": "reference",
										"target": {
											"sourceFileName": "src/types/AccountInfo.ts",
											"qualifiedName": "AccountInfo"
										},
										"name": "AccountInfo",
										"package": "@meshsdk/core"
									}
								],
								"name": "Promise",
								"package": "typescript"
							}
						}
					]
				},
				{
					"id": 21,
					"name": "fetchAddressUTxOs",
					"variant": "declaration",
					"kind": 2048,
					"flags": {},
					"sources": [
						{
							"fileName": "common/contracts/fetcher.ts",
							"line": 16,
							"character": 2,
							"url": "https://github.com/MeshJS/mesh/blob/1cc00f9/packages/module/src/common/contracts/fetcher.ts#L16"
						}
					],
					"signatures": [
						{
							"id": 22,
							"name": "fetchAddressUTxOs",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"sources": [
								{
									"fileName": "common/contracts/fetcher.ts",
									"line": 16,
									"character": 2,
									"url": "https://github.com/MeshJS/mesh/blob/1cc00f9/packages/module/src/common/contracts/fetcher.ts#L16"
								}
							],
							"parameters": [
								{
									"id": 23,
									"name": "address",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 24,
									"name": "asset",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Promise"
								},
								"typeArguments": [
									{
										"type": "array",
										"elementType": {
											"type": "reference",
											"target": {
												"sourceFileName": "src/types/UTxO.ts",
												"qualifiedName": "UTxO"
											},
											"name": "UTxO",
											"package": "@meshsdk/core"
										}
									}
								],
								"name": "Promise",
								"package": "typescript"
							}
						}
					]
				},
				{
					"id": 25,
					"name": "fetchAssetAddresses",
					"variant": "declaration",
					"kind": 2048,
					"flags": {},
					"sources": [
						{
							"fileName": "common/contracts/fetcher.ts",
							"line": 17,
							"character": 2,
							"url": "https://github.com/MeshJS/mesh/blob/1cc00f9/packages/module/src/common/contracts/fetcher.ts#L17"
						}
					],
					"signatures": [
						{
							"id": 26,
							"name": "fetchAssetAddresses",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"sources": [
								{
									"fileName": "common/contracts/fetcher.ts",
									"line": 17,
									"character": 2,
									"url": "https://github.com/MeshJS/mesh/blob/1cc00f9/packages/module/src/common/contracts/fetcher.ts#L17"
								}
							],
							"parameters": [
								{
									"id": 27,
									"name": "asset",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Promise"
								},
								"typeArguments": [
									{
										"type": "array",
										"elementType": {
											"type": "reflection",
											"declaration": {
												"id": 28,
												"name": "__type",
												"variant": "declaration",
												"kind": 65536,
												"flags": {},
												"children": [
													{
														"id": 29,
														"name": "address",
														"variant": "declaration",
														"kind": 1024,
														"flags": {},
														"sources": [
															{
																"fileName": "common/contracts/fetcher.ts",
																"line": 19,
																"character": 15,
																"url": "https://github.com/MeshJS/mesh/blob/1cc00f9/packages/module/src/common/contracts/fetcher.ts#L19"
															}
														],
														"type": {
															"type": "intrinsic",
															"name": "string"
														}
													},
													{
														"id": 30,
														"name": "quantity",
														"variant": "declaration",
														"kind": 1024,
														"flags": {},
														"sources": [
															{
																"fileName": "common/contracts/fetcher.ts",
																"line": 19,
																"character": 32,
																"url": "https://github.com/MeshJS/mesh/blob/1cc00f9/packages/module/src/common/contracts/fetcher.ts#L19"
															}
														],
														"type": {
															"type": "intrinsic",
															"name": "string"
														}
													}
												],
												"groups": [
													{
														"title": "Properties",
														"children": [
															29,
															30
														]
													}
												],
												"sources": [
													{
														"fileName": "common/contracts/fetcher.ts",
														"line": 19,
														"character": 13,
														"url": "https://github.com/MeshJS/mesh/blob/1cc00f9/packages/module/src/common/contracts/fetcher.ts#L19"
													}
												]
											}
										}
									}
								],
								"name": "Promise",
								"package": "typescript"
							}
						}
					]
				},
				{
					"id": 31,
					"name": "fetchAssetMetadata",
					"variant": "declaration",
					"kind": 2048,
					"flags": {},
					"sources": [
						{
							"fileName": "common/contracts/fetcher.ts",
							"line": 20,
							"character": 2,
							"url": "https://github.com/MeshJS/mesh/blob/1cc00f9/packages/module/src/common/contracts/fetcher.ts#L20"
						}
					],
					"signatures": [
						{
							"id": 32,
							"name": "fetchAssetMetadata",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"sources": [
								{
									"fileName": "common/contracts/fetcher.ts",
									"line": 20,
									"character": 2,
									"url": "https://github.com/MeshJS/mesh/blob/1cc00f9/packages/module/src/common/contracts/fetcher.ts#L20"
								}
							],
							"parameters": [
								{
									"id": 33,
									"name": "asset",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Promise"
								},
								"typeArguments": [
									{
										"type": "reference",
										"target": {
											"sourceFileName": "src/types/AssetMetadata.ts",
											"qualifiedName": "AssetMetadata"
										},
										"name": "AssetMetadata",
										"package": "@meshsdk/core"
									}
								],
								"name": "Promise",
								"package": "typescript"
							}
						}
					]
				},
				{
					"id": 34,
					"name": "fetchBlockInfo",
					"variant": "declaration",
					"kind": 2048,
					"flags": {},
					"sources": [
						{
							"fileName": "common/contracts/fetcher.ts",
							"line": 21,
							"character": 2,
							"url": "https://github.com/MeshJS/mesh/blob/1cc00f9/packages/module/src/common/contracts/fetcher.ts#L21"
						}
					],
					"signatures": [
						{
							"id": 35,
							"name": "fetchBlockInfo",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"sources": [
								{
									"fileName": "common/contracts/fetcher.ts",
									"line": 21,
									"character": 2,
									"url": "https://github.com/MeshJS/mesh/blob/1cc00f9/packages/module/src/common/contracts/fetcher.ts#L21"
								}
							],
							"parameters": [
								{
									"id": 36,
									"name": "hash",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Promise"
								},
								"typeArguments": [
									{
										"type": "reference",
										"target": {
											"sourceFileName": "src/types/BlockInfo.ts",
											"qualifiedName": "BlockInfo"
										},
										"name": "BlockInfo",
										"package": "@meshsdk/core"
									}
								],
								"name": "Promise",
								"package": "typescript"
							}
						}
					]
				},
				{
					"id": 37,
					"name": "fetchCollectionAssets",
					"variant": "declaration",
					"kind": 2048,
					"flags": {},
					"sources": [
						{
							"fileName": "common/contracts/fetcher.ts",
							"line": 22,
							"character": 2,
							"url": "https://github.com/MeshJS/mesh/blob/1cc00f9/packages/module/src/common/contracts/fetcher.ts#L22"
						}
					],
					"signatures": [
						{
							"id": 38,
							"name": "fetchCollectionAssets",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"sources": [
								{
									"fileName": "common/contracts/fetcher.ts",
									"line": 22,
									"character": 2,
									"url": "https://github.com/MeshJS/mesh/blob/1cc00f9/packages/module/src/common/contracts/fetcher.ts#L22"
								}
							],
							"parameters": [
								{
									"id": 39,
									"name": "policyId",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 40,
									"name": "cursor",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"type": {
										"type": "union",
										"types": [
											{
												"type": "intrinsic",
												"name": "string"
											},
											{
												"type": "intrinsic",
												"name": "number"
											}
										]
									}
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Promise"
								},
								"typeArguments": [
									{
										"type": "reflection",
										"declaration": {
											"id": 41,
											"name": "__type",
											"variant": "declaration",
											"kind": 65536,
											"flags": {},
											"children": [
												{
													"id": 42,
													"name": "assets",
													"variant": "declaration",
													"kind": 1024,
													"flags": {},
													"sources": [
														{
															"fileName": "common/contracts/fetcher.ts",
															"line": 25,
															"character": 15,
															"url": "https://github.com/MeshJS/mesh/blob/1cc00f9/packages/module/src/common/contracts/fetcher.ts#L25"
														}
													],
													"type": {
														"type": "array",
														"elementType": {
															"type": "reference",
															"target": {
																"sourceFileName": "src/types/Asset.ts",
																"qualifiedName": "Asset"
															},
															"name": "Asset",
															"package": "@meshsdk/core"
														}
													}
												},
												{
													"id": 43,
													"name": "next",
													"variant": "declaration",
													"kind": 1024,
													"flags": {},
													"sources": [
														{
															"fileName": "common/contracts/fetcher.ts",
															"line": 25,
															"character": 32,
															"url": "https://github.com/MeshJS/mesh/blob/1cc00f9/packages/module/src/common/contracts/fetcher.ts#L25"
														}
													],
													"type": {
														"type": "union",
														"types": [
															{
																"type": "literal",
																"value": null
															},
															{
																"type": "intrinsic",
																"name": "string"
															},
															{
																"type": "intrinsic",
																"name": "number"
															}
														]
													}
												}
											],
											"groups": [
												{
													"title": "Properties",
													"children": [
														42,
														43
													]
												}
											],
											"sources": [
												{
													"fileName": "common/contracts/fetcher.ts",
													"line": 25,
													"character": 13,
													"url": "https://github.com/MeshJS/mesh/blob/1cc00f9/packages/module/src/common/contracts/fetcher.ts#L25"
												}
											]
										}
									}
								],
								"name": "Promise",
								"package": "typescript"
							}
						}
					]
				},
				{
					"id": 44,
					"name": "fetchHandleAddress",
					"variant": "declaration",
					"kind": 2048,
					"flags": {},
					"sources": [
						{
							"fileName": "common/contracts/fetcher.ts",
							"line": 26,
							"character": 2,
							"url": "https://github.com/MeshJS/mesh/blob/1cc00f9/packages/module/src/common/contracts/fetcher.ts#L26"
						}
					],
					"signatures": [
						{
							"id": 45,
							"name": "fetchHandleAddress",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"sources": [
								{
									"fileName": "common/contracts/fetcher.ts",
									"line": 26,
									"character": 2,
									"url": "https://github.com/MeshJS/mesh/blob/1cc00f9/packages/module/src/common/contracts/fetcher.ts#L26"
								}
							],
							"parameters": [
								{
									"id": 46,
									"name": "handle",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Promise"
								},
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "string"
									}
								],
								"name": "Promise",
								"package": "typescript"
							}
						}
					]
				},
				{
					"id": 47,
					"name": "fetchProtocolParameters",
					"variant": "declaration",
					"kind": 2048,
					"flags": {},
					"sources": [
						{
							"fileName": "common/contracts/fetcher.ts",
							"line": 27,
							"character": 2,
							"url": "https://github.com/MeshJS/mesh/blob/1cc00f9/packages/module/src/common/contracts/fetcher.ts#L27"
						}
					],
					"signatures": [
						{
							"id": 48,
							"name": "fetchProtocolParameters",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"sources": [
								{
									"fileName": "common/contracts/fetcher.ts",
									"line": 27,
									"character": 2,
									"url": "https://github.com/MeshJS/mesh/blob/1cc00f9/packages/module/src/common/contracts/fetcher.ts#L27"
								}
							],
							"parameters": [
								{
									"id": 49,
									"name": "epoch",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "number"
									}
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Promise"
								},
								"typeArguments": [
									{
										"type": "reference",
										"target": {
											"sourceFileName": "src/types/Protocol.ts",
											"qualifiedName": "Protocol"
										},
										"name": "Protocol",
										"package": "@meshsdk/core"
									}
								],
								"name": "Promise",
								"package": "typescript"
							}
						}
					]
				},
				{
					"id": 50,
					"name": "fetchTxInfo",
					"variant": "declaration",
					"kind": 2048,
					"flags": {},
					"sources": [
						{
							"fileName": "common/contracts/fetcher.ts",
							"line": 28,
							"character": 2,
							"url": "https://github.com/MeshJS/mesh/blob/1cc00f9/packages/module/src/common/contracts/fetcher.ts#L28"
						}
					],
					"signatures": [
						{
							"id": 51,
							"name": "fetchTxInfo",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"sources": [
								{
									"fileName": "common/contracts/fetcher.ts",
									"line": 28,
									"character": 2,
									"url": "https://github.com/MeshJS/mesh/blob/1cc00f9/packages/module/src/common/contracts/fetcher.ts#L28"
								}
							],
							"parameters": [
								{
									"id": 52,
									"name": "hash",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Promise"
								},
								"typeArguments": [
									{
										"type": "reference",
										"target": {
											"sourceFileName": "src/types/TransactionInfo.ts",
											"qualifiedName": "TransactionInfo"
										},
										"name": "TransactionInfo",
										"package": "@meshsdk/core"
									}
								],
								"name": "Promise",
								"package": "typescript"
							}
						}
					]
				},
				{
					"id": 53,
					"name": "fetchUTxOs",
					"variant": "declaration",
					"kind": 2048,
					"flags": {},
					"sources": [
						{
							"fileName": "common/contracts/fetcher.ts",
							"line": 29,
							"character": 2,
							"url": "https://github.com/MeshJS/mesh/blob/1cc00f9/packages/module/src/common/contracts/fetcher.ts#L29"
						}
					],
					"signatures": [
						{
							"id": 54,
							"name": "fetchUTxOs",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"sources": [
								{
									"fileName": "common/contracts/fetcher.ts",
									"line": 29,
									"character": 2,
									"url": "https://github.com/MeshJS/mesh/blob/1cc00f9/packages/module/src/common/contracts/fetcher.ts#L29"
								}
							],
							"parameters": [
								{
									"id": 55,
									"name": "hash",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Promise"
								},
								"typeArguments": [
									{
										"type": "array",
										"elementType": {
											"type": "reference",
											"target": {
												"sourceFileName": "src/types/UTxO.ts",
												"qualifiedName": "UTxO"
											},
											"name": "UTxO",
											"package": "@meshsdk/core"
										}
									}
								],
								"name": "Promise",
								"package": "typescript"
							}
						}
					]
				}
			],
			"groups": [
				{
					"title": "Methods",
					"children": [
						18,
						21,
						25,
						31,
						34,
						37,
						44,
						47,
						50,
						53
					]
				}
			],
			"sources": [
				{
					"fileName": "common/contracts/fetcher.ts",
					"line": 14,
					"character": 17,
					"url": "https://github.com/MeshJS/mesh/blob/1cc00f9/packages/module/src/common/contracts/fetcher.ts#L14"
				}
			],
			"implementedBy": [
				{
					"type": "reference",
					"target": 349,
					"name": "BlockfrostProvider"
				},
				{
					"type": "reference",
					"target": 429,
					"name": "KoiosProvider"
				},
				{
					"type": "reference",
					"target": 526,
					"name": "MaestroProvider"
				},
				{
					"type": "reference",
					"target": 594,
					"name": "YaciProvider"
				}
			]
		},
		{
			"id": 56,
			"name": "IInitiator",
			"variant": "declaration",
			"kind": 256,
			"flags": {},
			"children": [
				{
					"id": 57,
					"name": "getUsedAddress",
					"variant": "declaration",
					"kind": 2048,
					"flags": {},
					"sources": [
						{
							"fileName": "common/contracts/initiator.ts",
							"line": 4,
							"character": 2,
							"url": "https://github.com/MeshJS/mesh/blob/1cc00f9/packages/module/src/common/contracts/initiator.ts#L4"
						}
					],
					"signatures": [
						{
							"id": 58,
							"name": "getUsedAddress",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"sources": [
								{
									"fileName": "common/contracts/initiator.ts",
									"line": 4,
									"character": 2,
									"url": "https://github.com/MeshJS/mesh/blob/1cc00f9/packages/module/src/common/contracts/initiator.ts#L4"
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "src/common/contracts/initiator.ts",
									"qualifiedName": "SometimesPromise"
								},
								"typeArguments": [
									{
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/@sidan-lab/sidan-csl-rs-nodejs/sidan_csl_rs.d.ts",
											"qualifiedName": "Address"
										},
										"name": "Address",
										"package": "@sidan-lab/sidan-csl-rs-nodejs"
									}
								],
								"name": "SometimesPromise",
								"package": "@meshsdk/core"
							}
						}
					]
				},
				{
					"id": 59,
					"name": "getUsedCollateral",
					"variant": "declaration",
					"kind": 2048,
					"flags": {},
					"sources": [
						{
							"fileName": "common/contracts/initiator.ts",
							"line": 5,
							"character": 2,
							"url": "https://github.com/MeshJS/mesh/blob/1cc00f9/packages/module/src/common/contracts/initiator.ts#L5"
						}
					],
					"signatures": [
						{
							"id": 60,
							"name": "getUsedCollateral",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"sources": [
								{
									"fileName": "common/contracts/initiator.ts",
									"line": 5,
									"character": 2,
									"url": "https://github.com/MeshJS/mesh/blob/1cc00f9/packages/module/src/common/contracts/initiator.ts#L5"
								}
							],
							"parameters": [
								{
									"id": 61,
									"name": "limit",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"type": {
										"type": "intrinsic",
										"name": "number"
									}
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "src/common/contracts/initiator.ts",
									"qualifiedName": "SometimesPromise"
								},
								"typeArguments": [
									{
										"type": "array",
										"elementType": {
											"type": "reference",
											"target": {
												"sourceFileName": "../../node_modules/@sidan-lab/sidan-csl-rs-nodejs/sidan_csl_rs.d.ts",
												"qualifiedName": "TransactionUnspentOutput"
											},
											"name": "TransactionUnspentOutput",
											"package": "@sidan-lab/sidan-csl-rs-nodejs"
										}
									}
								],
								"name": "SometimesPromise",
								"package": "@meshsdk/core"
							}
						}
					]
				},
				{
					"id": 62,
					"name": "getUsedUTxOs",
					"variant": "declaration",
					"kind": 2048,
					"flags": {},
					"sources": [
						{
							"fileName": "common/contracts/initiator.ts",
							"line": 8,
							"character": 2,
							"url": "https://github.com/MeshJS/mesh/blob/1cc00f9/packages/module/src/common/contracts/initiator.ts#L8"
						}
					],
					"signatures": [
						{
							"id": 63,
							"name": "getUsedUTxOs",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"sources": [
								{
									"fileName": "common/contracts/initiator.ts",
									"line": 8,
									"character": 2,
									"url": "https://github.com/MeshJS/mesh/blob/1cc00f9/packages/module/src/common/contracts/initiator.ts#L8"
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "src/common/contracts/initiator.ts",
									"qualifiedName": "SometimesPromise"
								},
								"typeArguments": [
									{
										"type": "array",
										"elementType": {
											"type": "reference",
											"target": {
												"sourceFileName": "../../node_modules/@sidan-lab/sidan-csl-rs-nodejs/sidan_csl_rs.d.ts",
												"qualifiedName": "TransactionUnspentOutput"
											},
											"name": "TransactionUnspentOutput",
											"package": "@sidan-lab/sidan-csl-rs-nodejs"
										}
									}
								],
								"name": "SometimesPromise",
								"package": "@meshsdk/core"
							}
						}
					]
				}
			],
			"groups": [
				{
					"title": "Methods",
					"children": [
						57,
						59,
						62
					]
				}
			],
			"sources": [
				{
					"fileName": "common/contracts/initiator.ts",
					"line": 3,
					"character": 17,
					"url": "https://github.com/MeshJS/mesh/blob/1cc00f9/packages/module/src/common/contracts/initiator.ts#L3"
				}
			],
			"implementedBy": [
				{
					"type": "reference",
					"target": 1176,
					"name": "AppWallet"
				},
				{
					"type": "reference",
					"target": 1227,
					"name": "BrowserWallet"
				},
				{
					"type": "reference",
					"target": 1386,
					"name": "MeshWallet"
				}
			]
		},
		{
			"id": 64,
			"name": "IListener",
			"variant": "declaration",
			"kind": 256,
			"flags": {},
			"children": [
				{
					"id": 65,
					"name": "onTxConfirmed",
					"variant": "declaration",
					"kind": 2048,
					"flags": {},
					"sources": [
						{
							"fileName": "common/contracts/listener.ts",
							"line": 2,
							"character": 2,
							"url": "https://github.com/MeshJS/mesh/blob/1cc00f9/packages/module/src/common/contracts/listener.ts#L2"
						}
					],
					"signatures": [
						{
							"id": 66,
							"name": "onTxConfirmed",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"sources": [
								{
									"fileName": "common/contracts/listener.ts",
									"line": 2,
									"character": 2,
									"url": "https://github.com/MeshJS/mesh/blob/1cc00f9/packages/module/src/common/contracts/listener.ts#L2"
								}
							],
							"parameters": [
								{
									"id": 67,
									"name": "txHash",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 68,
									"name": "callback",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"type": {
										"type": "reflection",
										"declaration": {
											"id": 69,
											"name": "__type",
											"variant": "declaration",
											"kind": 65536,
											"flags": {},
											"sources": [
												{
													"fileName": "common/contracts/listener.ts",
													"line": 2,
													"character": 42,
													"url": "https://github.com/MeshJS/mesh/blob/1cc00f9/packages/module/src/common/contracts/listener.ts#L2"
												}
											],
											"signatures": [
												{
													"id": 70,
													"name": "__type",
													"variant": "signature",
													"kind": 4096,
													"flags": {},
													"sources": [
														{
															"fileName": "common/contracts/listener.ts",
															"line": 2,
															"character": 42,
															"url": "https://github.com/MeshJS/mesh/blob/1cc00f9/packages/module/src/common/contracts/listener.ts#L2"
														}
													],
													"type": {
														"type": "intrinsic",
														"name": "void"
													}
												}
											]
										}
									}
								},
								{
									"id": 71,
									"name": "limit",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"type": {
										"type": "intrinsic",
										"name": "number"
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "void"
							}
						}
					]
				}
			],
			"groups": [
				{
					"title": "Methods",
					"children": [
						65
					]
				}
			],
			"sources": [
				{
					"fileName": "common/contracts/listener.ts",
					"line": 1,
					"character": 17,
					"url": "https://github.com/MeshJS/mesh/blob/1cc00f9/packages/module/src/common/contracts/listener.ts#L1"
				}
			],
			"implementedBy": [
				{
					"type": "reference",
					"target": 349,
					"name": "BlockfrostProvider"
				},
				{
					"type": "reference",
					"target": 429,
					"name": "KoiosProvider"
				},
				{
					"type": "reference",
					"target": 594,
					"name": "YaciProvider"
				}
			]
		},
		{
			"id": 72,
			"name": "ISigner",
			"variant": "declaration",
			"kind": 256,
			"flags": {},
			"children": [
				{
					"id": 73,
					"name": "signData",
					"variant": "declaration",
					"kind": 2048,
					"flags": {},
					"sources": [
						{
							"fileName": "common/contracts/signer.ts",
							"line": 4,
							"character": 2,
							"url": "https://github.com/MeshJS/mesh/blob/1cc00f9/packages/module/src/common/contracts/signer.ts#L4"
						}
					],
					"signatures": [
						{
							"id": 74,
							"name": "signData",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"sources": [
								{
									"fileName": "common/contracts/signer.ts",
									"line": 4,
									"character": 2,
									"url": "https://github.com/MeshJS/mesh/blob/1cc00f9/packages/module/src/common/contracts/signer.ts#L4"
								}
							],
							"parameters": [
								{
									"id": 75,
									"name": "address",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 76,
									"name": "payload",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "src/common/contracts/signer.ts",
									"qualifiedName": "SometimesPromise"
								},
								"typeArguments": [
									{
										"type": "reference",
										"target": {
											"sourceFileName": "src/types/DataSignature.ts",
											"qualifiedName": "DataSignature"
										},
										"name": "DataSignature",
										"package": "@meshsdk/core"
									}
								],
								"name": "SometimesPromise",
								"package": "@meshsdk/core"
							}
						}
					]
				},
				{
					"id": 77,
					"name": "signTx",
					"variant": "declaration",
					"kind": 2048,
					"flags": {},
					"sources": [
						{
							"fileName": "common/contracts/signer.ts",
							"line": 5,
							"character": 2,
							"url": "https://github.com/MeshJS/mesh/blob/1cc00f9/packages/module/src/common/contracts/signer.ts#L5"
						}
					],
					"signatures": [
						{
							"id": 78,
							"name": "signTx",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"sources": [
								{
									"fileName": "common/contracts/signer.ts",
									"line": 5,
									"character": 2,
									"url": "https://github.com/MeshJS/mesh/blob/1cc00f9/packages/module/src/common/contracts/signer.ts#L5"
								}
							],
							"parameters": [
								{
									"id": 79,
									"name": "unsignedTx",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 80,
									"name": "partialSign",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "boolean"
									}
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "src/common/contracts/signer.ts",
									"qualifiedName": "SometimesPromise"
								},
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "string"
									}
								],
								"name": "SometimesPromise",
								"package": "@meshsdk/core"
							}
						}
					]
				},
				{
					"id": 81,
					"name": "signTxs",
					"variant": "declaration",
					"kind": 2048,
					"flags": {},
					"sources": [
						{
							"fileName": "common/contracts/signer.ts",
							"line": 6,
							"character": 2,
							"url": "https://github.com/MeshJS/mesh/blob/1cc00f9/packages/module/src/common/contracts/signer.ts#L6"
						}
					],
					"signatures": [
						{
							"id": 82,
							"name": "signTxs",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"sources": [
								{
									"fileName": "common/contracts/signer.ts",
									"line": 6,
									"character": 2,
									"url": "https://github.com/MeshJS/mesh/blob/1cc00f9/packages/module/src/common/contracts/signer.ts#L6"
								}
							],
							"parameters": [
								{
									"id": 83,
									"name": "unsignedTxs",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"type": {
										"type": "array",
										"elementType": {
											"type": "intrinsic",
											"name": "string"
										}
									}
								},
								{
									"id": 84,
									"name": "partialSign",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "boolean"
									}
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "src/common/contracts/signer.ts",
									"qualifiedName": "SometimesPromise"
								},
								"typeArguments": [
									{
										"type": "array",
										"elementType": {
											"type": "intrinsic",
											"name": "string"
										}
									}
								],
								"name": "SometimesPromise",
								"package": "@meshsdk/core"
							}
						}
					]
				}
			],
			"groups": [
				{
					"title": "Methods",
					"children": [
						73,
						77,
						81
					]
				}
			],
			"sources": [
				{
					"fileName": "common/contracts/signer.ts",
					"line": 3,
					"character": 17,
					"url": "https://github.com/MeshJS/mesh/blob/1cc00f9/packages/module/src/common/contracts/signer.ts#L3"
				}
			],
			"implementedBy": [
				{
					"type": "reference",
					"target": 1176,
					"name": "AppWallet"
				},
				{
					"type": "reference",
					"target": 1227,
					"name": "BrowserWallet"
				},
				{
					"type": "reference",
					"target": 1386,
					"name": "MeshWallet"
				}
			]
		},
		{
			"id": 85,
			"name": "ISubmitter",
			"variant": "declaration",
			"kind": 256,
			"flags": {},
			"children": [
				{
					"id": 86,
					"name": "submitTx",
					"variant": "declaration",
					"kind": 2048,
					"flags": {},
					"sources": [
						{
							"fileName": "common/contracts/submitter.ts",
							"line": 2,
							"character": 2,
							"url": "https://github.com/MeshJS/mesh/blob/1cc00f9/packages/module/src/common/contracts/submitter.ts#L2"
						}
					],
					"signatures": [
						{
							"id": 87,
							"name": "submitTx",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"sources": [
								{
									"fileName": "common/contracts/submitter.ts",
									"line": 2,
									"character": 2,
									"url": "https://github.com/MeshJS/mesh/blob/1cc00f9/packages/module/src/common/contracts/submitter.ts#L2"
								}
							],
							"parameters": [
								{
									"id": 88,
									"name": "tx",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Promise"
								},
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "string"
									}
								],
								"name": "Promise",
								"package": "typescript"
							}
						}
					]
				}
			],
			"groups": [
				{
					"title": "Methods",
					"children": [
						86
					]
				}
			],
			"sources": [
				{
					"fileName": "common/contracts/submitter.ts",
					"line": 1,
					"character": 17,
					"url": "https://github.com/MeshJS/mesh/blob/1cc00f9/packages/module/src/common/contracts/submitter.ts#L1"
				}
			],
			"implementedBy": [
				{
					"type": "reference",
					"target": 1176,
					"name": "AppWallet"
				},
				{
					"type": "reference",
					"target": 349,
					"name": "BlockfrostProvider"
				},
				{
					"type": "reference",
					"target": 1227,
					"name": "BrowserWallet"
				},
				{
					"type": "reference",
					"target": 429,
					"name": "KoiosProvider"
				},
				{
					"type": "reference",
					"target": 526,
					"name": "MaestroProvider"
				},
				{
					"type": "reference",
					"target": 1386,
					"name": "MeshWallet"
				},
				{
					"type": "reference",
					"target": 493,
					"name": "OgmiosProvider"
				},
				{
					"type": "reference",
					"target": 594,
					"name": "YaciProvider"
				}
			]
		},
		{
			"id": 89,
			"name": "IUploader",
			"variant": "declaration",
			"kind": 256,
			"flags": {},
			"children": [
				{
					"id": 90,
					"name": "uploadContent",
					"variant": "declaration",
					"kind": 2048,
					"flags": {},
					"sources": [
						{
							"fileName": "common/contracts/uploader.ts",
							"line": 2,
							"character": 2,
							"url": "https://github.com/MeshJS/mesh/blob/1cc00f9/packages/module/src/common/contracts/uploader.ts#L2"
						}
					],
					"signatures": [
						{
							"id": 91,
							"name": "uploadContent",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"sources": [
								{
									"fileName": "common/contracts/uploader.ts",
									"line": 2,
									"character": 2,
									"url": "https://github.com/MeshJS/mesh/blob/1cc00f9/packages/module/src/common/contracts/uploader.ts#L2"
								}
							],
							"parameters": [
								{
									"id": 92,
									"name": "content",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.dom.d.ts",
											"qualifiedName": "FormData"
										},
										"name": "FormData",
										"package": "typescript"
									}
								},
								{
									"id": 93,
									"name": "recursive",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "boolean"
									}
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Promise"
								},
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "string"
									}
								],
								"name": "Promise",
								"package": "typescript"
							}
						}
					]
				}
			],
			"groups": [
				{
					"title": "Methods",
					"children": [
						90
					]
				}
			],
			"sources": [
				{
					"fileName": "common/contracts/uploader.ts",
					"line": 1,
					"character": 17,
					"url": "https://github.com/MeshJS/mesh/blob/1cc00f9/packages/module/src/common/contracts/uploader.ts#L1"
				}
			],
			"implementedBy": [
				{
					"type": "reference",
					"target": 418,
					"name": "InfuraProvider"
				}
			]
		},
		{
			"id": 522,
			"name": "MaestroConfig",
			"variant": "declaration",
			"kind": 256,
			"flags": {},
			"children": [
				{
					"id": 524,
					"name": "apiKey",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"sources": [
						{
							"fileName": "providers/maestro.provider.ts",
							"line": 28,
							"character": 2,
							"url": "https://github.com/MeshJS/mesh/blob/1cc00f9/packages/module/src/providers/maestro.provider.ts#L28"
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 523,
					"name": "network",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"sources": [
						{
							"fileName": "providers/maestro.provider.ts",
							"line": 27,
							"character": 2,
							"url": "https://github.com/MeshJS/mesh/blob/1cc00f9/packages/module/src/providers/maestro.provider.ts#L27"
						}
					],
					"type": {
						"type": "reference",
						"target": 521,
						"name": "MaestroSupportedNetworks",
						"package": "@meshsdk/core"
					}
				},
				{
					"id": 525,
					"name": "turboSubmit",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "providers/maestro.provider.ts",
							"line": 29,
							"character": 2,
							"url": "https://github.com/MeshJS/mesh/blob/1cc00f9/packages/module/src/providers/maestro.provider.ts#L29"
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "boolean"
					}
				}
			],
			"groups": [
				{
					"title": "Properties",
					"children": [
						524,
						523,
						525
					]
				}
			],
			"sources": [
				{
					"fileName": "providers/maestro.provider.ts",
					"line": 26,
					"character": 17,
					"url": "https://github.com/MeshJS/mesh/blob/1cc00f9/packages/module/src/providers/maestro.provider.ts#L26"
				}
			]
		},
		{
			"id": 153,
			"name": "AssetClass",
			"variant": "declaration",
			"kind": 2097152,
			"flags": {},
			"sources": [
				{
					"fileName": "common/data/plutus.ts",
					"line": 25,
					"character": 12,
					"url": "https://github.com/MeshJS/mesh/blob/1cc00f9/packages/module/src/common/data/plutus.ts#L25"
				}
			],
			"type": {
				"type": "reference",
				"target": 128,
				"typeArguments": [
					{
						"type": "tuple",
						"elements": [
							{
								"type": "reference",
								"target": 148,
								"name": "CurrencySymbol",
								"package": "@meshsdk/core"
							},
							{
								"type": "reference",
								"target": 149,
								"name": "TokenName",
								"package": "@meshsdk/core"
							}
						]
					}
				],
				"name": "ConStr0",
				"package": "@meshsdk/core"
			}
		},
		{
			"id": 167,
			"name": "AssocMap",
			"variant": "declaration",
			"kind": 2097152,
			"flags": {},
			"sources": [
				{
					"fileName": "common/data/plutus.ts",
					"line": 29,
					"character": 12,
					"url": "https://github.com/MeshJS/mesh/blob/1cc00f9/packages/module/src/common/data/plutus.ts#L29"
				}
			],
			"typeParameters": [
				{
					"id": 170,
					"name": "K",
					"variant": "typeParam",
					"kind": 131072,
					"flags": {}
				},
				{
					"id": 171,
					"name": "V",
					"variant": "typeParam",
					"kind": 131072,
					"flags": {}
				}
			],
			"type": {
				"type": "reflection",
				"declaration": {
					"id": 168,
					"name": "__type",
					"variant": "declaration",
					"kind": 65536,
					"flags": {},
					"children": [
						{
							"id": 169,
							"name": "map",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"sources": [
								{
									"fileName": "common/data/plutus.ts",
									"line": 29,
									"character": 31,
									"url": "https://github.com/MeshJS/mesh/blob/1cc00f9/packages/module/src/common/data/plutus.ts#L29"
								}
							],
							"type": {
								"type": "array",
								"elementType": {
									"type": "reference",
									"target": 155,
									"typeArguments": [
										{
											"type": "reference",
											"target": 170,
											"name": "K",
											"package": "@meshsdk/core",
											"refersToTypeParameter": true
										},
										{
											"type": "reference",
											"target": 171,
											"name": "V",
											"package": "@meshsdk/core",
											"refersToTypeParameter": true
										}
									],
									"name": "AssocMapItem",
									"package": "@meshsdk/core"
								}
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								169
							]
						}
					],
					"sources": [
						{
							"fileName": "common/data/plutus.ts",
							"line": 29,
							"character": 29,
							"url": "https://github.com/MeshJS/mesh/blob/1cc00f9/packages/module/src/common/data/plutus.ts#L29"
						}
					]
				}
			}
		},
		{
			"id": 155,
			"name": "AssocMapItem",
			"variant": "declaration",
			"kind": 2097152,
			"flags": {},
			"sources": [
				{
					"fileName": "common/data/plutus.ts",
					"line": 27,
					"character": 12,
					"url": "https://github.com/MeshJS/mesh/blob/1cc00f9/packages/module/src/common/data/plutus.ts#L27"
				}
			],
			"typeParameters": [
				{
					"id": 159,
					"name": "K",
					"variant": "typeParam",
					"kind": 131072,
					"flags": {}
				},
				{
					"id": 160,
					"name": "V",
					"variant": "typeParam",
					"kind": 131072,
					"flags": {}
				}
			],
			"type": {
				"type": "reflection",
				"declaration": {
					"id": 156,
					"name": "__type",
					"variant": "declaration",
					"kind": 65536,
					"flags": {},
					"children": [
						{
							"id": 157,
							"name": "k",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"sources": [
								{
									"fileName": "common/data/plutus.ts",
									"line": 27,
									"character": 35,
									"url": "https://github.com/MeshJS/mesh/blob/1cc00f9/packages/module/src/common/data/plutus.ts#L27"
								}
							],
							"type": {
								"type": "reference",
								"target": 159,
								"name": "K",
								"package": "@meshsdk/core",
								"refersToTypeParameter": true
							}
						},
						{
							"id": 158,
							"name": "v",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"sources": [
								{
									"fileName": "common/data/plutus.ts",
									"line": 27,
									"character": 41,
									"url": "https://github.com/MeshJS/mesh/blob/1cc00f9/packages/module/src/common/data/plutus.ts#L27"
								}
							],
							"type": {
								"type": "reference",
								"target": 160,
								"name": "V",
								"package": "@meshsdk/core",
								"refersToTypeParameter": true
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								157,
								158
							]
						}
					],
					"sources": [
						{
							"fileName": "common/data/plutus.ts",
							"line": 27,
							"character": 33,
							"url": "https://github.com/MeshJS/mesh/blob/1cc00f9/packages/module/src/common/data/plutus.ts#L27"
						}
					]
				}
			}
		},
		{
			"id": 134,
			"name": "Bool",
			"variant": "declaration",
			"kind": 2097152,
			"flags": {},
			"sources": [
				{
					"fileName": "common/data/plutus.ts",
					"line": 8,
					"character": 12,
					"url": "https://github.com/MeshJS/mesh/blob/1cc00f9/packages/module/src/common/data/plutus.ts#L8"
				}
			],
			"type": {
				"type": "union",
				"types": [
					{
						"type": "reference",
						"target": 128,
						"typeArguments": [
							{
								"type": "tuple"
							}
						],
						"name": "ConStr0",
						"package": "@meshsdk/core"
					},
					{
						"type": "reference",
						"target": 130,
						"typeArguments": [
							{
								"type": "tuple"
							}
						],
						"name": "ConStr1",
						"package": "@meshsdk/core"
					}
				]
			}
		},
		{
			"id": 1121,
			"name": "BuilderData",
			"variant": "declaration",
			"kind": 2097152,
			"flags": {},
			"sources": [
				{
					"fileName": "transaction/meshTxBuilder/type.ts",
					"line": 113,
					"character": 12,
					"url": "https://github.com/MeshJS/mesh/blob/1cc00f9/packages/module/src/transaction/meshTxBuilder/type.ts#L113"
				}
			],
			"type": {
				"type": "union",
				"types": [
					{
						"type": "reflection",
						"declaration": {
							"id": 1122,
							"name": "__type",
							"variant": "declaration",
							"kind": 65536,
							"flags": {},
							"children": [
								{
									"id": 1124,
									"name": "content",
									"variant": "declaration",
									"kind": 1024,
									"flags": {},
									"sources": [
										{
											"fileName": "transaction/meshTxBuilder/type.ts",
											"line": 116,
											"character": 6,
											"url": "https://github.com/MeshJS/mesh/blob/1cc00f9/packages/module/src/transaction/meshTxBuilder/type.ts#L116"
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "src/types/Data.ts",
											"qualifiedName": "Data"
										},
										"name": "Data",
										"package": "@meshsdk/core"
									}
								},
								{
									"id": 1123,
									"name": "type",
									"variant": "declaration",
									"kind": 1024,
									"flags": {},
									"sources": [
										{
											"fileName": "transaction/meshTxBuilder/type.ts",
											"line": 115,
											"character": 6,
											"url": "https://github.com/MeshJS/mesh/blob/1cc00f9/packages/module/src/transaction/meshTxBuilder/type.ts#L115"
										}
									],
									"type": {
										"type": "literal",
										"value": "Mesh"
									}
								}
							],
							"groups": [
								{
									"title": "Properties",
									"children": [
										1124,
										1123
									]
								}
							],
							"sources": [
								{
									"fileName": "transaction/meshTxBuilder/type.ts",
									"line": 114,
									"character": 4,
									"url": "https://github.com/MeshJS/mesh/blob/1cc00f9/packages/module/src/transaction/meshTxBuilder/type.ts#L114"
								}
							]
						}
					},
					{
						"type": "reflection",
						"declaration": {
							"id": 1125,
							"name": "__type",
							"variant": "declaration",
							"kind": 65536,
							"flags": {},
							"children": [
								{
									"id": 1127,
									"name": "content",
									"variant": "declaration",
									"kind": 1024,
									"flags": {},
									"sources": [
										{
											"fileName": "transaction/meshTxBuilder/type.ts",
											"line": 120,
											"character": 6,
											"url": "https://github.com/MeshJS/mesh/blob/1cc00f9/packages/module/src/transaction/meshTxBuilder/type.ts#L120"
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 1126,
									"name": "type",
									"variant": "declaration",
									"kind": 1024,
									"flags": {},
									"sources": [
										{
											"fileName": "transaction/meshTxBuilder/type.ts",
											"line": 119,
											"character": 6,
											"url": "https://github.com/MeshJS/mesh/blob/1cc00f9/packages/module/src/transaction/meshTxBuilder/type.ts#L119"
										}
									],
									"type": {
										"type": "literal",
										"value": "JSON"
									}
								}
							],
							"groups": [
								{
									"title": "Properties",
									"children": [
										1127,
										1126
									]
								}
							],
							"sources": [
								{
									"fileName": "transaction/meshTxBuilder/type.ts",
									"line": 118,
									"character": 4,
									"url": "https://github.com/MeshJS/mesh/blob/1cc00f9/packages/module/src/transaction/meshTxBuilder/type.ts#L118"
								}
							]
						}
					},
					{
						"type": "reflection",
						"declaration": {
							"id": 1128,
							"name": "__type",
							"variant": "declaration",
							"kind": 65536,
							"flags": {},
							"children": [
								{
									"id": 1130,
									"name": "content",
									"variant": "declaration",
									"kind": 1024,
									"flags": {},
									"sources": [
										{
											"fileName": "transaction/meshTxBuilder/type.ts",
											"line": 124,
											"character": 6,
											"url": "https://github.com/MeshJS/mesh/blob/1cc00f9/packages/module/src/transaction/meshTxBuilder/type.ts#L124"
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 1129,
									"name": "type",
									"variant": "declaration",
									"kind": 1024,
									"flags": {},
									"sources": [
										{
											"fileName": "transaction/meshTxBuilder/type.ts",
											"line": 123,
											"character": 6,
											"url": "https://github.com/MeshJS/mesh/blob/1cc00f9/packages/module/src/transaction/meshTxBuilder/type.ts#L123"
										}
									],
									"type": {
										"type": "literal",
										"value": "CBOR"
									}
								}
							],
							"groups": [
								{
									"title": "Properties",
									"children": [
										1130,
										1129
									]
								}
							],
							"sources": [
								{
									"fileName": "transaction/meshTxBuilder/type.ts",
									"line": 122,
									"character": 4,
									"url": "https://github.com/MeshJS/mesh/blob/1cc00f9/packages/module/src/transaction/meshTxBuilder/type.ts#L122"
								}
							]
						}
					}
				]
			}
		},
		{
			"id": 135,
			"name": "BuiltinByteString",
			"variant": "declaration",
			"kind": 2097152,
			"flags": {},
			"sources": [
				{
					"fileName": "common/data/plutus.ts",
					"line": 9,
					"character": 12,
					"url": "https://github.com/MeshJS/mesh/blob/1cc00f9/packages/module/src/common/data/plutus.ts#L9"
				}
			],
			"type": {
				"type": "reflection",
				"declaration": {
					"id": 136,
					"name": "__type",
					"variant": "declaration",
					"kind": 65536,
					"flags": {},
					"children": [
						{
							"id": 137,
							"name": "bytes",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"sources": [
								{
									"fileName": "common/data/plutus.ts",
									"line": 9,
									"character": 34,
									"url": "https://github.com/MeshJS/mesh/blob/1cc00f9/packages/module/src/common/data/plutus.ts#L9"
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								137
							]
						}
					],
					"sources": [
						{
							"fileName": "common/data/plutus.ts",
							"line": 9,
							"character": 32,
							"url": "https://github.com/MeshJS/mesh/blob/1cc00f9/packages/module/src/common/data/plutus.ts#L9"
						}
					]
				}
			}
		},
		{
			"id": 1139,
			"name": "Certificate",
			"variant": "declaration",
			"kind": 2097152,
			"flags": {},
			"sources": [
				{
					"fileName": "transaction/meshTxBuilder/type.ts",
					"line": 139,
					"character": 12,
					"url": "https://github.com/MeshJS/mesh/blob/1cc00f9/packages/module/src/transaction/meshTxBuilder/type.ts#L139"
				}
			],
			"type": {
				"type": "union",
				"types": [
					{
						"type": "reflection",
						"declaration": {
							"id": 1140,
							"name": "__type",
							"variant": "declaration",
							"kind": 65536,
							"flags": {},
							"children": [
								{
									"id": 1142,
									"name": "poolParams",
									"variant": "declaration",
									"kind": 1024,
									"flags": {},
									"sources": [
										{
											"fileName": "transaction/meshTxBuilder/type.ts",
											"line": 140,
											"character": 28,
											"url": "https://github.com/MeshJS/mesh/blob/1cc00f9/packages/module/src/transaction/meshTxBuilder/type.ts#L140"
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "src/types/PoolParams.ts",
											"qualifiedName": "PoolParams"
										},
										"name": "PoolParams",
										"package": "@meshsdk/core"
									}
								},
								{
									"id": 1141,
									"name": "type",
									"variant": "declaration",
									"kind": 1024,
									"flags": {},
									"sources": [
										{
											"fileName": "transaction/meshTxBuilder/type.ts",
											"line": 140,
											"character": 6,
											"url": "https://github.com/MeshJS/mesh/blob/1cc00f9/packages/module/src/transaction/meshTxBuilder/type.ts#L140"
										}
									],
									"type": {
										"type": "literal",
										"value": "RegisterPool"
									}
								}
							],
							"groups": [
								{
									"title": "Properties",
									"children": [
										1142,
										1141
									]
								}
							],
							"sources": [
								{
									"fileName": "transaction/meshTxBuilder/type.ts",
									"line": 140,
									"character": 4,
									"url": "https://github.com/MeshJS/mesh/blob/1cc00f9/packages/module/src/transaction/meshTxBuilder/type.ts#L140"
								}
							]
						}
					},
					{
						"type": "reflection",
						"declaration": {
							"id": 1143,
							"name": "__type",
							"variant": "declaration",
							"kind": 65536,
							"flags": {},
							"children": [
								{
									"id": 1145,
									"name": "stakeKeyHash",
									"variant": "declaration",
									"kind": 1024,
									"flags": {},
									"sources": [
										{
											"fileName": "transaction/meshTxBuilder/type.ts",
											"line": 141,
											"character": 29,
											"url": "https://github.com/MeshJS/mesh/blob/1cc00f9/packages/module/src/transaction/meshTxBuilder/type.ts#L141"
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 1144,
									"name": "type",
									"variant": "declaration",
									"kind": 1024,
									"flags": {},
									"sources": [
										{
											"fileName": "transaction/meshTxBuilder/type.ts",
											"line": 141,
											"character": 6,
											"url": "https://github.com/MeshJS/mesh/blob/1cc00f9/packages/module/src/transaction/meshTxBuilder/type.ts#L141"
										}
									],
									"type": {
										"type": "literal",
										"value": "RegisterStake"
									}
								}
							],
							"groups": [
								{
									"title": "Properties",
									"children": [
										1145,
										1144
									]
								}
							],
							"sources": [
								{
									"fileName": "transaction/meshTxBuilder/type.ts",
									"line": 141,
									"character": 4,
									"url": "https://github.com/MeshJS/mesh/blob/1cc00f9/packages/module/src/transaction/meshTxBuilder/type.ts#L141"
								}
							]
						}
					},
					{
						"type": "reflection",
						"declaration": {
							"id": 1146,
							"name": "__type",
							"variant": "declaration",
							"kind": 65536,
							"flags": {},
							"children": [
								{
									"id": 1149,
									"name": "poolId",
									"variant": "declaration",
									"kind": 1024,
									"flags": {},
									"sources": [
										{
											"fileName": "transaction/meshTxBuilder/type.ts",
											"line": 142,
											"character": 51,
											"url": "https://github.com/MeshJS/mesh/blob/1cc00f9/packages/module/src/transaction/meshTxBuilder/type.ts#L142"
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 1148,
									"name": "stakeKeyHash",
									"variant": "declaration",
									"kind": 1024,
									"flags": {},
									"sources": [
										{
											"fileName": "transaction/meshTxBuilder/type.ts",
											"line": 142,
											"character": 29,
											"url": "https://github.com/MeshJS/mesh/blob/1cc00f9/packages/module/src/transaction/meshTxBuilder/type.ts#L142"
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 1147,
									"name": "type",
									"variant": "declaration",
									"kind": 1024,
									"flags": {},
									"sources": [
										{
											"fileName": "transaction/meshTxBuilder/type.ts",
											"line": 142,
											"character": 6,
											"url": "https://github.com/MeshJS/mesh/blob/1cc00f9/packages/module/src/transaction/meshTxBuilder/type.ts#L142"
										}
									],
									"type": {
										"type": "literal",
										"value": "DelegateStake"
									}
								}
							],
							"groups": [
								{
									"title": "Properties",
									"children": [
										1149,
										1148,
										1147
									]
								}
							],
							"sources": [
								{
									"fileName": "transaction/meshTxBuilder/type.ts",
									"line": 142,
									"character": 4,
									"url": "https://github.com/MeshJS/mesh/blob/1cc00f9/packages/module/src/transaction/meshTxBuilder/type.ts#L142"
								}
							]
						}
					},
					{
						"type": "reflection",
						"declaration": {
							"id": 1150,
							"name": "__type",
							"variant": "declaration",
							"kind": 65536,
							"flags": {},
							"children": [
								{
									"id": 1152,
									"name": "stakeKeyHash",
									"variant": "declaration",
									"kind": 1024,
									"flags": {},
									"sources": [
										{
											"fileName": "transaction/meshTxBuilder/type.ts",
											"line": 143,
											"character": 31,
											"url": "https://github.com/MeshJS/mesh/blob/1cc00f9/packages/module/src/transaction/meshTxBuilder/type.ts#L143"
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 1151,
									"name": "type",
									"variant": "declaration",
									"kind": 1024,
									"flags": {},
									"sources": [
										{
											"fileName": "transaction/meshTxBuilder/type.ts",
											"line": 143,
											"character": 6,
											"url": "https://github.com/MeshJS/mesh/blob/1cc00f9/packages/module/src/transaction/meshTxBuilder/type.ts#L143"
										}
									],
									"type": {
										"type": "literal",
										"value": "DeregisterStake"
									}
								}
							],
							"groups": [
								{
									"title": "Properties",
									"children": [
										1152,
										1151
									]
								}
							],
							"sources": [
								{
									"fileName": "transaction/meshTxBuilder/type.ts",
									"line": 143,
									"character": 4,
									"url": "https://github.com/MeshJS/mesh/blob/1cc00f9/packages/module/src/transaction/meshTxBuilder/type.ts#L143"
								}
							]
						}
					},
					{
						"type": "reflection",
						"declaration": {
							"id": 1153,
							"name": "__type",
							"variant": "declaration",
							"kind": 65536,
							"flags": {},
							"children": [
								{
									"id": 1156,
									"name": "epoch",
									"variant": "declaration",
									"kind": 1024,
									"flags": {},
									"sources": [
										{
											"fileName": "transaction/meshTxBuilder/type.ts",
											"line": 144,
											"character": 42,
											"url": "https://github.com/MeshJS/mesh/blob/1cc00f9/packages/module/src/transaction/meshTxBuilder/type.ts#L144"
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "number"
									}
								},
								{
									"id": 1155,
									"name": "poolId",
									"variant": "declaration",
									"kind": 1024,
									"flags": {},
									"sources": [
										{
											"fileName": "transaction/meshTxBuilder/type.ts",
											"line": 144,
											"character": 26,
											"url": "https://github.com/MeshJS/mesh/blob/1cc00f9/packages/module/src/transaction/meshTxBuilder/type.ts#L144"
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 1154,
									"name": "type",
									"variant": "declaration",
									"kind": 1024,
									"flags": {},
									"sources": [
										{
											"fileName": "transaction/meshTxBuilder/type.ts",
											"line": 144,
											"character": 6,
											"url": "https://github.com/MeshJS/mesh/blob/1cc00f9/packages/module/src/transaction/meshTxBuilder/type.ts#L144"
										}
									],
									"type": {
										"type": "literal",
										"value": "RetirePool"
									}
								}
							],
							"groups": [
								{
									"title": "Properties",
									"children": [
										1156,
										1155,
										1154
									]
								}
							],
							"sources": [
								{
									"fileName": "transaction/meshTxBuilder/type.ts",
									"line": 144,
									"character": 4,
									"url": "https://github.com/MeshJS/mesh/blob/1cc00f9/packages/module/src/transaction/meshTxBuilder/type.ts#L144"
								}
							]
						}
					}
				]
			}
		},
		{
			"id": 122,
			"name": "ConStr",
			"variant": "declaration",
			"kind": 2097152,
			"flags": {},
			"sources": [
				{
					"fileName": "common/data/plutus.ts",
					"line": 4,
					"character": 12,
					"url": "https://github.com/MeshJS/mesh/blob/1cc00f9/packages/module/src/common/data/plutus.ts#L4"
				}
			],
			"typeParameters": [
				{
					"id": 126,
					"name": "N",
					"variant": "typeParam",
					"kind": 131072,
					"flags": {},
					"default": {
						"type": "intrinsic",
						"name": "any"
					}
				},
				{
					"id": 127,
					"name": "T",
					"variant": "typeParam",
					"kind": 131072,
					"flags": {},
					"default": {
						"type": "intrinsic",
						"name": "any"
					}
				}
			],
			"type": {
				"type": "reflection",
				"declaration": {
					"id": 123,
					"name": "__type",
					"variant": "declaration",
					"kind": 65536,
					"flags": {},
					"children": [
						{
							"id": 124,
							"name": "constructor",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"sources": [
								{
									"fileName": "common/data/plutus.ts",
									"line": 4,
									"character": 41,
									"url": "https://github.com/MeshJS/mesh/blob/1cc00f9/packages/module/src/common/data/plutus.ts#L4"
								}
							],
							"type": {
								"type": "reference",
								"target": 126,
								"name": "N",
								"package": "@meshsdk/core",
								"refersToTypeParameter": true
							}
						},
						{
							"id": 125,
							"name": "fields",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"sources": [
								{
									"fileName": "common/data/plutus.ts",
									"line": 4,
									"character": 57,
									"url": "https://github.com/MeshJS/mesh/blob/1cc00f9/packages/module/src/common/data/plutus.ts#L4"
								}
							],
							"type": {
								"type": "reference",
								"target": 127,
								"name": "T",
								"package": "@meshsdk/core",
								"refersToTypeParameter": true
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								124,
								125
							]
						}
					],
					"sources": [
						{
							"fileName": "common/data/plutus.ts",
							"line": 4,
							"character": 39,
							"url": "https://github.com/MeshJS/mesh/blob/1cc00f9/packages/module/src/common/data/plutus.ts#L4"
						}
					]
				}
			}
		},
		{
			"id": 128,
			"name": "ConStr0",
			"variant": "declaration",
			"kind": 2097152,
			"flags": {},
			"sources": [
				{
					"fileName": "common/data/plutus.ts",
					"line": 5,
					"character": 12,
					"url": "https://github.com/MeshJS/mesh/blob/1cc00f9/packages/module/src/common/data/plutus.ts#L5"
				}
			],
			"typeParameters": [
				{
					"id": 129,
					"name": "T",
					"variant": "typeParam",
					"kind": 131072,
					"flags": {},
					"default": {
						"type": "intrinsic",
						"name": "any"
					}
				}
			],
			"type": {
				"type": "reference",
				"target": 122,
				"typeArguments": [
					{
						"type": "literal",
						"value": 0
					},
					{
						"type": "reference",
						"target": 129,
						"name": "T",
						"package": "@meshsdk/core",
						"refersToTypeParameter": true
					}
				],
				"name": "ConStr",
				"package": "@meshsdk/core"
			}
		},
		{
			"id": 130,
			"name": "ConStr1",
			"variant": "declaration",
			"kind": 2097152,
			"flags": {},
			"sources": [
				{
					"fileName": "common/data/plutus.ts",
					"line": 6,
					"character": 12,
					"url": "https://github.com/MeshJS/mesh/blob/1cc00f9/packages/module/src/common/data/plutus.ts#L6"
				}
			],
			"typeParameters": [
				{
					"id": 131,
					"name": "T",
					"variant": "typeParam",
					"kind": 131072,
					"flags": {},
					"default": {
						"type": "intrinsic",
						"name": "any"
					}
				}
			],
			"type": {
				"type": "reference",
				"target": 122,
				"typeArguments": [
					{
						"type": "literal",
						"value": 1
					},
					{
						"type": "reference",
						"target": 131,
						"name": "T",
						"package": "@meshsdk/core",
						"refersToTypeParameter": true
					}
				],
				"name": "ConStr",
				"package": "@meshsdk/core"
			}
		},
		{
			"id": 132,
			"name": "ConStr2",
			"variant": "declaration",
			"kind": 2097152,
			"flags": {},
			"sources": [
				{
					"fileName": "common/data/plutus.ts",
					"line": 7,
					"character": 12,
					"url": "https://github.com/MeshJS/mesh/blob/1cc00f9/packages/module/src/common/data/plutus.ts#L7"
				}
			],
			"typeParameters": [
				{
					"id": 133,
					"name": "T",
					"variant": "typeParam",
					"kind": 131072,
					"flags": {},
					"default": {
						"type": "intrinsic",
						"name": "any"
					}
				}
			],
			"type": {
				"type": "reference",
				"target": 122,
				"typeArguments": [
					{
						"type": "literal",
						"value": 2
					},
					{
						"type": "reference",
						"target": 133,
						"name": "T",
						"package": "@meshsdk/core",
						"refersToTypeParameter": true
					}
				],
				"name": "ConStr",
				"package": "@meshsdk/core"
			}
		},
		{
			"id": 1160,
			"name": "CreateAppWalletOptions",
			"variant": "declaration",
			"kind": 2097152,
			"flags": {},
			"sources": [
				{
					"fileName": "wallet/app.service.ts",
					"line": 21,
					"character": 12,
					"url": "https://github.com/MeshJS/mesh/blob/1cc00f9/packages/module/src/wallet/app.service.ts#L21"
				}
			],
			"type": {
				"type": "reflection",
				"declaration": {
					"id": 1161,
					"name": "__type",
					"variant": "declaration",
					"kind": 65536,
					"flags": {},
					"children": [
						{
							"id": 1163,
							"name": "fetcher",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"sources": [
								{
									"fileName": "wallet/app.service.ts",
									"line": 23,
									"character": 2,
									"url": "https://github.com/MeshJS/mesh/blob/1cc00f9/packages/module/src/wallet/app.service.ts#L23"
								}
							],
							"type": {
								"type": "reference",
								"target": 17,
								"name": "IFetcher",
								"package": "@meshsdk/core"
							}
						},
						{
							"id": 1165,
							"name": "key",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"sources": [
								{
									"fileName": "wallet/app.service.ts",
									"line": 25,
									"character": 2,
									"url": "https://github.com/MeshJS/mesh/blob/1cc00f9/packages/module/src/wallet/app.service.ts#L25"
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "reflection",
										"declaration": {
											"id": 1166,
											"name": "__type",
											"variant": "declaration",
											"kind": 65536,
											"flags": {},
											"children": [
												{
													"id": 1168,
													"name": "bech32",
													"variant": "declaration",
													"kind": 1024,
													"flags": {},
													"sources": [
														{
															"fileName": "wallet/app.service.ts",
															"line": 28,
															"character": 8,
															"url": "https://github.com/MeshJS/mesh/blob/1cc00f9/packages/module/src/wallet/app.service.ts#L28"
														}
													],
													"type": {
														"type": "intrinsic",
														"name": "string"
													}
												},
												{
													"id": 1167,
													"name": "type",
													"variant": "declaration",
													"kind": 1024,
													"flags": {},
													"sources": [
														{
															"fileName": "wallet/app.service.ts",
															"line": 27,
															"character": 8,
															"url": "https://github.com/MeshJS/mesh/blob/1cc00f9/packages/module/src/wallet/app.service.ts#L27"
														}
													],
													"type": {
														"type": "literal",
														"value": "root"
													}
												}
											],
											"groups": [
												{
													"title": "Properties",
													"children": [
														1168,
														1167
													]
												}
											],
											"sources": [
												{
													"fileName": "wallet/app.service.ts",
													"line": 26,
													"character": 6,
													"url": "https://github.com/MeshJS/mesh/blob/1cc00f9/packages/module/src/wallet/app.service.ts#L26"
												}
											]
										}
									},
									{
										"type": "reflection",
										"declaration": {
											"id": 1169,
											"name": "__type",
											"variant": "declaration",
											"kind": 65536,
											"flags": {},
											"children": [
												{
													"id": 1171,
													"name": "payment",
													"variant": "declaration",
													"kind": 1024,
													"flags": {},
													"sources": [
														{
															"fileName": "wallet/app.service.ts",
															"line": 32,
															"character": 8,
															"url": "https://github.com/MeshJS/mesh/blob/1cc00f9/packages/module/src/wallet/app.service.ts#L32"
														}
													],
													"type": {
														"type": "intrinsic",
														"name": "string"
													}
												},
												{
													"id": 1172,
													"name": "stake",
													"variant": "declaration",
													"kind": 1024,
													"flags": {
														"isOptional": true
													},
													"sources": [
														{
															"fileName": "wallet/app.service.ts",
															"line": 33,
															"character": 8,
															"url": "https://github.com/MeshJS/mesh/blob/1cc00f9/packages/module/src/wallet/app.service.ts#L33"
														}
													],
													"type": {
														"type": "intrinsic",
														"name": "string"
													}
												},
												{
													"id": 1170,
													"name": "type",
													"variant": "declaration",
													"kind": 1024,
													"flags": {},
													"sources": [
														{
															"fileName": "wallet/app.service.ts",
															"line": 31,
															"character": 8,
															"url": "https://github.com/MeshJS/mesh/blob/1cc00f9/packages/module/src/wallet/app.service.ts#L31"
														}
													],
													"type": {
														"type": "literal",
														"value": "cli"
													}
												}
											],
											"groups": [
												{
													"title": "Properties",
													"children": [
														1171,
														1172,
														1170
													]
												}
											],
											"sources": [
												{
													"fileName": "wallet/app.service.ts",
													"line": 30,
													"character": 6,
													"url": "https://github.com/MeshJS/mesh/blob/1cc00f9/packages/module/src/wallet/app.service.ts#L30"
												}
											]
										}
									},
									{
										"type": "reflection",
										"declaration": {
											"id": 1173,
											"name": "__type",
											"variant": "declaration",
											"kind": 65536,
											"flags": {},
											"children": [
												{
													"id": 1174,
													"name": "type",
													"variant": "declaration",
													"kind": 1024,
													"flags": {},
													"sources": [
														{
															"fileName": "wallet/app.service.ts",
															"line": 36,
															"character": 8,
															"url": "https://github.com/MeshJS/mesh/blob/1cc00f9/packages/module/src/wallet/app.service.ts#L36"
														}
													],
													"type": {
														"type": "literal",
														"value": "mnemonic"
													}
												},
												{
													"id": 1175,
													"name": "words",
													"variant": "declaration",
													"kind": 1024,
													"flags": {},
													"sources": [
														{
															"fileName": "wallet/app.service.ts",
															"line": 37,
															"character": 8,
															"url": "https://github.com/MeshJS/mesh/blob/1cc00f9/packages/module/src/wallet/app.service.ts#L37"
														}
													],
													"type": {
														"type": "array",
														"elementType": {
															"type": "intrinsic",
															"name": "string"
														}
													}
												}
											],
											"groups": [
												{
													"title": "Properties",
													"children": [
														1174,
														1175
													]
												}
											],
											"sources": [
												{
													"fileName": "wallet/app.service.ts",
													"line": 35,
													"character": 6,
													"url": "https://github.com/MeshJS/mesh/blob/1cc00f9/packages/module/src/wallet/app.service.ts#L35"
												}
											]
										}
									}
								]
							}
						},
						{
							"id": 1162,
							"name": "networkId",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"sources": [
								{
									"fileName": "wallet/app.service.ts",
									"line": 22,
									"character": 2,
									"url": "https://github.com/MeshJS/mesh/blob/1cc00f9/packages/module/src/wallet/app.service.ts#L22"
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "number"
							}
						},
						{
							"id": 1164,
							"name": "submitter",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"sources": [
								{
									"fileName": "wallet/app.service.ts",
									"line": 24,
									"character": 2,
									"url": "https://github.com/MeshJS/mesh/blob/1cc00f9/packages/module/src/wallet/app.service.ts#L24"
								}
							],
							"type": {
								"type": "reference",
								"target": 85,
								"name": "ISubmitter",
								"package": "@meshsdk/core"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								1163,
								1165,
								1162,
								1164
							]
						}
					],
					"sources": [
						{
							"fileName": "wallet/app.service.ts",
							"line": 21,
							"character": 37,
							"url": "https://github.com/MeshJS/mesh/blob/1cc00f9/packages/module/src/wallet/app.service.ts#L21"
						}
					]
				}
			}
		},
		{
			"id": 1370,
			"name": "CreateMeshWalletOptions",
			"variant": "declaration",
			"kind": 2097152,
			"flags": {},
			"sources": [
				{
					"fileName": "wallet/mesh.service.ts",
					"line": 20,
					"character": 12,
					"url": "https://github.com/MeshJS/mesh/blob/1cc00f9/packages/module/src/wallet/mesh.service.ts#L20"
				}
			],
			"type": {
				"type": "reflection",
				"declaration": {
					"id": 1371,
					"name": "__type",
					"variant": "declaration",
					"kind": 65536,
					"flags": {},
					"children": [
						{
							"id": 1373,
							"name": "fetcher",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"sources": [
								{
									"fileName": "wallet/mesh.service.ts",
									"line": 22,
									"character": 2,
									"url": "https://github.com/MeshJS/mesh/blob/1cc00f9/packages/module/src/wallet/mesh.service.ts#L22"
								}
							],
							"type": {
								"type": "reference",
								"target": 17,
								"name": "IFetcher",
								"package": "@meshsdk/core"
							}
						},
						{
							"id": 1375,
							"name": "key",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"sources": [
								{
									"fileName": "wallet/mesh.service.ts",
									"line": 24,
									"character": 2,
									"url": "https://github.com/MeshJS/mesh/blob/1cc00f9/packages/module/src/wallet/mesh.service.ts#L24"
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "reflection",
										"declaration": {
											"id": 1376,
											"name": "__type",
											"variant": "declaration",
											"kind": 65536,
											"flags": {},
											"children": [
												{
													"id": 1378,
													"name": "bech32",
													"variant": "declaration",
													"kind": 1024,
													"flags": {},
													"sources": [
														{
															"fileName": "wallet/mesh.service.ts",
															"line": 27,
															"character": 8,
															"url": "https://github.com/MeshJS/mesh/blob/1cc00f9/packages/module/src/wallet/mesh.service.ts#L27"
														}
													],
													"type": {
														"type": "intrinsic",
														"name": "string"
													}
												},
												{
													"id": 1377,
													"name": "type",
													"variant": "declaration",
													"kind": 1024,
													"flags": {},
													"sources": [
														{
															"fileName": "wallet/mesh.service.ts",
															"line": 26,
															"character": 8,
															"url": "https://github.com/MeshJS/mesh/blob/1cc00f9/packages/module/src/wallet/mesh.service.ts#L26"
														}
													],
													"type": {
														"type": "literal",
														"value": "root"
													}
												}
											],
											"groups": [
												{
													"title": "Properties",
													"children": [
														1378,
														1377
													]
												}
											],
											"sources": [
												{
													"fileName": "wallet/mesh.service.ts",
													"line": 25,
													"character": 6,
													"url": "https://github.com/MeshJS/mesh/blob/1cc00f9/packages/module/src/wallet/mesh.service.ts#L25"
												}
											]
										}
									},
									{
										"type": "reflection",
										"declaration": {
											"id": 1379,
											"name": "__type",
											"variant": "declaration",
											"kind": 65536,
											"flags": {},
											"children": [
												{
													"id": 1381,
													"name": "payment",
													"variant": "declaration",
													"kind": 1024,
													"flags": {},
													"sources": [
														{
															"fileName": "wallet/mesh.service.ts",
															"line": 31,
															"character": 8,
															"url": "https://github.com/MeshJS/mesh/blob/1cc00f9/packages/module/src/wallet/mesh.service.ts#L31"
														}
													],
													"type": {
														"type": "intrinsic",
														"name": "string"
													}
												},
												{
													"id": 1382,
													"name": "stake",
													"variant": "declaration",
													"kind": 1024,
													"flags": {
														"isOptional": true
													},
													"sources": [
														{
															"fileName": "wallet/mesh.service.ts",
															"line": 32,
															"character": 8,
															"url": "https://github.com/MeshJS/mesh/blob/1cc00f9/packages/module/src/wallet/mesh.service.ts#L32"
														}
													],
													"type": {
														"type": "intrinsic",
														"name": "string"
													}
												},
												{
													"id": 1380,
													"name": "type",
													"variant": "declaration",
													"kind": 1024,
													"flags": {},
													"sources": [
														{
															"fileName": "wallet/mesh.service.ts",
															"line": 30,
															"character": 8,
															"url": "https://github.com/MeshJS/mesh/blob/1cc00f9/packages/module/src/wallet/mesh.service.ts#L30"
														}
													],
													"type": {
														"type": "literal",
														"value": "cli"
													}
												}
											],
											"groups": [
												{
													"title": "Properties",
													"children": [
														1381,
														1382,
														1380
													]
												}
											],
											"sources": [
												{
													"fileName": "wallet/mesh.service.ts",
													"line": 29,
													"character": 6,
													"url": "https://github.com/MeshJS/mesh/blob/1cc00f9/packages/module/src/wallet/mesh.service.ts#L29"
												}
											]
										}
									},
									{
										"type": "reflection",
										"declaration": {
											"id": 1383,
											"name": "__type",
											"variant": "declaration",
											"kind": 65536,
											"flags": {},
											"children": [
												{
													"id": 1384,
													"name": "type",
													"variant": "declaration",
													"kind": 1024,
													"flags": {},
													"sources": [
														{
															"fileName": "wallet/mesh.service.ts",
															"line": 35,
															"character": 8,
															"url": "https://github.com/MeshJS/mesh/blob/1cc00f9/packages/module/src/wallet/mesh.service.ts#L35"
														}
													],
													"type": {
														"type": "literal",
														"value": "mnemonic"
													}
												},
												{
													"id": 1385,
													"name": "words",
													"variant": "declaration",
													"kind": 1024,
													"flags": {},
													"sources": [
														{
															"fileName": "wallet/mesh.service.ts",
															"line": 36,
															"character": 8,
															"url": "https://github.com/MeshJS/mesh/blob/1cc00f9/packages/module/src/wallet/mesh.service.ts#L36"
														}
													],
													"type": {
														"type": "array",
														"elementType": {
															"type": "intrinsic",
															"name": "string"
														}
													}
												}
											],
											"groups": [
												{
													"title": "Properties",
													"children": [
														1384,
														1385
													]
												}
											],
											"sources": [
												{
													"fileName": "wallet/mesh.service.ts",
													"line": 34,
													"character": 6,
													"url": "https://github.com/MeshJS/mesh/blob/1cc00f9/packages/module/src/wallet/mesh.service.ts#L34"
												}
											]
										}
									}
								]
							}
						},
						{
							"id": 1372,
							"name": "networkId",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"sources": [
								{
									"fileName": "wallet/mesh.service.ts",
									"line": 21,
									"character": 2,
									"url": "https://github.com/MeshJS/mesh/blob/1cc00f9/packages/module/src/wallet/mesh.service.ts#L21"
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "number"
							}
						},
						{
							"id": 1374,
							"name": "submitter",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"sources": [
								{
									"fileName": "wallet/mesh.service.ts",
									"line": 23,
									"character": 2,
									"url": "https://github.com/MeshJS/mesh/blob/1cc00f9/packages/module/src/wallet/mesh.service.ts#L23"
								}
							],
							"type": {
								"type": "reference",
								"target": 85,
								"name": "ISubmitter",
								"package": "@meshsdk/core"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								1373,
								1375,
								1372,
								1374
							]
						}
					],
					"sources": [
						{
							"fileName": "wallet/mesh.service.ts",
							"line": 20,
							"character": 38,
							"url": "https://github.com/MeshJS/mesh/blob/1cc00f9/packages/module/src/wallet/mesh.service.ts#L20"
						}
					]
				}
			}
		},
		{
			"id": 148,
			"name": "CurrencySymbol",
			"variant": "declaration",
			"kind": 2097152,
			"flags": {},
			"sources": [
				{
					"fileName": "common/data/plutus.ts",
					"line": 16,
					"character": 12,
					"url": "https://github.com/MeshJS/mesh/blob/1cc00f9/packages/module/src/common/data/plutus.ts#L16"
				}
			],
			"type": {
				"type": "reference",
				"target": 135,
				"name": "BuiltinByteString",
				"package": "@meshsdk/core"
			}
		},
		{
			"id": 172,
			"name": "Dict",
			"variant": "declaration",
			"kind": 2097152,
			"flags": {},
			"sources": [
				{
					"fileName": "common/data/plutus.ts",
					"line": 30,
					"character": 12,
					"url": "https://github.com/MeshJS/mesh/blob/1cc00f9/packages/module/src/common/data/plutus.ts#L30"
				}
			],
			"typeParameters": [
				{
					"id": 175,
					"name": "K",
					"variant": "typeParam",
					"kind": 131072,
					"flags": {}
				},
				{
					"id": 176,
					"name": "V",
					"variant": "typeParam",
					"kind": 131072,
					"flags": {}
				}
			],
			"type": {
				"type": "reflection",
				"declaration": {
					"id": 173,
					"name": "__type",
					"variant": "declaration",
					"kind": 65536,
					"flags": {},
					"children": [
						{
							"id": 174,
							"name": "map",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"sources": [
								{
									"fileName": "common/data/plutus.ts",
									"line": 30,
									"character": 27,
									"url": "https://github.com/MeshJS/mesh/blob/1cc00f9/packages/module/src/common/data/plutus.ts#L30"
								}
							],
							"type": {
								"type": "array",
								"elementType": {
									"type": "reference",
									"target": 161,
									"typeArguments": [
										{
											"type": "reference",
											"target": 175,
											"name": "K",
											"package": "@meshsdk/core",
											"refersToTypeParameter": true
										},
										{
											"type": "reference",
											"target": 176,
											"name": "V",
											"package": "@meshsdk/core",
											"refersToTypeParameter": true
										}
									],
									"name": "DictItem",
									"package": "@meshsdk/core"
								}
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								174
							]
						}
					],
					"sources": [
						{
							"fileName": "common/data/plutus.ts",
							"line": 30,
							"character": 25,
							"url": "https://github.com/MeshJS/mesh/blob/1cc00f9/packages/module/src/common/data/plutus.ts#L30"
						}
					]
				}
			}
		},
		{
			"id": 161,
			"name": "DictItem",
			"variant": "declaration",
			"kind": 2097152,
			"flags": {},
			"sources": [
				{
					"fileName": "common/data/plutus.ts",
					"line": 28,
					"character": 12,
					"url": "https://github.com/MeshJS/mesh/blob/1cc00f9/packages/module/src/common/data/plutus.ts#L28"
				}
			],
			"typeParameters": [
				{
					"id": 165,
					"name": "K",
					"variant": "typeParam",
					"kind": 131072,
					"flags": {}
				},
				{
					"id": 166,
					"name": "V",
					"variant": "typeParam",
					"kind": 131072,
					"flags": {}
				}
			],
			"type": {
				"type": "reflection",
				"declaration": {
					"id": 162,
					"name": "__type",
					"variant": "declaration",
					"kind": 65536,
					"flags": {},
					"children": [
						{
							"id": 163,
							"name": "k",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"sources": [
								{
									"fileName": "common/data/plutus.ts",
									"line": 28,
									"character": 31,
									"url": "https://github.com/MeshJS/mesh/blob/1cc00f9/packages/module/src/common/data/plutus.ts#L28"
								}
							],
							"type": {
								"type": "reference",
								"target": 165,
								"name": "K",
								"package": "@meshsdk/core",
								"refersToTypeParameter": true
							}
						},
						{
							"id": 164,
							"name": "v",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"sources": [
								{
									"fileName": "common/data/plutus.ts",
									"line": 28,
									"character": 37,
									"url": "https://github.com/MeshJS/mesh/blob/1cc00f9/packages/module/src/common/data/plutus.ts#L28"
								}
							],
							"type": {
								"type": "reference",
								"target": 166,
								"name": "V",
								"package": "@meshsdk/core",
								"refersToTypeParameter": true
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								163,
								164
							]
						}
					],
					"sources": [
						{
							"fileName": "common/data/plutus.ts",
							"line": 28,
							"character": 29,
							"url": "https://github.com/MeshJS/mesh/blob/1cc00f9/packages/module/src/common/data/plutus.ts#L28"
						}
					]
				}
			}
		},
		{
			"id": 138,
			"name": "Integer",
			"variant": "declaration",
			"kind": 2097152,
			"flags": {},
			"sources": [
				{
					"fileName": "common/data/plutus.ts",
					"line": 10,
					"character": 12,
					"url": "https://github.com/MeshJS/mesh/blob/1cc00f9/packages/module/src/common/data/plutus.ts#L10"
				}
			],
			"type": {
				"type": "reflection",
				"declaration": {
					"id": 139,
					"name": "__type",
					"variant": "declaration",
					"kind": 65536,
					"flags": {},
					"children": [
						{
							"id": 140,
							"name": "int",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"sources": [
								{
									"fileName": "common/data/plutus.ts",
									"line": 10,
									"character": 24,
									"url": "https://github.com/MeshJS/mesh/blob/1cc00f9/packages/module/src/common/data/plutus.ts#L10"
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "number"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								140
							]
						}
					],
					"sources": [
						{
							"fileName": "common/data/plutus.ts",
							"line": 10,
							"character": 22,
							"url": "https://github.com/MeshJS/mesh/blob/1cc00f9/packages/module/src/common/data/plutus.ts#L10"
						}
					]
				}
			}
		},
		{
			"id": 141,
			"name": "List",
			"variant": "declaration",
			"kind": 2097152,
			"flags": {},
			"sources": [
				{
					"fileName": "common/data/plutus.ts",
					"line": 11,
					"character": 12,
					"url": "https://github.com/MeshJS/mesh/blob/1cc00f9/packages/module/src/common/data/plutus.ts#L11"
				}
			],
			"type": {
				"type": "reflection",
				"declaration": {
					"id": 142,
					"name": "__type",
					"variant": "declaration",
					"kind": 65536,
					"flags": {},
					"children": [
						{
							"id": 143,
							"name": "list",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"sources": [
								{
									"fileName": "common/data/plutus.ts",
									"line": 11,
									"character": 21,
									"url": "https://github.com/MeshJS/mesh/blob/1cc00f9/packages/module/src/common/data/plutus.ts#L11"
								}
							],
							"type": {
								"type": "array",
								"elementType": {
									"type": "reference",
									"target": 181,
									"name": "PlutusData",
									"package": "@meshsdk/core"
								}
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								143
							]
						}
					],
					"sources": [
						{
							"fileName": "common/data/plutus.ts",
							"line": 11,
							"character": 19,
							"url": "https://github.com/MeshJS/mesh/blob/1cc00f9/packages/module/src/common/data/plutus.ts#L11"
						}
					]
				}
			}
		},
		{
			"id": 521,
			"name": "MaestroSupportedNetworks",
			"variant": "declaration",
			"kind": 2097152,
			"flags": {},
			"sources": [
				{
					"fileName": "providers/maestro.provider.ts",
					"line": 24,
					"character": 12,
					"url": "https://github.com/MeshJS/mesh/blob/1cc00f9/packages/module/src/providers/maestro.provider.ts#L24"
				}
			],
			"type": {
				"type": "union",
				"types": [
					{
						"type": "literal",
						"value": "Mainnet"
					},
					{
						"type": "literal",
						"value": "Preprod"
					},
					{
						"type": "literal",
						"value": "Preview"
					}
				]
			}
		},
		{
			"id": 150,
			"name": "MaybeStakingHash",
			"variant": "declaration",
			"kind": 2097152,
			"flags": {},
			"sources": [
				{
					"fileName": "common/data/plutus.ts",
					"line": 18,
					"character": 12,
					"url": "https://github.com/MeshJS/mesh/blob/1cc00f9/packages/module/src/common/data/plutus.ts#L18"
				}
			],
			"type": {
				"type": "union",
				"types": [
					{
						"type": "reference",
						"target": 130,
						"typeArguments": [
							{
								"type": "tuple"
							}
						],
						"name": "ConStr1",
						"package": "@meshsdk/core"
					},
					{
						"type": "reference",
						"target": 128,
						"typeArguments": [
							{
								"type": "tuple",
								"elements": [
									{
										"type": "reference",
										"target": 128,
										"typeArguments": [
											{
												"type": "tuple",
												"elements": [
													{
														"type": "reference",
														"target": 128,
														"typeArguments": [
															{
																"type": "tuple",
																"elements": [
																	{
																		"type": "reference",
																		"target": 135,
																		"name": "BuiltinByteString",
																		"package": "@meshsdk/core"
																	}
																]
															}
														],
														"name": "ConStr0",
														"package": "@meshsdk/core"
													}
												]
											}
										],
										"name": "ConStr0",
										"package": "@meshsdk/core"
									}
								]
							}
						],
						"name": "ConStr0",
						"package": "@meshsdk/core"
					}
				]
			}
		},
		{
			"id": 1033,
			"name": "MeshTxBuilderBody",
			"variant": "declaration",
			"kind": 2097152,
			"flags": {},
			"sources": [
				{
					"fileName": "transaction/meshTxBuilder/type.ts",
					"line": 11,
					"character": 12,
					"url": "https://github.com/MeshJS/mesh/blob/1cc00f9/packages/module/src/transaction/meshTxBuilder/type.ts#L11"
				}
			],
			"type": {
				"type": "reflection",
				"declaration": {
					"id": 1034,
					"name": "__type",
					"variant": "declaration",
					"kind": 65536,
					"flags": {},
					"children": [
						{
							"id": 1046,
							"name": "certificates",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"sources": [
								{
									"fileName": "transaction/meshTxBuilder/type.ts",
									"line": 23,
									"character": 2,
									"url": "https://github.com/MeshJS/mesh/blob/1cc00f9/packages/module/src/transaction/meshTxBuilder/type.ts#L23"
								}
							],
							"type": {
								"type": "array",
								"elementType": {
									"type": "reference",
									"target": 1139,
									"name": "Certificate",
									"package": "@meshsdk/core"
								}
							}
						},
						{
							"id": 1043,
							"name": "changeAddress",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"sources": [
								{
									"fileName": "transaction/meshTxBuilder/type.ts",
									"line": 20,
									"character": 2,
									"url": "https://github.com/MeshJS/mesh/blob/1cc00f9/packages/module/src/transaction/meshTxBuilder/type.ts#L20"
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 1039,
							"name": "collaterals",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"sources": [
								{
									"fileName": "transaction/meshTxBuilder/type.ts",
									"line": 16,
									"character": 2,
									"url": "https://github.com/MeshJS/mesh/blob/1cc00f9/packages/module/src/transaction/meshTxBuilder/type.ts#L16"
								}
							],
							"type": {
								"type": "array",
								"elementType": {
									"type": "reference",
									"target": 1049,
									"name": "PubKeyTxIn",
									"package": "@meshsdk/core"
								}
							}
						},
						{
							"id": 1037,
							"name": "extraInputs",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"sources": [
								{
									"fileName": "transaction/meshTxBuilder/type.ts",
									"line": 14,
									"character": 2,
									"url": "https://github.com/MeshJS/mesh/blob/1cc00f9/packages/module/src/transaction/meshTxBuilder/type.ts#L14"
								}
							],
							"type": {
								"type": "array",
								"elementType": {
									"type": "reference",
									"target": {
										"sourceFileName": "src/types/UTxO.ts",
										"qualifiedName": "UTxO"
									},
									"name": "UTxO",
									"package": "@meshsdk/core"
								}
							}
						},
						{
							"id": 1035,
							"name": "inputs",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"sources": [
								{
									"fileName": "transaction/meshTxBuilder/type.ts",
									"line": 12,
									"character": 2,
									"url": "https://github.com/MeshJS/mesh/blob/1cc00f9/packages/module/src/transaction/meshTxBuilder/type.ts#L12"
								}
							],
							"type": {
								"type": "array",
								"elementType": {
									"type": "reference",
									"target": 1048,
									"name": "TxIn",
									"package": "@meshsdk/core"
								}
							}
						},
						{
							"id": 1044,
							"name": "metadata",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"sources": [
								{
									"fileName": "transaction/meshTxBuilder/type.ts",
									"line": 21,
									"character": 2,
									"url": "https://github.com/MeshJS/mesh/blob/1cc00f9/packages/module/src/transaction/meshTxBuilder/type.ts#L21"
								}
							],
							"type": {
								"type": "array",
								"elementType": {
									"type": "reference",
									"target": 1135,
									"name": "Metadata",
									"package": "@meshsdk/core"
								}
							}
						},
						{
							"id": 1042,
							"name": "mints",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"sources": [
								{
									"fileName": "transaction/meshTxBuilder/type.ts",
									"line": 19,
									"character": 2,
									"url": "https://github.com/MeshJS/mesh/blob/1cc00f9/packages/module/src/transaction/meshTxBuilder/type.ts#L19"
								}
							],
							"type": {
								"type": "array",
								"elementType": {
									"type": "reference",
									"target": 1101,
									"name": "MintItem",
									"package": "@meshsdk/core"
								}
							}
						},
						{
							"id": 1036,
							"name": "outputs",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"sources": [
								{
									"fileName": "transaction/meshTxBuilder/type.ts",
									"line": 13,
									"character": 2,
									"url": "https://github.com/MeshJS/mesh/blob/1cc00f9/packages/module/src/transaction/meshTxBuilder/type.ts#L13"
								}
							],
							"type": {
								"type": "array",
								"elementType": {
									"type": "reference",
									"target": 1092,
									"name": "Output",
									"package": "@meshsdk/core"
								}
							}
						},
						{
							"id": 1041,
							"name": "referenceInputs",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"sources": [
								{
									"fileName": "transaction/meshTxBuilder/type.ts",
									"line": 18,
									"character": 2,
									"url": "https://github.com/MeshJS/mesh/blob/1cc00f9/packages/module/src/transaction/meshTxBuilder/type.ts#L18"
								}
							],
							"type": {
								"type": "array",
								"elementType": {
									"type": "reference",
									"target": 1088,
									"name": "RefTxIn",
									"package": "@meshsdk/core"
								}
							}
						},
						{
							"id": 1040,
							"name": "requiredSignatures",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"sources": [
								{
									"fileName": "transaction/meshTxBuilder/type.ts",
									"line": 17,
									"character": 2,
									"url": "https://github.com/MeshJS/mesh/blob/1cc00f9/packages/module/src/transaction/meshTxBuilder/type.ts#L17"
								}
							],
							"type": {
								"type": "array",
								"elementType": {
									"type": "intrinsic",
									"name": "string"
								}
							}
						},
						{
							"id": 1038,
							"name": "selectionThreshold",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"sources": [
								{
									"fileName": "transaction/meshTxBuilder/type.ts",
									"line": 15,
									"character": 2,
									"url": "https://github.com/MeshJS/mesh/blob/1cc00f9/packages/module/src/transaction/meshTxBuilder/type.ts#L15"
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "number"
							}
						},
						{
							"id": 1047,
							"name": "signingKey",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"sources": [
								{
									"fileName": "transaction/meshTxBuilder/type.ts",
									"line": 25,
									"character": 2,
									"url": "https://github.com/MeshJS/mesh/blob/1cc00f9/packages/module/src/transaction/meshTxBuilder/type.ts#L25"
								}
							],
							"type": {
								"type": "array",
								"elementType": {
									"type": "intrinsic",
									"name": "string"
								}
							}
						},
						{
							"id": 1045,
							"name": "validityRange",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"sources": [
								{
									"fileName": "transaction/meshTxBuilder/type.ts",
									"line": 22,
									"character": 2,
									"url": "https://github.com/MeshJS/mesh/blob/1cc00f9/packages/module/src/transaction/meshTxBuilder/type.ts#L22"
								}
							],
							"type": {
								"type": "reference",
								"target": 1117,
								"name": "ValidityRange",
								"package": "@meshsdk/core"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								1046,
								1043,
								1039,
								1037,
								1035,
								1044,
								1042,
								1036,
								1041,
								1040,
								1038,
								1047,
								1045
							]
						}
					],
					"sources": [
						{
							"fileName": "transaction/meshTxBuilder/type.ts",
							"line": 11,
							"character": 32,
							"url": "https://github.com/MeshJS/mesh/blob/1cc00f9/packages/module/src/transaction/meshTxBuilder/type.ts#L11"
						}
					]
				}
			}
		},
		{
			"id": 1135,
			"name": "Metadata",
			"variant": "declaration",
			"kind": 2097152,
			"flags": {},
			"sources": [
				{
					"fileName": "transaction/meshTxBuilder/type.ts",
					"line": 134,
					"character": 12,
					"url": "https://github.com/MeshJS/mesh/blob/1cc00f9/packages/module/src/transaction/meshTxBuilder/type.ts#L134"
				}
			],
			"type": {
				"type": "reflection",
				"declaration": {
					"id": 1136,
					"name": "__type",
					"variant": "declaration",
					"kind": 65536,
					"flags": {},
					"children": [
						{
							"id": 1138,
							"name": "metadata",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"sources": [
								{
									"fileName": "transaction/meshTxBuilder/type.ts",
									"line": 136,
									"character": 2,
									"url": "https://github.com/MeshJS/mesh/blob/1cc00f9/packages/module/src/transaction/meshTxBuilder/type.ts#L136"
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "object"
							}
						},
						{
							"id": 1137,
							"name": "tag",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"sources": [
								{
									"fileName": "transaction/meshTxBuilder/type.ts",
									"line": 135,
									"character": 2,
									"url": "https://github.com/MeshJS/mesh/blob/1cc00f9/packages/module/src/transaction/meshTxBuilder/type.ts#L135"
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								1138,
								1137
							]
						}
					],
					"sources": [
						{
							"fileName": "transaction/meshTxBuilder/type.ts",
							"line": 134,
							"character": 23,
							"url": "https://github.com/MeshJS/mesh/blob/1cc00f9/packages/module/src/transaction/meshTxBuilder/type.ts#L134"
						}
					]
				}
			}
		},
		{
			"id": 1101,
			"name": "MintItem",
			"variant": "declaration",
			"kind": 2097152,
			"flags": {},
			"sources": [
				{
					"fileName": "transaction/meshTxBuilder/type.ts",
					"line": 87,
					"character": 12,
					"url": "https://github.com/MeshJS/mesh/blob/1cc00f9/packages/module/src/transaction/meshTxBuilder/type.ts#L87"
				}
			],
			"type": {
				"type": "reflection",
				"declaration": {
					"id": 1102,
					"name": "__type",
					"variant": "declaration",
					"kind": 65536,
					"flags": {},
					"children": [
						{
							"id": 1106,
							"name": "amount",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"sources": [
								{
									"fileName": "transaction/meshTxBuilder/type.ts",
									"line": 91,
									"character": 2,
									"url": "https://github.com/MeshJS/mesh/blob/1cc00f9/packages/module/src/transaction/meshTxBuilder/type.ts#L91"
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 1105,
							"name": "assetName",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"sources": [
								{
									"fileName": "transaction/meshTxBuilder/type.ts",
									"line": 90,
									"character": 2,
									"url": "https://github.com/MeshJS/mesh/blob/1cc00f9/packages/module/src/transaction/meshTxBuilder/type.ts#L90"
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 1104,
							"name": "policyId",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"sources": [
								{
									"fileName": "transaction/meshTxBuilder/type.ts",
									"line": 89,
									"character": 2,
									"url": "https://github.com/MeshJS/mesh/blob/1cc00f9/packages/module/src/transaction/meshTxBuilder/type.ts#L89"
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 1107,
							"name": "redeemer",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "transaction/meshTxBuilder/type.ts",
									"line": 92,
									"character": 2,
									"url": "https://github.com/MeshJS/mesh/blob/1cc00f9/packages/module/src/transaction/meshTxBuilder/type.ts#L92"
								}
							],
							"type": {
								"type": "reference",
								"target": 1131,
								"name": "Redeemer",
								"package": "@meshsdk/core"
							}
						},
						{
							"id": 1108,
							"name": "scriptSource",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "transaction/meshTxBuilder/type.ts",
									"line": 93,
									"character": 2,
									"url": "https://github.com/MeshJS/mesh/blob/1cc00f9/packages/module/src/transaction/meshTxBuilder/type.ts#L93"
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "reflection",
										"declaration": {
											"id": 1109,
											"name": "__type",
											"variant": "declaration",
											"kind": 65536,
											"flags": {},
											"children": [
												{
													"id": 1111,
													"name": "script",
													"variant": "declaration",
													"kind": 1024,
													"flags": {},
													"sources": [
														{
															"fileName": "transaction/meshTxBuilder/type.ts",
															"line": 96,
															"character": 8,
															"url": "https://github.com/MeshJS/mesh/blob/1cc00f9/packages/module/src/transaction/meshTxBuilder/type.ts#L96"
														}
													],
													"type": {
														"type": "reference",
														"target": {
															"sourceFileName": "src/types/PlutusScript.ts",
															"qualifiedName": "PlutusScript"
														},
														"name": "PlutusScript",
														"package": "@meshsdk/core"
													}
												},
												{
													"id": 1110,
													"name": "type",
													"variant": "declaration",
													"kind": 1024,
													"flags": {},
													"sources": [
														{
															"fileName": "transaction/meshTxBuilder/type.ts",
															"line": 95,
															"character": 8,
															"url": "https://github.com/MeshJS/mesh/blob/1cc00f9/packages/module/src/transaction/meshTxBuilder/type.ts#L95"
														}
													],
													"type": {
														"type": "literal",
														"value": "Provided"
													}
												}
											],
											"groups": [
												{
													"title": "Properties",
													"children": [
														1111,
														1110
													]
												}
											],
											"sources": [
												{
													"fileName": "transaction/meshTxBuilder/type.ts",
													"line": 94,
													"character": 6,
													"url": "https://github.com/MeshJS/mesh/blob/1cc00f9/packages/module/src/transaction/meshTxBuilder/type.ts#L94"
												}
											]
										}
									},
									{
										"type": "reflection",
										"declaration": {
											"id": 1112,
											"name": "__type",
											"variant": "declaration",
											"kind": 65536,
											"flags": {},
											"children": [
												{
													"id": 1114,
													"name": "txHash",
													"variant": "declaration",
													"kind": 1024,
													"flags": {},
													"sources": [
														{
															"fileName": "transaction/meshTxBuilder/type.ts",
															"line": 100,
															"character": 8,
															"url": "https://github.com/MeshJS/mesh/blob/1cc00f9/packages/module/src/transaction/meshTxBuilder/type.ts#L100"
														}
													],
													"type": {
														"type": "intrinsic",
														"name": "string"
													}
												},
												{
													"id": 1115,
													"name": "txIndex",
													"variant": "declaration",
													"kind": 1024,
													"flags": {},
													"sources": [
														{
															"fileName": "transaction/meshTxBuilder/type.ts",
															"line": 101,
															"character": 8,
															"url": "https://github.com/MeshJS/mesh/blob/1cc00f9/packages/module/src/transaction/meshTxBuilder/type.ts#L101"
														}
													],
													"type": {
														"type": "intrinsic",
														"name": "number"
													}
												},
												{
													"id": 1113,
													"name": "type",
													"variant": "declaration",
													"kind": 1024,
													"flags": {},
													"sources": [
														{
															"fileName": "transaction/meshTxBuilder/type.ts",
															"line": 99,
															"character": 8,
															"url": "https://github.com/MeshJS/mesh/blob/1cc00f9/packages/module/src/transaction/meshTxBuilder/type.ts#L99"
														}
													],
													"type": {
														"type": "literal",
														"value": "Reference Script"
													}
												},
												{
													"id": 1116,
													"name": "version",
													"variant": "declaration",
													"kind": 1024,
													"flags": {},
													"sources": [
														{
															"fileName": "transaction/meshTxBuilder/type.ts",
															"line": 102,
															"character": 8,
															"url": "https://github.com/MeshJS/mesh/blob/1cc00f9/packages/module/src/transaction/meshTxBuilder/type.ts#L102"
														}
													],
													"type": {
														"type": "reference",
														"target": {
															"sourceFileName": "src/types/PlutusScript.ts",
															"qualifiedName": "LanguageVersion"
														},
														"name": "LanguageVersion",
														"package": "@meshsdk/core"
													}
												}
											],
											"groups": [
												{
													"title": "Properties",
													"children": [
														1114,
														1115,
														1113,
														1116
													]
												}
											],
											"sources": [
												{
													"fileName": "transaction/meshTxBuilder/type.ts",
													"line": 98,
													"character": 6,
													"url": "https://github.com/MeshJS/mesh/blob/1cc00f9/packages/module/src/transaction/meshTxBuilder/type.ts#L98"
												}
											]
										}
									}
								]
							}
						},
						{
							"id": 1103,
							"name": "type",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"sources": [
								{
									"fileName": "transaction/meshTxBuilder/type.ts",
									"line": 88,
									"character": 2,
									"url": "https://github.com/MeshJS/mesh/blob/1cc00f9/packages/module/src/transaction/meshTxBuilder/type.ts#L88"
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "literal",
										"value": "Plutus"
									},
									{
										"type": "literal",
										"value": "Native"
									}
								]
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								1106,
								1105,
								1104,
								1107,
								1108,
								1103
							]
						}
					],
					"sources": [
						{
							"fileName": "transaction/meshTxBuilder/type.ts",
							"line": 87,
							"character": 23,
							"url": "https://github.com/MeshJS/mesh/blob/1cc00f9/packages/module/src/transaction/meshTxBuilder/type.ts#L87"
						}
					]
				}
			}
		},
		{
			"id": 1092,
			"name": "Output",
			"variant": "declaration",
			"kind": 2097152,
			"flags": {},
			"sources": [
				{
					"fileName": "transaction/meshTxBuilder/type.ts",
					"line": 77,
					"character": 12,
					"url": "https://github.com/MeshJS/mesh/blob/1cc00f9/packages/module/src/transaction/meshTxBuilder/type.ts#L77"
				}
			],
			"type": {
				"type": "reflection",
				"declaration": {
					"id": 1093,
					"name": "__type",
					"variant": "declaration",
					"kind": 65536,
					"flags": {},
					"children": [
						{
							"id": 1094,
							"name": "address",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"sources": [
								{
									"fileName": "transaction/meshTxBuilder/type.ts",
									"line": 78,
									"character": 2,
									"url": "https://github.com/MeshJS/mesh/blob/1cc00f9/packages/module/src/transaction/meshTxBuilder/type.ts#L78"
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 1095,
							"name": "amount",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"sources": [
								{
									"fileName": "transaction/meshTxBuilder/type.ts",
									"line": 79,
									"character": 2,
									"url": "https://github.com/MeshJS/mesh/blob/1cc00f9/packages/module/src/transaction/meshTxBuilder/type.ts#L79"
								}
							],
							"type": {
								"type": "array",
								"elementType": {
									"type": "reference",
									"target": {
										"sourceFileName": "src/types/Asset.ts",
										"qualifiedName": "Asset"
									},
									"name": "Asset",
									"package": "@meshsdk/core"
								}
							}
						},
						{
							"id": 1096,
							"name": "datum",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "transaction/meshTxBuilder/type.ts",
									"line": 80,
									"character": 2,
									"url": "https://github.com/MeshJS/mesh/blob/1cc00f9/packages/module/src/transaction/meshTxBuilder/type.ts#L80"
								}
							],
							"type": {
								"type": "reflection",
								"declaration": {
									"id": 1097,
									"name": "__type",
									"variant": "declaration",
									"kind": 65536,
									"flags": {},
									"children": [
										{
											"id": 1099,
											"name": "data",
											"variant": "declaration",
											"kind": 1024,
											"flags": {},
											"sources": [
												{
													"fileName": "transaction/meshTxBuilder/type.ts",
													"line": 82,
													"character": 4,
													"url": "https://github.com/MeshJS/mesh/blob/1cc00f9/packages/module/src/transaction/meshTxBuilder/type.ts#L82"
												}
											],
											"type": {
												"type": "reference",
												"target": 1121,
												"name": "BuilderData",
												"package": "@meshsdk/core"
											}
										},
										{
											"id": 1098,
											"name": "type",
											"variant": "declaration",
											"kind": 1024,
											"flags": {},
											"sources": [
												{
													"fileName": "transaction/meshTxBuilder/type.ts",
													"line": 81,
													"character": 4,
													"url": "https://github.com/MeshJS/mesh/blob/1cc00f9/packages/module/src/transaction/meshTxBuilder/type.ts#L81"
												}
											],
											"type": {
												"type": "union",
												"types": [
													{
														"type": "literal",
														"value": "Hash"
													},
													{
														"type": "literal",
														"value": "Inline"
													}
												]
											}
										}
									],
									"groups": [
										{
											"title": "Properties",
											"children": [
												1099,
												1098
											]
										}
									],
									"sources": [
										{
											"fileName": "transaction/meshTxBuilder/type.ts",
											"line": 80,
											"character": 10,
											"url": "https://github.com/MeshJS/mesh/blob/1cc00f9/packages/module/src/transaction/meshTxBuilder/type.ts#L80"
										}
									]
								}
							}
						},
						{
							"id": 1100,
							"name": "referenceScript",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "transaction/meshTxBuilder/type.ts",
									"line": 84,
									"character": 2,
									"url": "https://github.com/MeshJS/mesh/blob/1cc00f9/packages/module/src/transaction/meshTxBuilder/type.ts#L84"
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "src/types/PlutusScript.ts",
									"qualifiedName": "PlutusScript"
								},
								"name": "PlutusScript",
								"package": "@meshsdk/core"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								1094,
								1095,
								1096,
								1100
							]
						}
					],
					"sources": [
						{
							"fileName": "transaction/meshTxBuilder/type.ts",
							"line": 77,
							"character": 21,
							"url": "https://github.com/MeshJS/mesh/blob/1cc00f9/packages/module/src/transaction/meshTxBuilder/type.ts#L77"
						}
					]
				}
			}
		},
		{
			"id": 147,
			"name": "POSIXTime",
			"variant": "declaration",
			"kind": 2097152,
			"flags": {},
			"sources": [
				{
					"fileName": "common/data/plutus.ts",
					"line": 15,
					"character": 12,
					"url": "https://github.com/MeshJS/mesh/blob/1cc00f9/packages/module/src/common/data/plutus.ts#L15"
				}
			],
			"type": {
				"type": "reference",
				"target": 138,
				"name": "Integer",
				"package": "@meshsdk/core"
			}
		},
		{
			"id": 145,
			"name": "PaymentPubKeyHash",
			"variant": "declaration",
			"kind": 2097152,
			"flags": {},
			"sources": [
				{
					"fileName": "common/data/plutus.ts",
					"line": 13,
					"character": 12,
					"url": "https://github.com/MeshJS/mesh/blob/1cc00f9/packages/module/src/common/data/plutus.ts#L13"
				}
			],
			"type": {
				"type": "reference",
				"target": 135,
				"name": "BuiltinByteString",
				"package": "@meshsdk/core"
			}
		},
		{
			"id": 181,
			"name": "PlutusData",
			"variant": "declaration",
			"kind": 2097152,
			"flags": {},
			"sources": [
				{
					"fileName": "common/data/plutus.ts",
					"line": 33,
					"character": 12,
					"url": "https://github.com/MeshJS/mesh/blob/1cc00f9/packages/module/src/common/data/plutus.ts#L33"
				}
			],
			"type": {
				"type": "union",
				"types": [
					{
						"type": "reference",
						"target": 135,
						"name": "BuiltinByteString",
						"package": "@meshsdk/core"
					},
					{
						"type": "reference",
						"target": 138,
						"name": "Integer",
						"package": "@meshsdk/core"
					},
					{
						"type": "reference",
						"target": 150,
						"name": "MaybeStakingHash",
						"package": "@meshsdk/core"
					},
					{
						"type": "reference",
						"target": 151,
						"name": "PubKeyAddress",
						"package": "@meshsdk/core"
					},
					{
						"type": "reference",
						"target": 152,
						"name": "ScriptAddress",
						"package": "@meshsdk/core"
					},
					{
						"type": "reference",
						"target": 153,
						"name": "AssetClass",
						"package": "@meshsdk/core"
					},
					{
						"type": "reference",
						"target": 145,
						"name": "PaymentPubKeyHash",
						"package": "@meshsdk/core"
					},
					{
						"type": "reference",
						"target": 146,
						"name": "PubKeyHash",
						"package": "@meshsdk/core"
					},
					{
						"type": "reference",
						"target": 147,
						"name": "POSIXTime",
						"package": "@meshsdk/core"
					},
					{
						"type": "reference",
						"target": 154,
						"name": "TxOutRef",
						"package": "@meshsdk/core"
					}
				]
			}
		},
		{
			"id": 151,
			"name": "PubKeyAddress",
			"variant": "declaration",
			"kind": 2097152,
			"flags": {},
			"sources": [
				{
					"fileName": "common/data/plutus.ts",
					"line": 21,
					"character": 12,
					"url": "https://github.com/MeshJS/mesh/blob/1cc00f9/packages/module/src/common/data/plutus.ts#L21"
				}
			],
			"type": {
				"type": "reference",
				"target": 128,
				"typeArguments": [
					{
						"type": "tuple",
						"elements": [
							{
								"type": "reference",
								"target": 128,
								"typeArguments": [
									{
										"type": "tuple",
										"elements": [
											{
												"type": "reference",
												"target": 146,
												"name": "PubKeyHash",
												"package": "@meshsdk/core"
											}
										]
									}
								],
								"name": "ConStr0",
								"package": "@meshsdk/core"
							},
							{
								"type": "reference",
								"target": 150,
								"name": "MaybeStakingHash",
								"package": "@meshsdk/core"
							}
						]
					}
				],
				"name": "ConStr0",
				"package": "@meshsdk/core"
			}
		},
		{
			"id": 146,
			"name": "PubKeyHash",
			"variant": "declaration",
			"kind": 2097152,
			"flags": {},
			"sources": [
				{
					"fileName": "common/data/plutus.ts",
					"line": 14,
					"character": 12,
					"url": "https://github.com/MeshJS/mesh/blob/1cc00f9/packages/module/src/common/data/plutus.ts#L14"
				}
			],
			"type": {
				"type": "reference",
				"target": 145,
				"name": "PaymentPubKeyHash",
				"package": "@meshsdk/core"
			}
		},
		{
			"id": 1049,
			"name": "PubKeyTxIn",
			"variant": "declaration",
			"kind": 2097152,
			"flags": {},
			"sources": [
				{
					"fileName": "transaction/meshTxBuilder/type.ts",
					"line": 30,
					"character": 12,
					"url": "https://github.com/MeshJS/mesh/blob/1cc00f9/packages/module/src/transaction/meshTxBuilder/type.ts#L30"
				}
			],
			"type": {
				"type": "reflection",
				"declaration": {
					"id": 1050,
					"name": "__type",
					"variant": "declaration",
					"kind": 65536,
					"flags": {},
					"children": [
						{
							"id": 1052,
							"name": "txIn",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"sources": [
								{
									"fileName": "transaction/meshTxBuilder/type.ts",
									"line": 30,
									"character": 43,
									"url": "https://github.com/MeshJS/mesh/blob/1cc00f9/packages/module/src/transaction/meshTxBuilder/type.ts#L30"
								}
							],
							"type": {
								"type": "reference",
								"target": 1053,
								"name": "TxInParameter",
								"package": "@meshsdk/core"
							}
						},
						{
							"id": 1051,
							"name": "type",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"sources": [
								{
									"fileName": "transaction/meshTxBuilder/type.ts",
									"line": 30,
									"character": 27,
									"url": "https://github.com/MeshJS/mesh/blob/1cc00f9/packages/module/src/transaction/meshTxBuilder/type.ts#L30"
								}
							],
							"type": {
								"type": "literal",
								"value": "PubKey"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								1052,
								1051
							]
						}
					],
					"sources": [
						{
							"fileName": "transaction/meshTxBuilder/type.ts",
							"line": 30,
							"character": 25,
							"url": "https://github.com/MeshJS/mesh/blob/1cc00f9/packages/module/src/transaction/meshTxBuilder/type.ts#L30"
						}
					]
				}
			}
		},
		{
			"id": 1131,
			"name": "Redeemer",
			"variant": "declaration",
			"kind": 2097152,
			"flags": {},
			"sources": [
				{
					"fileName": "transaction/meshTxBuilder/type.ts",
					"line": 129,
					"character": 12,
					"url": "https://github.com/MeshJS/mesh/blob/1cc00f9/packages/module/src/transaction/meshTxBuilder/type.ts#L129"
				}
			],
			"type": {
				"type": "reflection",
				"declaration": {
					"id": 1132,
					"name": "__type",
					"variant": "declaration",
					"kind": 65536,
					"flags": {},
					"children": [
						{
							"id": 1133,
							"name": "data",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"sources": [
								{
									"fileName": "transaction/meshTxBuilder/type.ts",
									"line": 130,
									"character": 2,
									"url": "https://github.com/MeshJS/mesh/blob/1cc00f9/packages/module/src/transaction/meshTxBuilder/type.ts#L130"
								}
							],
							"type": {
								"type": "reference",
								"target": 1121,
								"name": "BuilderData",
								"package": "@meshsdk/core"
							}
						},
						{
							"id": 1134,
							"name": "exUnits",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"sources": [
								{
									"fileName": "transaction/meshTxBuilder/type.ts",
									"line": 131,
									"character": 2,
									"url": "https://github.com/MeshJS/mesh/blob/1cc00f9/packages/module/src/transaction/meshTxBuilder/type.ts#L131"
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "src/types/Action.ts",
									"qualifiedName": "Budget"
								},
								"name": "Budget",
								"package": "@meshsdk/core"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								1133,
								1134
							]
						}
					],
					"sources": [
						{
							"fileName": "transaction/meshTxBuilder/type.ts",
							"line": 129,
							"character": 23,
							"url": "https://github.com/MeshJS/mesh/blob/1cc00f9/packages/module/src/transaction/meshTxBuilder/type.ts#L129"
						}
					]
				}
			}
		},
		{
			"id": 1088,
			"name": "RefTxIn",
			"variant": "declaration",
			"kind": 2097152,
			"flags": {},
			"sources": [
				{
					"fileName": "transaction/meshTxBuilder/type.ts",
					"line": 75,
					"character": 12,
					"url": "https://github.com/MeshJS/mesh/blob/1cc00f9/packages/module/src/transaction/meshTxBuilder/type.ts#L75"
				}
			],
			"type": {
				"type": "reflection",
				"declaration": {
					"id": 1089,
					"name": "__type",
					"variant": "declaration",
					"kind": 65536,
					"flags": {},
					"children": [
						{
							"id": 1090,
							"name": "txHash",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"sources": [
								{
									"fileName": "transaction/meshTxBuilder/type.ts",
									"line": 75,
									"character": 24,
									"url": "https://github.com/MeshJS/mesh/blob/1cc00f9/packages/module/src/transaction/meshTxBuilder/type.ts#L75"
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 1091,
							"name": "txIndex",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"sources": [
								{
									"fileName": "transaction/meshTxBuilder/type.ts",
									"line": 75,
									"character": 40,
									"url": "https://github.com/MeshJS/mesh/blob/1cc00f9/packages/module/src/transaction/meshTxBuilder/type.ts#L75"
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "number"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								1090,
								1091
							]
						}
					],
					"sources": [
						{
							"fileName": "transaction/meshTxBuilder/type.ts",
							"line": 75,
							"character": 22,
							"url": "https://github.com/MeshJS/mesh/blob/1cc00f9/packages/module/src/transaction/meshTxBuilder/type.ts#L75"
						}
					]
				}
			}
		},
		{
			"id": 1157,
			"name": "RequiredWith",
			"variant": "declaration",
			"kind": 2097152,
			"flags": {},
			"sources": [
				{
					"fileName": "transaction/meshTxBuilder/type.ts",
					"line": 148,
					"character": 12,
					"url": "https://github.com/MeshJS/mesh/blob/1cc00f9/packages/module/src/transaction/meshTxBuilder/type.ts#L148"
				}
			],
			"typeParameters": [
				{
					"id": 1158,
					"name": "T",
					"variant": "typeParam",
					"kind": 131072,
					"flags": {}
				},
				{
					"id": 1159,
					"name": "K",
					"variant": "typeParam",
					"kind": 131072,
					"flags": {},
					"type": {
						"type": "typeOperator",
						"operator": "keyof",
						"target": {
							"type": "reference",
							"target": 1158,
							"name": "T",
							"package": "@meshsdk/core",
							"refersToTypeParameter": true
						}
					}
				}
			],
			"type": {
				"type": "intersection",
				"types": [
					{
						"type": "reference",
						"target": {
							"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
							"qualifiedName": "Required"
						},
						"typeArguments": [
							{
								"type": "reference",
								"target": 1158,
								"name": "T",
								"package": "@meshsdk/core",
								"refersToTypeParameter": true
							}
						],
						"name": "Required",
						"package": "typescript"
					},
					{
						"type": "mapped",
						"parameter": "P",
						"parameterType": {
							"type": "reference",
							"target": 1159,
							"name": "K",
							"package": "@meshsdk/core",
							"refersToTypeParameter": true
						},
						"templateType": {
							"type": "reference",
							"target": {
								"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
								"qualifiedName": "Required"
							},
							"typeArguments": [
								{
									"type": "indexedAccess",
									"indexType": {
										"type": "reference",
										"target": {
											"sourceFileName": "src/transaction/meshTxBuilder/type.ts",
											"qualifiedName": "P"
										},
										"name": "P",
										"package": "@meshsdk/core",
										"refersToTypeParameter": true
									},
									"objectType": {
										"type": "reference",
										"target": 1158,
										"name": "T",
										"package": "@meshsdk/core",
										"refersToTypeParameter": true
									}
								}
							],
							"name": "Required",
							"package": "typescript"
						}
					}
				]
			}
		},
		{
			"id": 152,
			"name": "ScriptAddress",
			"variant": "declaration",
			"kind": 2097152,
			"flags": {},
			"sources": [
				{
					"fileName": "common/data/plutus.ts",
					"line": 22,
					"character": 12,
					"url": "https://github.com/MeshJS/mesh/blob/1cc00f9/packages/module/src/common/data/plutus.ts#L22"
				}
			],
			"type": {
				"type": "reference",
				"target": 128,
				"typeArguments": [
					{
						"type": "tuple",
						"elements": [
							{
								"type": "reference",
								"target": 130,
								"typeArguments": [
									{
										"type": "tuple",
										"elements": [
											{
												"type": "reference",
												"target": 144,
												"name": "ValidatorHash",
												"package": "@meshsdk/core"
											}
										]
									}
								],
								"name": "ConStr1",
								"package": "@meshsdk/core"
							},
							{
								"type": "reference",
								"target": 150,
								"name": "MaybeStakingHash",
								"package": "@meshsdk/core"
							}
						]
					}
				],
				"name": "ConStr0",
				"package": "@meshsdk/core"
			}
		},
		{
			"id": 1082,
			"name": "ScriptSourceInfo",
			"variant": "declaration",
			"kind": 2097152,
			"flags": {},
			"sources": [
				{
					"fileName": "transaction/meshTxBuilder/type.ts",
					"line": 68,
					"character": 12,
					"url": "https://github.com/MeshJS/mesh/blob/1cc00f9/packages/module/src/transaction/meshTxBuilder/type.ts#L68"
				}
			],
			"type": {
				"type": "reflection",
				"declaration": {
					"id": 1083,
					"name": "__type",
					"variant": "declaration",
					"kind": 65536,
					"flags": {},
					"children": [
						{
							"id": 1086,
							"name": "spendingScriptHash",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "transaction/meshTxBuilder/type.ts",
									"line": 71,
									"character": 2,
									"url": "https://github.com/MeshJS/mesh/blob/1cc00f9/packages/module/src/transaction/meshTxBuilder/type.ts#L71"
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 1084,
							"name": "txHash",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"sources": [
								{
									"fileName": "transaction/meshTxBuilder/type.ts",
									"line": 69,
									"character": 2,
									"url": "https://github.com/MeshJS/mesh/blob/1cc00f9/packages/module/src/transaction/meshTxBuilder/type.ts#L69"
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 1085,
							"name": "txIndex",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"sources": [
								{
									"fileName": "transaction/meshTxBuilder/type.ts",
									"line": 70,
									"character": 2,
									"url": "https://github.com/MeshJS/mesh/blob/1cc00f9/packages/module/src/transaction/meshTxBuilder/type.ts#L70"
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "number"
							}
						},
						{
							"id": 1087,
							"name": "version",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"sources": [
								{
									"fileName": "transaction/meshTxBuilder/type.ts",
									"line": 72,
									"character": 2,
									"url": "https://github.com/MeshJS/mesh/blob/1cc00f9/packages/module/src/transaction/meshTxBuilder/type.ts#L72"
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "src/types/PlutusScript.ts",
									"qualifiedName": "LanguageVersion"
								},
								"name": "LanguageVersion",
								"package": "@meshsdk/core"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								1086,
								1084,
								1085,
								1087
							]
						}
					],
					"sources": [
						{
							"fileName": "transaction/meshTxBuilder/type.ts",
							"line": 68,
							"character": 31,
							"url": "https://github.com/MeshJS/mesh/blob/1cc00f9/packages/module/src/transaction/meshTxBuilder/type.ts#L68"
						}
					]
				}
			}
		},
		{
			"id": 1059,
			"name": "ScriptTxIn",
			"variant": "declaration",
			"kind": 2097152,
			"flags": {},
			"sources": [
				{
					"fileName": "transaction/meshTxBuilder/type.ts",
					"line": 39,
					"character": 12,
					"url": "https://github.com/MeshJS/mesh/blob/1cc00f9/packages/module/src/transaction/meshTxBuilder/type.ts#L39"
				}
			],
			"type": {
				"type": "reflection",
				"declaration": {
					"id": 1060,
					"name": "__type",
					"variant": "declaration",
					"kind": 65536,
					"flags": {},
					"children": [
						{
							"id": 1063,
							"name": "scriptTxIn",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"sources": [
								{
									"fileName": "transaction/meshTxBuilder/type.ts",
									"line": 42,
									"character": 2,
									"url": "https://github.com/MeshJS/mesh/blob/1cc00f9/packages/module/src/transaction/meshTxBuilder/type.ts#L42"
								}
							],
							"type": {
								"type": "reference",
								"target": 1064,
								"name": "ScriptTxInParameter",
								"package": "@meshsdk/core"
							}
						},
						{
							"id": 1062,
							"name": "txIn",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"sources": [
								{
									"fileName": "transaction/meshTxBuilder/type.ts",
									"line": 41,
									"character": 2,
									"url": "https://github.com/MeshJS/mesh/blob/1cc00f9/packages/module/src/transaction/meshTxBuilder/type.ts#L41"
								}
							],
							"type": {
								"type": "reference",
								"target": 1053,
								"name": "TxInParameter",
								"package": "@meshsdk/core"
							}
						},
						{
							"id": 1061,
							"name": "type",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"sources": [
								{
									"fileName": "transaction/meshTxBuilder/type.ts",
									"line": 40,
									"character": 2,
									"url": "https://github.com/MeshJS/mesh/blob/1cc00f9/packages/module/src/transaction/meshTxBuilder/type.ts#L40"
								}
							],
							"type": {
								"type": "literal",
								"value": "Script"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								1063,
								1062,
								1061
							]
						}
					],
					"sources": [
						{
							"fileName": "transaction/meshTxBuilder/type.ts",
							"line": 39,
							"character": 25,
							"url": "https://github.com/MeshJS/mesh/blob/1cc00f9/packages/module/src/transaction/meshTxBuilder/type.ts#L39"
						}
					]
				}
			}
		},
		{
			"id": 1064,
			"name": "ScriptTxInParameter",
			"variant": "declaration",
			"kind": 2097152,
			"flags": {},
			"sources": [
				{
					"fileName": "transaction/meshTxBuilder/type.ts",
					"line": 45,
					"character": 12,
					"url": "https://github.com/MeshJS/mesh/blob/1cc00f9/packages/module/src/transaction/meshTxBuilder/type.ts#L45"
				}
			],
			"type": {
				"type": "reflection",
				"declaration": {
					"id": 1065,
					"name": "__type",
					"variant": "declaration",
					"kind": 65536,
					"flags": {},
					"children": [
						{
							"id": 1073,
							"name": "datumSource",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "transaction/meshTxBuilder/type.ts",
									"line": 55,
									"character": 2,
									"url": "https://github.com/MeshJS/mesh/blob/1cc00f9/packages/module/src/transaction/meshTxBuilder/type.ts#L55"
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "reflection",
										"declaration": {
											"id": 1074,
											"name": "__type",
											"variant": "declaration",
											"kind": 65536,
											"flags": {},
											"children": [
												{
													"id": 1076,
													"name": "data",
													"variant": "declaration",
													"kind": 1024,
													"flags": {},
													"sources": [
														{
															"fileName": "transaction/meshTxBuilder/type.ts",
															"line": 58,
															"character": 8,
															"url": "https://github.com/MeshJS/mesh/blob/1cc00f9/packages/module/src/transaction/meshTxBuilder/type.ts#L58"
														}
													],
													"type": {
														"type": "reference",
														"target": 1121,
														"name": "BuilderData",
														"package": "@meshsdk/core"
													}
												},
												{
													"id": 1075,
													"name": "type",
													"variant": "declaration",
													"kind": 1024,
													"flags": {},
													"sources": [
														{
															"fileName": "transaction/meshTxBuilder/type.ts",
															"line": 57,
															"character": 8,
															"url": "https://github.com/MeshJS/mesh/blob/1cc00f9/packages/module/src/transaction/meshTxBuilder/type.ts#L57"
														}
													],
													"type": {
														"type": "literal",
														"value": "Provided"
													}
												}
											],
											"groups": [
												{
													"title": "Properties",
													"children": [
														1076,
														1075
													]
												}
											],
											"sources": [
												{
													"fileName": "transaction/meshTxBuilder/type.ts",
													"line": 56,
													"character": 6,
													"url": "https://github.com/MeshJS/mesh/blob/1cc00f9/packages/module/src/transaction/meshTxBuilder/type.ts#L56"
												}
											]
										}
									},
									{
										"type": "reflection",
										"declaration": {
											"id": 1077,
											"name": "__type",
											"variant": "declaration",
											"kind": 65536,
											"flags": {},
											"children": [
												{
													"id": 1079,
													"name": "txHash",
													"variant": "declaration",
													"kind": 1024,
													"flags": {},
													"sources": [
														{
															"fileName": "transaction/meshTxBuilder/type.ts",
															"line": 62,
															"character": 8,
															"url": "https://github.com/MeshJS/mesh/blob/1cc00f9/packages/module/src/transaction/meshTxBuilder/type.ts#L62"
														}
													],
													"type": {
														"type": "intrinsic",
														"name": "string"
													}
												},
												{
													"id": 1080,
													"name": "txIndex",
													"variant": "declaration",
													"kind": 1024,
													"flags": {},
													"sources": [
														{
															"fileName": "transaction/meshTxBuilder/type.ts",
															"line": 63,
															"character": 8,
															"url": "https://github.com/MeshJS/mesh/blob/1cc00f9/packages/module/src/transaction/meshTxBuilder/type.ts#L63"
														}
													],
													"type": {
														"type": "intrinsic",
														"name": "number"
													}
												},
												{
													"id": 1078,
													"name": "type",
													"variant": "declaration",
													"kind": 1024,
													"flags": {},
													"sources": [
														{
															"fileName": "transaction/meshTxBuilder/type.ts",
															"line": 61,
															"character": 8,
															"url": "https://github.com/MeshJS/mesh/blob/1cc00f9/packages/module/src/transaction/meshTxBuilder/type.ts#L61"
														}
													],
													"type": {
														"type": "literal",
														"value": "Inline"
													}
												}
											],
											"groups": [
												{
													"title": "Properties",
													"children": [
														1079,
														1080,
														1078
													]
												}
											],
											"sources": [
												{
													"fileName": "transaction/meshTxBuilder/type.ts",
													"line": 60,
													"character": 6,
													"url": "https://github.com/MeshJS/mesh/blob/1cc00f9/packages/module/src/transaction/meshTxBuilder/type.ts#L60"
												}
											]
										}
									}
								]
							}
						},
						{
							"id": 1081,
							"name": "redeemer",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "transaction/meshTxBuilder/type.ts",
									"line": 65,
									"character": 2,
									"url": "https://github.com/MeshJS/mesh/blob/1cc00f9/packages/module/src/transaction/meshTxBuilder/type.ts#L65"
								}
							],
							"type": {
								"type": "reference",
								"target": 1131,
								"name": "Redeemer",
								"package": "@meshsdk/core"
							}
						},
						{
							"id": 1066,
							"name": "scriptSource",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "transaction/meshTxBuilder/type.ts",
									"line": 46,
									"character": 2,
									"url": "https://github.com/MeshJS/mesh/blob/1cc00f9/packages/module/src/transaction/meshTxBuilder/type.ts#L46"
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "reflection",
										"declaration": {
											"id": 1067,
											"name": "__type",
											"variant": "declaration",
											"kind": 65536,
											"flags": {},
											"children": [
												{
													"id": 1069,
													"name": "script",
													"variant": "declaration",
													"kind": 1024,
													"flags": {},
													"sources": [
														{
															"fileName": "transaction/meshTxBuilder/type.ts",
															"line": 49,
															"character": 8,
															"url": "https://github.com/MeshJS/mesh/blob/1cc00f9/packages/module/src/transaction/meshTxBuilder/type.ts#L49"
														}
													],
													"type": {
														"type": "reference",
														"target": {
															"sourceFileName": "src/types/PlutusScript.ts",
															"qualifiedName": "PlutusScript"
														},
														"name": "PlutusScript",
														"package": "@meshsdk/core"
													}
												},
												{
													"id": 1068,
													"name": "type",
													"variant": "declaration",
													"kind": 1024,
													"flags": {},
													"sources": [
														{
															"fileName": "transaction/meshTxBuilder/type.ts",
															"line": 48,
															"character": 8,
															"url": "https://github.com/MeshJS/mesh/blob/1cc00f9/packages/module/src/transaction/meshTxBuilder/type.ts#L48"
														}
													],
													"type": {
														"type": "literal",
														"value": "Provided"
													}
												}
											],
											"groups": [
												{
													"title": "Properties",
													"children": [
														1069,
														1068
													]
												}
											],
											"sources": [
												{
													"fileName": "transaction/meshTxBuilder/type.ts",
													"line": 47,
													"character": 6,
													"url": "https://github.com/MeshJS/mesh/blob/1cc00f9/packages/module/src/transaction/meshTxBuilder/type.ts#L47"
												}
											]
										}
									},
									{
										"type": "reflection",
										"declaration": {
											"id": 1070,
											"name": "__type",
											"variant": "declaration",
											"kind": 65536,
											"flags": {},
											"children": [
												{
													"id": 1072,
													"name": "txInInfo",
													"variant": "declaration",
													"kind": 1024,
													"flags": {},
													"sources": [
														{
															"fileName": "transaction/meshTxBuilder/type.ts",
															"line": 53,
															"character": 8,
															"url": "https://github.com/MeshJS/mesh/blob/1cc00f9/packages/module/src/transaction/meshTxBuilder/type.ts#L53"
														}
													],
													"type": {
														"type": "reference",
														"target": 1082,
														"name": "ScriptSourceInfo",
														"package": "@meshsdk/core"
													}
												},
												{
													"id": 1071,
													"name": "type",
													"variant": "declaration",
													"kind": 1024,
													"flags": {},
													"sources": [
														{
															"fileName": "transaction/meshTxBuilder/type.ts",
															"line": 52,
															"character": 8,
															"url": "https://github.com/MeshJS/mesh/blob/1cc00f9/packages/module/src/transaction/meshTxBuilder/type.ts#L52"
														}
													],
													"type": {
														"type": "literal",
														"value": "Inline"
													}
												}
											],
											"groups": [
												{
													"title": "Properties",
													"children": [
														1072,
														1071
													]
												}
											],
											"sources": [
												{
													"fileName": "transaction/meshTxBuilder/type.ts",
													"line": 51,
													"character": 6,
													"url": "https://github.com/MeshJS/mesh/blob/1cc00f9/packages/module/src/transaction/meshTxBuilder/type.ts#L51"
												}
											]
										}
									}
								]
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								1073,
								1081,
								1066
							]
						}
					],
					"sources": [
						{
							"fileName": "transaction/meshTxBuilder/type.ts",
							"line": 45,
							"character": 34,
							"url": "https://github.com/MeshJS/mesh/blob/1cc00f9/packages/module/src/transaction/meshTxBuilder/type.ts#L45"
						}
					]
				}
			}
		},
		{
			"id": 149,
			"name": "TokenName",
			"variant": "declaration",
			"kind": 2097152,
			"flags": {},
			"sources": [
				{
					"fileName": "common/data/plutus.ts",
					"line": 17,
					"character": 12,
					"url": "https://github.com/MeshJS/mesh/blob/1cc00f9/packages/module/src/common/data/plutus.ts#L17"
				}
			],
			"type": {
				"type": "reference",
				"target": 135,
				"name": "BuiltinByteString",
				"package": "@meshsdk/core"
			}
		},
		{
			"id": 177,
			"name": "Tuple",
			"variant": "declaration",
			"kind": 2097152,
			"flags": {},
			"sources": [
				{
					"fileName": "common/data/plutus.ts",
					"line": 31,
					"character": 12,
					"url": "https://github.com/MeshJS/mesh/blob/1cc00f9/packages/module/src/common/data/plutus.ts#L31"
				}
			],
			"typeParameters": [
				{
					"id": 178,
					"name": "K",
					"variant": "typeParam",
					"kind": 131072,
					"flags": {}
				},
				{
					"id": 179,
					"name": "V",
					"variant": "typeParam",
					"kind": 131072,
					"flags": {}
				}
			],
			"type": {
				"type": "reference",
				"target": 128,
				"typeArguments": [
					{
						"type": "tuple",
						"elements": [
							{
								"type": "reference",
								"target": 178,
								"name": "K",
								"package": "@meshsdk/core",
								"refersToTypeParameter": true
							},
							{
								"type": "reference",
								"target": 179,
								"name": "V",
								"package": "@meshsdk/core",
								"refersToTypeParameter": true
							}
						]
					}
				],
				"name": "ConStr0",
				"package": "@meshsdk/core"
			}
		},
		{
			"id": 1048,
			"name": "TxIn",
			"variant": "declaration",
			"kind": 2097152,
			"flags": {},
			"sources": [
				{
					"fileName": "transaction/meshTxBuilder/type.ts",
					"line": 28,
					"character": 12,
					"url": "https://github.com/MeshJS/mesh/blob/1cc00f9/packages/module/src/transaction/meshTxBuilder/type.ts#L28"
				}
			],
			"type": {
				"type": "union",
				"types": [
					{
						"type": "reference",
						"target": 1049,
						"name": "PubKeyTxIn",
						"package": "@meshsdk/core"
					},
					{
						"type": "reference",
						"target": 1059,
						"name": "ScriptTxIn",
						"package": "@meshsdk/core"
					}
				]
			}
		},
		{
			"id": 1053,
			"name": "TxInParameter",
			"variant": "declaration",
			"kind": 2097152,
			"flags": {},
			"sources": [
				{
					"fileName": "transaction/meshTxBuilder/type.ts",
					"line": 32,
					"character": 12,
					"url": "https://github.com/MeshJS/mesh/blob/1cc00f9/packages/module/src/transaction/meshTxBuilder/type.ts#L32"
				}
			],
			"type": {
				"type": "reflection",
				"declaration": {
					"id": 1054,
					"name": "__type",
					"variant": "declaration",
					"kind": 65536,
					"flags": {},
					"children": [
						{
							"id": 1058,
							"name": "address",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "transaction/meshTxBuilder/type.ts",
									"line": 36,
									"character": 2,
									"url": "https://github.com/MeshJS/mesh/blob/1cc00f9/packages/module/src/transaction/meshTxBuilder/type.ts#L36"
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 1057,
							"name": "amount",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "transaction/meshTxBuilder/type.ts",
									"line": 35,
									"character": 2,
									"url": "https://github.com/MeshJS/mesh/blob/1cc00f9/packages/module/src/transaction/meshTxBuilder/type.ts#L35"
								}
							],
							"type": {
								"type": "array",
								"elementType": {
									"type": "reference",
									"target": {
										"sourceFileName": "src/types/Asset.ts",
										"qualifiedName": "Asset"
									},
									"name": "Asset",
									"package": "@meshsdk/core"
								}
							}
						},
						{
							"id": 1055,
							"name": "txHash",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"sources": [
								{
									"fileName": "transaction/meshTxBuilder/type.ts",
									"line": 33,
									"character": 2,
									"url": "https://github.com/MeshJS/mesh/blob/1cc00f9/packages/module/src/transaction/meshTxBuilder/type.ts#L33"
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 1056,
							"name": "txIndex",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"sources": [
								{
									"fileName": "transaction/meshTxBuilder/type.ts",
									"line": 34,
									"character": 2,
									"url": "https://github.com/MeshJS/mesh/blob/1cc00f9/packages/module/src/transaction/meshTxBuilder/type.ts#L34"
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "number"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								1058,
								1057,
								1055,
								1056
							]
						}
					],
					"sources": [
						{
							"fileName": "transaction/meshTxBuilder/type.ts",
							"line": 32,
							"character": 28,
							"url": "https://github.com/MeshJS/mesh/blob/1cc00f9/packages/module/src/transaction/meshTxBuilder/type.ts#L32"
						}
					]
				}
			}
		},
		{
			"id": 154,
			"name": "TxOutRef",
			"variant": "declaration",
			"kind": 2097152,
			"flags": {},
			"sources": [
				{
					"fileName": "common/data/plutus.ts",
					"line": 26,
					"character": 12,
					"url": "https://github.com/MeshJS/mesh/blob/1cc00f9/packages/module/src/common/data/plutus.ts#L26"
				}
			],
			"type": {
				"type": "reference",
				"target": 128,
				"typeArguments": [
					{
						"type": "tuple",
						"elements": [
							{
								"type": "reference",
								"target": 128,
								"typeArguments": [
									{
										"type": "tuple",
										"elements": [
											{
												"type": "reference",
												"target": 135,
												"name": "BuiltinByteString",
												"package": "@meshsdk/core"
											}
										]
									}
								],
								"name": "ConStr0",
								"package": "@meshsdk/core"
							},
							{
								"type": "reference",
								"target": 138,
								"name": "Integer",
								"package": "@meshsdk/core"
							}
						]
					}
				],
				"name": "ConStr0",
				"package": "@meshsdk/core"
			}
		},
		{
			"id": 144,
			"name": "ValidatorHash",
			"variant": "declaration",
			"kind": 2097152,
			"flags": {},
			"sources": [
				{
					"fileName": "common/data/plutus.ts",
					"line": 12,
					"character": 12,
					"url": "https://github.com/MeshJS/mesh/blob/1cc00f9/packages/module/src/common/data/plutus.ts#L12"
				}
			],
			"type": {
				"type": "reference",
				"target": 135,
				"name": "BuiltinByteString",
				"package": "@meshsdk/core"
			}
		},
		{
			"id": 1117,
			"name": "ValidityRange",
			"variant": "declaration",
			"kind": 2097152,
			"flags": {},
			"sources": [
				{
					"fileName": "transaction/meshTxBuilder/type.ts",
					"line": 108,
					"character": 12,
					"url": "https://github.com/MeshJS/mesh/blob/1cc00f9/packages/module/src/transaction/meshTxBuilder/type.ts#L108"
				}
			],
			"type": {
				"type": "reflection",
				"declaration": {
					"id": 1118,
					"name": "__type",
					"variant": "declaration",
					"kind": 65536,
					"flags": {},
					"children": [
						{
							"id": 1119,
							"name": "invalidBefore",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "transaction/meshTxBuilder/type.ts",
									"line": 109,
									"character": 2,
									"url": "https://github.com/MeshJS/mesh/blob/1cc00f9/packages/module/src/transaction/meshTxBuilder/type.ts#L109"
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "number"
							}
						},
						{
							"id": 1120,
							"name": "invalidHereafter",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "transaction/meshTxBuilder/type.ts",
									"line": 110,
									"character": 2,
									"url": "https://github.com/MeshJS/mesh/blob/1cc00f9/packages/module/src/transaction/meshTxBuilder/type.ts#L110"
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "number"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								1119,
								1120
							]
						}
					],
					"sources": [
						{
							"fileName": "transaction/meshTxBuilder/type.ts",
							"line": 108,
							"character": 28,
							"url": "https://github.com/MeshJS/mesh/blob/1cc00f9/packages/module/src/transaction/meshTxBuilder/type.ts#L108"
						}
					]
				}
			}
		},
		{
			"id": 180,
			"name": "Value",
			"variant": "declaration",
			"kind": 2097152,
			"flags": {},
			"sources": [
				{
					"fileName": "common/data/plutus.ts",
					"line": 32,
					"character": 12,
					"url": "https://github.com/MeshJS/mesh/blob/1cc00f9/packages/module/src/common/data/plutus.ts#L32"
				}
			],
			"type": {
				"type": "reference",
				"target": 167,
				"typeArguments": [
					{
						"type": "reference",
						"target": 148,
						"name": "CurrencySymbol",
						"package": "@meshsdk/core"
					},
					{
						"type": "reference",
						"target": 167,
						"typeArguments": [
							{
								"type": "reference",
								"target": 149,
								"name": "TokenName",
								"package": "@meshsdk/core"
							},
							{
								"type": "reference",
								"target": 138,
								"name": "Integer",
								"package": "@meshsdk/core"
							}
						],
						"name": "AssocMap",
						"package": "@meshsdk/core"
					}
				],
				"name": "AssocMap",
				"package": "@meshsdk/core"
			}
		},
		{
			"id": 229,
			"name": "assetClass",
			"variant": "declaration",
			"kind": 64,
			"flags": {},
			"sources": [
				{
					"fileName": "common/data/plutus.ts",
					"line": 86,
					"character": 13,
					"url": "https://github.com/MeshJS/mesh/blob/1cc00f9/packages/module/src/common/data/plutus.ts#L86"
				}
			],
			"signatures": [
				{
					"id": 230,
					"name": "assetClass",
					"variant": "signature",
					"kind": 4096,
					"flags": {},
					"sources": [
						{
							"fileName": "common/data/plutus.ts",
							"line": 86,
							"character": 26,
							"url": "https://github.com/MeshJS/mesh/blob/1cc00f9/packages/module/src/common/data/plutus.ts#L86"
						}
					],
					"parameters": [
						{
							"id": 231,
							"name": "policyId",
							"variant": "param",
							"kind": 32768,
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 232,
							"name": "assetName",
							"variant": "param",
							"kind": 32768,
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						}
					],
					"type": {
						"type": "reference",
						"target": 153,
						"name": "AssetClass",
						"package": "@meshsdk/core"
					}
				}
			]
		},
		{
			"id": 246,
			"name": "assocMap",
			"variant": "declaration",
			"kind": 64,
			"flags": {},
			"sources": [
				{
					"fileName": "common/data/plutus.ts",
					"line": 96,
					"character": 13,
					"url": "https://github.com/MeshJS/mesh/blob/1cc00f9/packages/module/src/common/data/plutus.ts#L96"
				}
			],
			"signatures": [
				{
					"id": 247,
					"name": "assocMap",
					"variant": "signature",
					"kind": 4096,
					"flags": {},
					"sources": [
						{
							"fileName": "common/data/plutus.ts",
							"line": 96,
							"character": 24,
							"url": "https://github.com/MeshJS/mesh/blob/1cc00f9/packages/module/src/common/data/plutus.ts#L96"
						}
					],
					"typeParameter": [
						{
							"id": 248,
							"name": "K",
							"variant": "typeParam",
							"kind": 131072,
							"flags": {}
						},
						{
							"id": 249,
							"name": "V",
							"variant": "typeParam",
							"kind": 131072,
							"flags": {}
						}
					],
					"parameters": [
						{
							"id": 250,
							"name": "itemsMap",
							"variant": "param",
							"kind": 32768,
							"flags": {},
							"type": {
								"type": "array",
								"elementType": {
									"type": "tuple",
									"elements": [
										{
											"type": "reference",
											"target": 248,
											"name": "K",
											"package": "@meshsdk/core",
											"refersToTypeParameter": true
										},
										{
											"type": "reference",
											"target": 249,
											"name": "V",
											"package": "@meshsdk/core",
											"refersToTypeParameter": true
										}
									]
								}
							}
						}
					],
					"type": {
						"type": "reference",
						"target": 167,
						"typeArguments": [
							{
								"type": "reference",
								"target": 248,
								"name": "K",
								"package": "@meshsdk/core",
								"refersToTypeParameter": true
							},
							{
								"type": "reference",
								"target": 249,
								"name": "V",
								"package": "@meshsdk/core",
								"refersToTypeParameter": true
							}
						],
						"name": "AssocMap",
						"package": "@meshsdk/core"
					}
				}
			]
		},
		{
			"id": 200,
			"name": "bool",
			"variant": "declaration",
			"kind": 64,
			"flags": {},
			"sources": [
				{
					"fileName": "common/data/plutus.ts",
					"line": 52,
					"character": 13,
					"url": "https://github.com/MeshJS/mesh/blob/1cc00f9/packages/module/src/common/data/plutus.ts#L52"
				}
			],
			"signatures": [
				{
					"id": 201,
					"name": "bool",
					"variant": "signature",
					"kind": 4096,
					"flags": {},
					"sources": [
						{
							"fileName": "common/data/plutus.ts",
							"line": 52,
							"character": 20,
							"url": "https://github.com/MeshJS/mesh/blob/1cc00f9/packages/module/src/common/data/plutus.ts#L52"
						}
					],
					"parameters": [
						{
							"id": 202,
							"name": "b",
							"variant": "param",
							"kind": 32768,
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							}
						}
					],
					"type": {
						"type": "reference",
						"target": 134,
						"name": "Bool",
						"package": "@meshsdk/core"
					}
				}
			]
		},
		{
			"id": 203,
			"name": "builtinByteString",
			"variant": "declaration",
			"kind": 64,
			"flags": {},
			"sources": [
				{
					"fileName": "common/data/plutus.ts",
					"line": 54,
					"character": 13,
					"url": "https://github.com/MeshJS/mesh/blob/1cc00f9/packages/module/src/common/data/plutus.ts#L54"
				}
			],
			"signatures": [
				{
					"id": 204,
					"name": "builtinByteString",
					"variant": "signature",
					"kind": 4096,
					"flags": {},
					"sources": [
						{
							"fileName": "common/data/plutus.ts",
							"line": 54,
							"character": 33,
							"url": "https://github.com/MeshJS/mesh/blob/1cc00f9/packages/module/src/common/data/plutus.ts#L54"
						}
					],
					"parameters": [
						{
							"id": 205,
							"name": "bytes",
							"variant": "param",
							"kind": 32768,
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						}
					],
					"type": {
						"type": "reference",
						"target": 135,
						"name": "BuiltinByteString",
						"package": "@meshsdk/core"
					}
				}
			]
		},
		{
			"id": 8,
			"name": "checkSignature",
			"variant": "declaration",
			"kind": 64,
			"flags": {},
			"sources": [
				{
					"fileName": "core/CIP8.ts",
					"line": 40,
					"character": 13,
					"url": "https://github.com/MeshJS/mesh/blob/1cc00f9/packages/module/src/core/CIP8.ts#L40"
				}
			],
			"signatures": [
				{
					"id": 9,
					"name": "checkSignature",
					"variant": "signature",
					"kind": 4096,
					"flags": {},
					"sources": [
						{
							"fileName": "core/CIP8.ts",
							"line": 40,
							"character": 30,
							"url": "https://github.com/MeshJS/mesh/blob/1cc00f9/packages/module/src/core/CIP8.ts#L40"
						}
					],
					"parameters": [
						{
							"id": 10,
							"name": "message",
							"variant": "param",
							"kind": 32768,
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 11,
							"name": "signer",
							"variant": "param",
							"kind": 32768,
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 12,
							"name": "__namedParameters",
							"variant": "param",
							"kind": 32768,
							"flags": {},
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "src/types/DataSignature.ts",
									"qualifiedName": "DataSignature"
								},
								"name": "DataSignature",
								"package": "@meshsdk/core"
							}
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "boolean"
					}
				}
			]
		},
		{
			"id": 182,
			"name": "conStr",
			"variant": "declaration",
			"kind": 64,
			"flags": {},
			"sources": [
				{
					"fileName": "common/data/plutus.ts",
					"line": 45,
					"character": 13,
					"url": "https://github.com/MeshJS/mesh/blob/1cc00f9/packages/module/src/common/data/plutus.ts#L45"
				}
			],
			"signatures": [
				{
					"id": 183,
					"name": "conStr",
					"variant": "signature",
					"kind": 4096,
					"flags": {},
					"sources": [
						{
							"fileName": "common/data/plutus.ts",
							"line": 45,
							"character": 22,
							"url": "https://github.com/MeshJS/mesh/blob/1cc00f9/packages/module/src/common/data/plutus.ts#L45"
						}
					],
					"typeParameter": [
						{
							"id": 184,
							"name": "N",
							"variant": "typeParam",
							"kind": 131072,
							"flags": {}
						},
						{
							"id": 185,
							"name": "T",
							"variant": "typeParam",
							"kind": 131072,
							"flags": {}
						}
					],
					"parameters": [
						{
							"id": 186,
							"name": "constructor",
							"variant": "param",
							"kind": 32768,
							"flags": {},
							"type": {
								"type": "reference",
								"target": 184,
								"name": "N",
								"package": "@meshsdk/core",
								"refersToTypeParameter": true
							}
						},
						{
							"id": 187,
							"name": "fields",
							"variant": "param",
							"kind": 32768,
							"flags": {},
							"type": {
								"type": "reference",
								"target": 185,
								"name": "T",
								"package": "@meshsdk/core",
								"refersToTypeParameter": true
							}
						}
					],
					"type": {
						"type": "reference",
						"target": 122,
						"typeArguments": [
							{
								"type": "reference",
								"target": 184,
								"name": "N",
								"package": "@meshsdk/core",
								"refersToTypeParameter": true
							},
							{
								"type": "reference",
								"target": 185,
								"name": "T",
								"package": "@meshsdk/core",
								"refersToTypeParameter": true
							}
						],
						"name": "ConStr",
						"package": "@meshsdk/core"
					}
				}
			]
		},
		{
			"id": 188,
			"name": "conStr0",
			"variant": "declaration",
			"kind": 64,
			"flags": {},
			"sources": [
				{
					"fileName": "common/data/plutus.ts",
					"line": 49,
					"character": 13,
					"url": "https://github.com/MeshJS/mesh/blob/1cc00f9/packages/module/src/common/data/plutus.ts#L49"
				}
			],
			"signatures": [
				{
					"id": 189,
					"name": "conStr0",
					"variant": "signature",
					"kind": 4096,
					"flags": {},
					"sources": [
						{
							"fileName": "common/data/plutus.ts",
							"line": 49,
							"character": 23,
							"url": "https://github.com/MeshJS/mesh/blob/1cc00f9/packages/module/src/common/data/plutus.ts#L49"
						}
					],
					"typeParameter": [
						{
							"id": 190,
							"name": "T",
							"variant": "typeParam",
							"kind": 131072,
							"flags": {}
						}
					],
					"parameters": [
						{
							"id": 191,
							"name": "fields",
							"variant": "param",
							"kind": 32768,
							"flags": {},
							"type": {
								"type": "reference",
								"target": 190,
								"name": "T",
								"package": "@meshsdk/core",
								"refersToTypeParameter": true
							}
						}
					],
					"type": {
						"type": "reference",
						"target": 128,
						"typeArguments": [
							{
								"type": "reference",
								"target": 190,
								"name": "T",
								"package": "@meshsdk/core",
								"refersToTypeParameter": true
							}
						],
						"name": "ConStr0",
						"package": "@meshsdk/core"
					}
				}
			]
		},
		{
			"id": 192,
			"name": "conStr1",
			"variant": "declaration",
			"kind": 64,
			"flags": {},
			"sources": [
				{
					"fileName": "common/data/plutus.ts",
					"line": 50,
					"character": 13,
					"url": "https://github.com/MeshJS/mesh/blob/1cc00f9/packages/module/src/common/data/plutus.ts#L50"
				}
			],
			"signatures": [
				{
					"id": 193,
					"name": "conStr1",
					"variant": "signature",
					"kind": 4096,
					"flags": {},
					"sources": [
						{
							"fileName": "common/data/plutus.ts",
							"line": 50,
							"character": 23,
							"url": "https://github.com/MeshJS/mesh/blob/1cc00f9/packages/module/src/common/data/plutus.ts#L50"
						}
					],
					"typeParameter": [
						{
							"id": 194,
							"name": "T",
							"variant": "typeParam",
							"kind": 131072,
							"flags": {}
						}
					],
					"parameters": [
						{
							"id": 195,
							"name": "fields",
							"variant": "param",
							"kind": 32768,
							"flags": {},
							"type": {
								"type": "reference",
								"target": 194,
								"name": "T",
								"package": "@meshsdk/core",
								"refersToTypeParameter": true
							}
						}
					],
					"type": {
						"type": "reference",
						"target": 130,
						"typeArguments": [
							{
								"type": "reference",
								"target": 194,
								"name": "T",
								"package": "@meshsdk/core",
								"refersToTypeParameter": true
							}
						],
						"name": "ConStr1",
						"package": "@meshsdk/core"
					}
				}
			]
		},
		{
			"id": 196,
			"name": "conStr2",
			"variant": "declaration",
			"kind": 64,
			"flags": {},
			"sources": [
				{
					"fileName": "common/data/plutus.ts",
					"line": 51,
					"character": 13,
					"url": "https://github.com/MeshJS/mesh/blob/1cc00f9/packages/module/src/common/data/plutus.ts#L51"
				}
			],
			"signatures": [
				{
					"id": 197,
					"name": "conStr2",
					"variant": "signature",
					"kind": 4096,
					"flags": {},
					"sources": [
						{
							"fileName": "common/data/plutus.ts",
							"line": 51,
							"character": 23,
							"url": "https://github.com/MeshJS/mesh/blob/1cc00f9/packages/module/src/common/data/plutus.ts#L51"
						}
					],
					"typeParameter": [
						{
							"id": 198,
							"name": "T",
							"variant": "typeParam",
							"kind": 131072,
							"flags": {}
						}
					],
					"parameters": [
						{
							"id": 199,
							"name": "fields",
							"variant": "param",
							"kind": 32768,
							"flags": {},
							"type": {
								"type": "reference",
								"target": 198,
								"name": "T",
								"package": "@meshsdk/core",
								"refersToTypeParameter": true
							}
						}
					],
					"type": {
						"type": "reference",
						"target": 132,
						"typeArguments": [
							{
								"type": "reference",
								"target": 198,
								"name": "T",
								"package": "@meshsdk/core",
								"refersToTypeParameter": true
							}
						],
						"name": "ConStr2",
						"package": "@meshsdk/core"
					}
				}
			]
		},
		{
			"id": 212,
			"name": "currencySymbol",
			"variant": "declaration",
			"kind": 64,
			"flags": {},
			"sources": [
				{
					"fileName": "common/data/plutus.ts",
					"line": 59,
					"character": 13,
					"url": "https://github.com/MeshJS/mesh/blob/1cc00f9/packages/module/src/common/data/plutus.ts#L59"
				}
			],
			"signatures": [
				{
					"id": 213,
					"name": "currencySymbol",
					"variant": "signature",
					"kind": 4096,
					"flags": {},
					"sources": [
						{
							"fileName": "common/data/plutus.ts",
							"line": 59,
							"character": 30,
							"url": "https://github.com/MeshJS/mesh/blob/1cc00f9/packages/module/src/common/data/plutus.ts#L59"
						}
					],
					"parameters": [
						{
							"id": 214,
							"name": "bytes",
							"variant": "param",
							"kind": 32768,
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						}
					],
					"type": {
						"type": "reference",
						"target": 135,
						"name": "BuiltinByteString",
						"package": "@meshsdk/core"
					}
				}
			]
		},
		{
			"id": 251,
			"name": "dict",
			"variant": "declaration",
			"kind": 64,
			"flags": {},
			"sources": [
				{
					"fileName": "common/data/plutus.ts",
					"line": 99,
					"character": 13,
					"url": "https://github.com/MeshJS/mesh/blob/1cc00f9/packages/module/src/common/data/plutus.ts#L99"
				}
			],
			"signatures": [
				{
					"id": 252,
					"name": "dict",
					"variant": "signature",
					"kind": 4096,
					"flags": {},
					"sources": [
						{
							"fileName": "common/data/plutus.ts",
							"line": 99,
							"character": 20,
							"url": "https://github.com/MeshJS/mesh/blob/1cc00f9/packages/module/src/common/data/plutus.ts#L99"
						}
					],
					"typeParameter": [
						{
							"id": 253,
							"name": "K",
							"variant": "typeParam",
							"kind": 131072,
							"flags": {}
						},
						{
							"id": 254,
							"name": "V",
							"variant": "typeParam",
							"kind": 131072,
							"flags": {}
						}
					],
					"parameters": [
						{
							"id": 255,
							"name": "itemsMap",
							"variant": "param",
							"kind": 32768,
							"flags": {},
							"type": {
								"type": "array",
								"elementType": {
									"type": "tuple",
									"elements": [
										{
											"type": "reference",
											"target": 253,
											"name": "K",
											"package": "@meshsdk/core",
											"refersToTypeParameter": true
										},
										{
											"type": "reference",
											"target": 254,
											"name": "V",
											"package": "@meshsdk/core",
											"refersToTypeParameter": true
										}
									]
								}
							}
						}
					],
					"type": {
						"type": "reference",
						"target": 167,
						"typeArguments": [
							{
								"type": "reference",
								"target": 253,
								"name": "K",
								"package": "@meshsdk/core",
								"refersToTypeParameter": true
							},
							{
								"type": "reference",
								"target": 254,
								"name": "V",
								"package": "@meshsdk/core",
								"refersToTypeParameter": true
							}
						],
						"name": "AssocMap",
						"package": "@meshsdk/core"
					}
				}
			]
		},
		{
			"id": 1,
			"name": "generateNonce",
			"variant": "declaration",
			"kind": 64,
			"flags": {},
			"sources": [
				{
					"fileName": "common/helpers/generateNonce.ts",
					"line": 4,
					"character": 13,
					"url": "https://github.com/MeshJS/mesh/blob/1cc00f9/packages/module/src/common/helpers/generateNonce.ts#L4"
				}
			],
			"signatures": [
				{
					"id": 2,
					"name": "generateNonce",
					"variant": "signature",
					"kind": 4096,
					"flags": {},
					"sources": [
						{
							"fileName": "common/helpers/generateNonce.ts",
							"line": 4,
							"character": 29,
							"url": "https://github.com/MeshJS/mesh/blob/1cc00f9/packages/module/src/common/helpers/generateNonce.ts#L4"
						}
					],
					"parameters": [
						{
							"id": 3,
							"name": "label",
							"variant": "param",
							"kind": 32768,
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"defaultValue": "''"
						},
						{
							"id": 4,
							"name": "length",
							"variant": "param",
							"kind": 32768,
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "number"
							},
							"defaultValue": "32"
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				}
			]
		},
		{
			"id": 206,
			"name": "integer",
			"variant": "declaration",
			"kind": 64,
			"flags": {},
			"sources": [
				{
					"fileName": "common/data/plutus.ts",
					"line": 57,
					"character": 13,
					"url": "https://github.com/MeshJS/mesh/blob/1cc00f9/packages/module/src/common/data/plutus.ts#L57"
				}
			],
			"signatures": [
				{
					"id": 207,
					"name": "integer",
					"variant": "signature",
					"kind": 4096,
					"flags": {},
					"sources": [
						{
							"fileName": "common/data/plutus.ts",
							"line": 57,
							"character": 23,
							"url": "https://github.com/MeshJS/mesh/blob/1cc00f9/packages/module/src/common/data/plutus.ts#L57"
						}
					],
					"parameters": [
						{
							"id": 208,
							"name": "int",
							"variant": "param",
							"kind": 32768,
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "number"
							}
						}
					],
					"type": {
						"type": "reference",
						"target": 138,
						"name": "Integer",
						"package": "@meshsdk/core"
					}
				}
			]
		},
		{
			"id": 332,
			"name": "keepRelevant",
			"variant": "declaration",
			"kind": 64,
			"flags": {},
			"sources": [
				{
					"fileName": "core/CIP2.ts",
					"line": 6,
					"character": 13,
					"url": "https://github.com/MeshJS/mesh/blob/1cc00f9/packages/module/src/core/CIP2.ts#L6"
				}
			],
			"signatures": [
				{
					"id": 333,
					"name": "keepRelevant",
					"variant": "signature",
					"kind": 4096,
					"flags": {},
					"sources": [
						{
							"fileName": "core/CIP2.ts",
							"line": 6,
							"character": 28,
							"url": "https://github.com/MeshJS/mesh/blob/1cc00f9/packages/module/src/core/CIP2.ts#L6"
						}
					],
					"parameters": [
						{
							"id": 334,
							"name": "requestedOutputSet",
							"variant": "param",
							"kind": 32768,
							"flags": {},
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es2015.collection.d.ts",
									"qualifiedName": "Map"
								},
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "intrinsic",
										"name": "string"
									}
								],
								"name": "Map",
								"package": "typescript"
							}
						},
						{
							"id": 335,
							"name": "initialUTxOSet",
							"variant": "param",
							"kind": 32768,
							"flags": {},
							"type": {
								"type": "array",
								"elementType": {
									"type": "reference",
									"target": {
										"sourceFileName": "src/types/UTxO.ts",
										"qualifiedName": "UTxO"
									},
									"name": "UTxO",
									"package": "@meshsdk/core"
								}
							}
						},
						{
							"id": 336,
							"name": "minimumLovelaceRequired",
							"variant": "param",
							"kind": 32768,
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"defaultValue": "'5000000'"
						}
					],
					"type": {
						"type": "array",
						"elementType": {
							"type": "reference",
							"target": {
								"sourceFileName": "src/types/UTxO.ts",
								"qualifiedName": "UTxO"
							},
							"name": "UTxO",
							"package": "@meshsdk/core"
						}
					}
				}
			]
		},
		{
			"id": 337,
			"name": "largestFirst",
			"variant": "declaration",
			"kind": 64,
			"flags": {},
			"sources": [
				{
					"fileName": "core/CIP2.ts",
					"line": 39,
					"character": 13,
					"url": "https://github.com/MeshJS/mesh/blob/1cc00f9/packages/module/src/core/CIP2.ts#L39"
				}
			],
			"signatures": [
				{
					"id": 338,
					"name": "largestFirst",
					"variant": "signature",
					"kind": 4096,
					"flags": {},
					"sources": [
						{
							"fileName": "core/CIP2.ts",
							"line": 39,
							"character": 28,
							"url": "https://github.com/MeshJS/mesh/blob/1cc00f9/packages/module/src/core/CIP2.ts#L39"
						}
					],
					"parameters": [
						{
							"id": 339,
							"name": "lovelace",
							"variant": "param",
							"kind": 32768,
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 340,
							"name": "initialUTxOSet",
							"variant": "param",
							"kind": 32768,
							"flags": {},
							"type": {
								"type": "array",
								"elementType": {
									"type": "reference",
									"target": {
										"sourceFileName": "src/types/UTxO.ts",
										"qualifiedName": "UTxO"
									},
									"name": "UTxO",
									"package": "@meshsdk/core"
								}
							}
						},
						{
							"id": 341,
							"name": "includeTxFees",
							"variant": "param",
							"kind": 32768,
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							},
							"defaultValue": "false"
						},
						{
							"id": 342,
							"name": "__namedParameters",
							"variant": "param",
							"kind": 32768,
							"flags": {},
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "src/types/Protocol.ts",
									"qualifiedName": "Protocol"
								},
								"name": "Protocol",
								"package": "@meshsdk/core"
							},
							"defaultValue": "DEFAULT_PROTOCOL_PARAMETERS"
						}
					],
					"type": {
						"type": "array",
						"elementType": {
							"type": "reference",
							"target": {
								"sourceFileName": "src/types/UTxO.ts",
								"qualifiedName": "UTxO"
							},
							"name": "UTxO",
							"package": "@meshsdk/core"
						}
					}
				}
			]
		},
		{
			"id": 343,
			"name": "largestFirstMultiAsset",
			"variant": "declaration",
			"kind": 64,
			"flags": {},
			"sources": [
				{
					"fileName": "core/CIP2.ts",
					"line": 64,
					"character": 13,
					"url": "https://github.com/MeshJS/mesh/blob/1cc00f9/packages/module/src/core/CIP2.ts#L64"
				}
			],
			"signatures": [
				{
					"id": 344,
					"name": "largestFirstMultiAsset",
					"variant": "signature",
					"kind": 4096,
					"flags": {},
					"sources": [
						{
							"fileName": "core/CIP2.ts",
							"line": 64,
							"character": 38,
							"url": "https://github.com/MeshJS/mesh/blob/1cc00f9/packages/module/src/core/CIP2.ts#L64"
						}
					],
					"parameters": [
						{
							"id": 345,
							"name": "requestedOutputSet",
							"variant": "param",
							"kind": 32768,
							"flags": {},
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es2015.collection.d.ts",
									"qualifiedName": "Map"
								},
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "intrinsic",
										"name": "string"
									}
								],
								"name": "Map",
								"package": "typescript"
							}
						},
						{
							"id": 346,
							"name": "initialUTxOSet",
							"variant": "param",
							"kind": 32768,
							"flags": {},
							"type": {
								"type": "array",
								"elementType": {
									"type": "reference",
									"target": {
										"sourceFileName": "src/types/UTxO.ts",
										"qualifiedName": "UTxO"
									},
									"name": "UTxO",
									"package": "@meshsdk/core"
								}
							}
						},
						{
							"id": 347,
							"name": "includeTxFees",
							"variant": "param",
							"kind": 32768,
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							},
							"defaultValue": "false"
						},
						{
							"id": 348,
							"name": "parameters",
							"variant": "param",
							"kind": 32768,
							"flags": {},
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "src/types/Protocol.ts",
									"qualifiedName": "Protocol"
								},
								"name": "Protocol",
								"package": "@meshsdk/core"
							},
							"defaultValue": "DEFAULT_PROTOCOL_PARAMETERS"
						}
					],
					"type": {
						"type": "array",
						"elementType": {
							"type": "reference",
							"target": {
								"sourceFileName": "src/types/UTxO.ts",
								"qualifiedName": "UTxO"
							},
							"name": "UTxO",
							"package": "@meshsdk/core"
						}
					}
				}
			]
		},
		{
			"id": 209,
			"name": "list",
			"variant": "declaration",
			"kind": 64,
			"flags": {},
			"sources": [
				{
					"fileName": "common/data/plutus.ts",
					"line": 58,
					"character": 13,
					"url": "https://github.com/MeshJS/mesh/blob/1cc00f9/packages/module/src/common/data/plutus.ts#L58"
				}
			],
			"signatures": [
				{
					"id": 210,
					"name": "list",
					"variant": "signature",
					"kind": 4096,
					"flags": {},
					"sources": [
						{
							"fileName": "common/data/plutus.ts",
							"line": 58,
							"character": 20,
							"url": "https://github.com/MeshJS/mesh/blob/1cc00f9/packages/module/src/common/data/plutus.ts#L58"
						}
					],
					"parameters": [
						{
							"id": 211,
							"name": "pList",
							"variant": "param",
							"kind": 32768,
							"flags": {},
							"type": {
								"type": "array",
								"elementType": {
									"type": "reference",
									"target": 181,
									"name": "PlutusData",
									"package": "@meshsdk/core"
								}
							}
						}
					],
					"type": {
						"type": "reference",
						"target": 141,
						"name": "List",
						"package": "@meshsdk/core"
					}
				}
			]
		},
		{
			"id": 94,
			"name": "mConStr",
			"variant": "declaration",
			"kind": 64,
			"flags": {},
			"sources": [
				{
					"fileName": "common/data/mesh.ts",
					"line": 3,
					"character": 13,
					"url": "https://github.com/MeshJS/mesh/blob/1cc00f9/packages/module/src/common/data/mesh.ts#L3"
				}
			],
			"signatures": [
				{
					"id": 95,
					"name": "mConStr",
					"variant": "signature",
					"kind": 4096,
					"flags": {},
					"sources": [
						{
							"fileName": "common/data/mesh.ts",
							"line": 3,
							"character": 23,
							"url": "https://github.com/MeshJS/mesh/blob/1cc00f9/packages/module/src/common/data/mesh.ts#L3"
						}
					],
					"typeParameter": [
						{
							"id": 96,
							"name": "T",
							"variant": "typeParam",
							"kind": 131072,
							"flags": {},
							"type": {
								"type": "array",
								"elementType": {
									"type": "reference",
									"target": {
										"sourceFileName": "src/types/Data.ts",
										"qualifiedName": "Data"
									},
									"name": "Data",
									"package": "@meshsdk/core"
								}
							}
						}
					],
					"parameters": [
						{
							"id": 97,
							"name": "alternative",
							"variant": "param",
							"kind": 32768,
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "number"
							}
						},
						{
							"id": 98,
							"name": "fields",
							"variant": "param",
							"kind": 32768,
							"flags": {},
							"type": {
								"type": "reference",
								"target": 96,
								"name": "T",
								"package": "@meshsdk/core",
								"refersToTypeParameter": true
							}
						}
					],
					"type": {
						"type": "reference",
						"target": {
							"sourceFileName": "src/types/Data.ts",
							"qualifiedName": "Data"
						},
						"name": "Data",
						"package": "@meshsdk/core"
					}
				}
			]
		},
		{
			"id": 99,
			"name": "mConStr0",
			"variant": "declaration",
			"kind": 64,
			"flags": {},
			"sources": [
				{
					"fileName": "common/data/mesh.ts",
					"line": 11,
					"character": 13,
					"url": "https://github.com/MeshJS/mesh/blob/1cc00f9/packages/module/src/common/data/mesh.ts#L11"
				}
			],
			"signatures": [
				{
					"id": 100,
					"name": "mConStr0",
					"variant": "signature",
					"kind": 4096,
					"flags": {},
					"sources": [
						{
							"fileName": "common/data/mesh.ts",
							"line": 11,
							"character": 24,
							"url": "https://github.com/MeshJS/mesh/blob/1cc00f9/packages/module/src/common/data/mesh.ts#L11"
						}
					],
					"typeParameter": [
						{
							"id": 101,
							"name": "T",
							"variant": "typeParam",
							"kind": 131072,
							"flags": {},
							"type": {
								"type": "array",
								"elementType": {
									"type": "reference",
									"target": {
										"sourceFileName": "src/types/Data.ts",
										"qualifiedName": "Data"
									},
									"name": "Data",
									"package": "@meshsdk/core"
								}
							}
						}
					],
					"parameters": [
						{
							"id": 102,
							"name": "fields",
							"variant": "param",
							"kind": 32768,
							"flags": {},
							"type": {
								"type": "reference",
								"target": 101,
								"name": "T",
								"package": "@meshsdk/core",
								"refersToTypeParameter": true
							}
						}
					],
					"type": {
						"type": "reference",
						"target": {
							"sourceFileName": "src/types/Data.ts",
							"qualifiedName": "Data"
						},
						"name": "Data",
						"package": "@meshsdk/core"
					}
				}
			]
		},
		{
			"id": 103,
			"name": "mConStr1",
			"variant": "declaration",
			"kind": 64,
			"flags": {},
			"sources": [
				{
					"fileName": "common/data/mesh.ts",
					"line": 16,
					"character": 13,
					"url": "https://github.com/MeshJS/mesh/blob/1cc00f9/packages/module/src/common/data/mesh.ts#L16"
				}
			],
			"signatures": [
				{
					"id": 104,
					"name": "mConStr1",
					"variant": "signature",
					"kind": 4096,
					"flags": {},
					"sources": [
						{
							"fileName": "common/data/mesh.ts",
							"line": 16,
							"character": 24,
							"url": "https://github.com/MeshJS/mesh/blob/1cc00f9/packages/module/src/common/data/mesh.ts#L16"
						}
					],
					"typeParameter": [
						{
							"id": 105,
							"name": "T",
							"variant": "typeParam",
							"kind": 131072,
							"flags": {},
							"type": {
								"type": "array",
								"elementType": {
									"type": "reference",
									"target": {
										"sourceFileName": "src/types/Data.ts",
										"qualifiedName": "Data"
									},
									"name": "Data",
									"package": "@meshsdk/core"
								}
							}
						}
					],
					"parameters": [
						{
							"id": 106,
							"name": "fields",
							"variant": "param",
							"kind": 32768,
							"flags": {},
							"type": {
								"type": "reference",
								"target": 105,
								"name": "T",
								"package": "@meshsdk/core",
								"refersToTypeParameter": true
							}
						}
					],
					"type": {
						"type": "reference",
						"target": {
							"sourceFileName": "src/types/Data.ts",
							"qualifiedName": "Data"
						},
						"name": "Data",
						"package": "@meshsdk/core"
					}
				}
			]
		},
		{
			"id": 107,
			"name": "mConStr2",
			"variant": "declaration",
			"kind": 64,
			"flags": {},
			"sources": [
				{
					"fileName": "common/data/mesh.ts",
					"line": 21,
					"character": 13,
					"url": "https://github.com/MeshJS/mesh/blob/1cc00f9/packages/module/src/common/data/mesh.ts#L21"
				}
			],
			"signatures": [
				{
					"id": 108,
					"name": "mConStr2",
					"variant": "signature",
					"kind": 4096,
					"flags": {},
					"sources": [
						{
							"fileName": "common/data/mesh.ts",
							"line": 21,
							"character": 24,
							"url": "https://github.com/MeshJS/mesh/blob/1cc00f9/packages/module/src/common/data/mesh.ts#L21"
						}
					],
					"typeParameter": [
						{
							"id": 109,
							"name": "T",
							"variant": "typeParam",
							"kind": 131072,
							"flags": {},
							"type": {
								"type": "array",
								"elementType": {
									"type": "reference",
									"target": {
										"sourceFileName": "src/types/Data.ts",
										"qualifiedName": "Data"
									},
									"name": "Data",
									"package": "@meshsdk/core"
								}
							}
						}
					],
					"parameters": [
						{
							"id": 110,
							"name": "fields",
							"variant": "param",
							"kind": 32768,
							"flags": {},
							"type": {
								"type": "reference",
								"target": 109,
								"name": "T",
								"package": "@meshsdk/core",
								"refersToTypeParameter": true
							}
						}
					],
					"type": {
						"type": "reference",
						"target": {
							"sourceFileName": "src/types/Data.ts",
							"qualifiedName": "Data"
						},
						"name": "Data",
						"package": "@meshsdk/core"
					}
				}
			]
		},
		{
			"id": 111,
			"name": "mMaybeStakingHash",
			"variant": "declaration",
			"kind": 64,
			"flags": {},
			"sources": [
				{
					"fileName": "common/data/mesh.ts",
					"line": 26,
					"character": 13,
					"url": "https://github.com/MeshJS/mesh/blob/1cc00f9/packages/module/src/common/data/mesh.ts#L26"
				}
			],
			"signatures": [
				{
					"id": 112,
					"name": "mMaybeStakingHash",
					"variant": "signature",
					"kind": 4096,
					"flags": {},
					"sources": [
						{
							"fileName": "common/data/mesh.ts",
							"line": 26,
							"character": 33,
							"url": "https://github.com/MeshJS/mesh/blob/1cc00f9/packages/module/src/common/data/mesh.ts#L26"
						}
					],
					"parameters": [
						{
							"id": 113,
							"name": "stakeCredential",
							"variant": "param",
							"kind": 32768,
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						}
					],
					"type": {
						"type": "reference",
						"target": {
							"sourceFileName": "src/types/Data.ts",
							"qualifiedName": "Data"
						},
						"name": "Data",
						"package": "@meshsdk/core"
					}
				}
			]
		},
		{
			"id": 114,
			"name": "mPubKeyAddress",
			"variant": "declaration",
			"kind": 64,
			"flags": {},
			"sources": [
				{
					"fileName": "common/data/mesh.ts",
					"line": 33,
					"character": 13,
					"url": "https://github.com/MeshJS/mesh/blob/1cc00f9/packages/module/src/common/data/mesh.ts#L33"
				}
			],
			"signatures": [
				{
					"id": 115,
					"name": "mPubKeyAddress",
					"variant": "signature",
					"kind": 4096,
					"flags": {},
					"sources": [
						{
							"fileName": "common/data/mesh.ts",
							"line": 33,
							"character": 30,
							"url": "https://github.com/MeshJS/mesh/blob/1cc00f9/packages/module/src/common/data/mesh.ts#L33"
						}
					],
					"parameters": [
						{
							"id": 116,
							"name": "bytes",
							"variant": "param",
							"kind": 32768,
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 117,
							"name": "stakeCredential",
							"variant": "param",
							"kind": 32768,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						}
					],
					"type": {
						"type": "reference",
						"target": {
							"sourceFileName": "src/types/Data.ts",
							"qualifiedName": "Data"
						},
						"name": "Data",
						"package": "@meshsdk/core"
					}
				}
			]
		},
		{
			"id": 118,
			"name": "mScriptAddress",
			"variant": "declaration",
			"kind": 64,
			"flags": {},
			"sources": [
				{
					"fileName": "common/data/mesh.ts",
					"line": 39,
					"character": 13,
					"url": "https://github.com/MeshJS/mesh/blob/1cc00f9/packages/module/src/common/data/mesh.ts#L39"
				}
			],
			"signatures": [
				{
					"id": 119,
					"name": "mScriptAddress",
					"variant": "signature",
					"kind": 4096,
					"flags": {},
					"sources": [
						{
							"fileName": "common/data/mesh.ts",
							"line": 39,
							"character": 30,
							"url": "https://github.com/MeshJS/mesh/blob/1cc00f9/packages/module/src/common/data/mesh.ts#L39"
						}
					],
					"parameters": [
						{
							"id": 120,
							"name": "bytes",
							"variant": "param",
							"kind": 32768,
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 121,
							"name": "stakeCredential",
							"variant": "param",
							"kind": 32768,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						}
					],
					"type": {
						"type": "reference",
						"target": {
							"sourceFileName": "src/types/Data.ts",
							"qualifiedName": "Data"
						},
						"name": "Data",
						"package": "@meshsdk/core"
					}
				}
			]
		},
		{
			"id": 218,
			"name": "maybeStakingHash",
			"variant": "declaration",
			"kind": 64,
			"flags": {},
			"sources": [
				{
					"fileName": "common/data/plutus.ts",
					"line": 62,
					"character": 13,
					"url": "https://github.com/MeshJS/mesh/blob/1cc00f9/packages/module/src/common/data/plutus.ts#L62"
				}
			],
			"signatures": [
				{
					"id": 219,
					"name": "maybeStakingHash",
					"variant": "signature",
					"kind": 4096,
					"flags": {},
					"sources": [
						{
							"fileName": "common/data/plutus.ts",
							"line": 62,
							"character": 32,
							"url": "https://github.com/MeshJS/mesh/blob/1cc00f9/packages/module/src/common/data/plutus.ts#L62"
						}
					],
					"parameters": [
						{
							"id": 220,
							"name": "stakeCredential",
							"variant": "param",
							"kind": 32768,
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						}
					],
					"type": {
						"type": "reference",
						"target": 150,
						"name": "MaybeStakingHash",
						"package": "@meshsdk/core"
					}
				}
			]
		},
		{
			"id": 323,
			"name": "parseAssetUnit",
			"variant": "declaration",
			"kind": 64,
			"flags": {},
			"sources": [
				{
					"fileName": "common/utils/parser.ts",
					"line": 5,
					"character": 13,
					"url": "https://github.com/MeshJS/mesh/blob/1cc00f9/packages/module/src/common/utils/parser.ts#L5"
				}
			],
			"signatures": [
				{
					"id": 324,
					"name": "parseAssetUnit",
					"variant": "signature",
					"kind": 4096,
					"flags": {},
					"sources": [
						{
							"fileName": "common/utils/parser.ts",
							"line": 5,
							"character": 30,
							"url": "https://github.com/MeshJS/mesh/blob/1cc00f9/packages/module/src/common/utils/parser.ts#L5"
						}
					],
					"parameters": [
						{
							"id": 325,
							"name": "unit",
							"variant": "param",
							"kind": 32768,
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						}
					],
					"type": {
						"type": "reflection",
						"declaration": {
							"id": 326,
							"name": "__type",
							"variant": "declaration",
							"kind": 65536,
							"flags": {},
							"children": [
								{
									"id": 328,
									"name": "assetName",
									"variant": "declaration",
									"kind": 1024,
									"flags": {},
									"sources": [
										{
											"fileName": "common/utils/parser.ts",
											"line": 11,
											"character": 21,
											"url": "https://github.com/MeshJS/mesh/blob/1cc00f9/packages/module/src/common/utils/parser.ts#L11"
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 327,
									"name": "policyId",
									"variant": "declaration",
									"kind": 1024,
									"flags": {},
									"sources": [
										{
											"fileName": "common/utils/parser.ts",
											"line": 11,
											"character": 11,
											"url": "https://github.com/MeshJS/mesh/blob/1cc00f9/packages/module/src/common/utils/parser.ts#L11"
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								}
							],
							"groups": [
								{
									"title": "Properties",
									"children": [
										328,
										327
									]
								}
							],
							"sources": [
								{
									"fileName": "common/utils/parser.ts",
									"line": 11,
									"character": 9,
									"url": "https://github.com/MeshJS/mesh/blob/1cc00f9/packages/module/src/common/utils/parser.ts#L11"
								}
							]
						}
					}
				}
			]
		},
		{
			"id": 329,
			"name": "parseHttpError",
			"variant": "declaration",
			"kind": 64,
			"flags": {},
			"sources": [
				{
					"fileName": "common/utils/parser.ts",
					"line": 14,
					"character": 13,
					"url": "https://github.com/MeshJS/mesh/blob/1cc00f9/packages/module/src/common/utils/parser.ts#L14"
				}
			],
			"signatures": [
				{
					"id": 330,
					"name": "parseHttpError",
					"variant": "signature",
					"kind": 4096,
					"flags": {},
					"sources": [
						{
							"fileName": "common/utils/parser.ts",
							"line": 14,
							"character": 30,
							"url": "https://github.com/MeshJS/mesh/blob/1cc00f9/packages/module/src/common/utils/parser.ts#L14"
						}
					],
					"parameters": [
						{
							"id": 331,
							"name": "error",
							"variant": "param",
							"kind": 32768,
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "unknown"
							}
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				}
			]
		},
		{
			"id": 265,
			"name": "parsePlutusValueToAssets",
			"variant": "declaration",
			"kind": 64,
			"flags": {},
			"sources": [
				{
					"fileName": "common/data/plutus.ts",
					"line": 137,
					"character": 13,
					"url": "https://github.com/MeshJS/mesh/blob/1cc00f9/packages/module/src/common/data/plutus.ts#L137"
				}
			],
			"signatures": [
				{
					"id": 266,
					"name": "parsePlutusValueToAssets",
					"variant": "signature",
					"kind": 4096,
					"flags": {},
					"sources": [
						{
							"fileName": "common/data/plutus.ts",
							"line": 137,
							"character": 40,
							"url": "https://github.com/MeshJS/mesh/blob/1cc00f9/packages/module/src/common/data/plutus.ts#L137"
						}
					],
					"parameters": [
						{
							"id": 267,
							"name": "plutusValue",
							"variant": "param",
							"kind": 32768,
							"flags": {},
							"type": {
								"type": "reference",
								"target": 180,
								"name": "Value",
								"package": "@meshsdk/core"
							}
						}
					],
					"type": {
						"type": "array",
						"elementType": {
							"type": "reference",
							"target": {
								"sourceFileName": "src/types/Asset.ts",
								"qualifiedName": "Asset"
							},
							"name": "Asset",
							"package": "@meshsdk/core"
						}
					}
				}
			]
		},
		{
			"id": 237,
			"name": "paymentPubKeyHash",
			"variant": "declaration",
			"kind": 64,
			"flags": {},
			"sources": [
				{
					"fileName": "common/data/plutus.ts",
					"line": 91,
					"character": 13,
					"url": "https://github.com/MeshJS/mesh/blob/1cc00f9/packages/module/src/common/data/plutus.ts#L91"
				}
			],
			"signatures": [
				{
					"id": 238,
					"name": "paymentPubKeyHash",
					"variant": "signature",
					"kind": 4096,
					"flags": {},
					"sources": [
						{
							"fileName": "common/data/plutus.ts",
							"line": 91,
							"character": 33,
							"url": "https://github.com/MeshJS/mesh/blob/1cc00f9/packages/module/src/common/data/plutus.ts#L91"
						}
					],
					"parameters": [
						{
							"id": 239,
							"name": "bytes",
							"variant": "param",
							"kind": 32768,
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						}
					],
					"type": {
						"type": "reference",
						"target": 135,
						"name": "BuiltinByteString",
						"package": "@meshsdk/core"
					}
				}
			]
		},
		{
			"id": 243,
			"name": "posixTime",
			"variant": "declaration",
			"kind": 64,
			"flags": {},
			"sources": [
				{
					"fileName": "common/data/plutus.ts",
					"line": 95,
					"character": 13,
					"url": "https://github.com/MeshJS/mesh/blob/1cc00f9/packages/module/src/common/data/plutus.ts#L95"
				}
			],
			"signatures": [
				{
					"id": 244,
					"name": "posixTime",
					"variant": "signature",
					"kind": 4096,
					"flags": {},
					"sources": [
						{
							"fileName": "common/data/plutus.ts",
							"line": 95,
							"character": 25,
							"url": "https://github.com/MeshJS/mesh/blob/1cc00f9/packages/module/src/common/data/plutus.ts#L95"
						}
					],
					"parameters": [
						{
							"id": 245,
							"name": "int",
							"variant": "param",
							"kind": 32768,
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "number"
							}
						}
					],
					"type": {
						"type": "reference",
						"target": 138,
						"name": "Integer",
						"package": "@meshsdk/core"
					}
				}
			]
		},
		{
			"id": 221,
			"name": "pubKeyAddress",
			"variant": "declaration",
			"kind": 64,
			"flags": {},
			"sources": [
				{
					"fileName": "common/data/plutus.ts",
					"line": 70,
					"character": 13,
					"url": "https://github.com/MeshJS/mesh/blob/1cc00f9/packages/module/src/common/data/plutus.ts#L70"
				}
			],
			"signatures": [
				{
					"id": 222,
					"name": "pubKeyAddress",
					"variant": "signature",
					"kind": 4096,
					"flags": {},
					"sources": [
						{
							"fileName": "common/data/plutus.ts",
							"line": 70,
							"character": 29,
							"url": "https://github.com/MeshJS/mesh/blob/1cc00f9/packages/module/src/common/data/plutus.ts#L70"
						}
					],
					"parameters": [
						{
							"id": 223,
							"name": "bytes",
							"variant": "param",
							"kind": 32768,
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 224,
							"name": "stakeCredential",
							"variant": "param",
							"kind": 32768,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						}
					],
					"type": {
						"type": "reference",
						"target": 151,
						"name": "PubKeyAddress",
						"package": "@meshsdk/core"
					}
				}
			]
		},
		{
			"id": 240,
			"name": "pubKeyHash",
			"variant": "declaration",
			"kind": 64,
			"flags": {},
			"sources": [
				{
					"fileName": "common/data/plutus.ts",
					"line": 93,
					"character": 13,
					"url": "https://github.com/MeshJS/mesh/blob/1cc00f9/packages/module/src/common/data/plutus.ts#L93"
				}
			],
			"signatures": [
				{
					"id": 241,
					"name": "pubKeyHash",
					"variant": "signature",
					"kind": 4096,
					"flags": {},
					"sources": [
						{
							"fileName": "common/data/plutus.ts",
							"line": 93,
							"character": 26,
							"url": "https://github.com/MeshJS/mesh/blob/1cc00f9/packages/module/src/common/data/plutus.ts#L93"
						}
					],
					"parameters": [
						{
							"id": 242,
							"name": "bytes",
							"variant": "param",
							"kind": 32768,
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						}
					],
					"type": {
						"type": "reference",
						"target": 135,
						"name": "BuiltinByteString",
						"package": "@meshsdk/core"
					}
				}
			]
		},
		{
			"id": 5,
			"name": "readPlutusData",
			"variant": "declaration",
			"kind": 64,
			"flags": {},
			"sources": [
				{
					"fileName": "common/helpers/readPlutusData.ts",
					"line": 4,
					"character": 13,
					"url": "https://github.com/MeshJS/mesh/blob/1cc00f9/packages/module/src/common/helpers/readPlutusData.ts#L4"
				}
			],
			"signatures": [
				{
					"id": 6,
					"name": "readPlutusData",
					"variant": "signature",
					"kind": 4096,
					"flags": {},
					"sources": [
						{
							"fileName": "common/helpers/readPlutusData.ts",
							"line": 4,
							"character": 30,
							"url": "https://github.com/MeshJS/mesh/blob/1cc00f9/packages/module/src/common/helpers/readPlutusData.ts#L4"
						}
					],
					"parameters": [
						{
							"id": 7,
							"name": "plutusData",
							"variant": "param",
							"kind": 32768,
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						}
					],
					"type": {
						"type": "reference",
						"target": {
							"sourceFileName": "src/types/Data.ts",
							"qualifiedName": "Data"
						},
						"name": "Data",
						"package": "@meshsdk/core"
					}
				}
			]
		},
		{
			"id": 268,
			"name": "resolveDataHash",
			"variant": "declaration",
			"kind": 64,
			"flags": {},
			"sources": [
				{
					"fileName": "common/utils/resolver.ts",
					"line": 29,
					"character": 13,
					"url": "https://github.com/MeshJS/mesh/blob/1cc00f9/packages/module/src/common/utils/resolver.ts#L29"
				}
			],
			"signatures": [
				{
					"id": 269,
					"name": "resolveDataHash",
					"variant": "signature",
					"kind": 4096,
					"flags": {},
					"sources": [
						{
							"fileName": "common/utils/resolver.ts",
							"line": 29,
							"character": 31,
							"url": "https://github.com/MeshJS/mesh/blob/1cc00f9/packages/module/src/common/utils/resolver.ts#L29"
						}
					],
					"parameters": [
						{
							"id": 270,
							"name": "data",
							"variant": "param",
							"kind": 32768,
							"flags": {},
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "src/types/Data.ts",
									"qualifiedName": "Data"
								},
								"name": "Data",
								"package": "@meshsdk/core"
							}
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				}
			]
		},
		{
			"id": 271,
			"name": "resolveEpochNo",
			"variant": "declaration",
			"kind": 64,
			"flags": {},
			"sources": [
				{
					"fileName": "common/utils/resolver.ts",
					"line": 35,
					"character": 13,
					"url": "https://github.com/MeshJS/mesh/blob/1cc00f9/packages/module/src/common/utils/resolver.ts#L35"
				}
			],
			"signatures": [
				{
					"id": 272,
					"name": "resolveEpochNo",
					"variant": "signature",
					"kind": 4096,
					"flags": {},
					"sources": [
						{
							"fileName": "common/utils/resolver.ts",
							"line": 35,
							"character": 30,
							"url": "https://github.com/MeshJS/mesh/blob/1cc00f9/packages/module/src/common/utils/resolver.ts#L35"
						}
					],
					"parameters": [
						{
							"id": 273,
							"name": "network",
							"variant": "param",
							"kind": 32768,
							"flags": {},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "literal",
										"value": "testnet"
									},
									{
										"type": "literal",
										"value": "preview"
									},
									{
										"type": "literal",
										"value": "preprod"
									},
									{
										"type": "literal",
										"value": "mainnet"
									}
								]
							}
						},
						{
							"id": 274,
							"name": "milliseconds",
							"variant": "param",
							"kind": 32768,
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "number"
							},
							"defaultValue": "..."
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "number"
					}
				}
			]
		},
		{
			"id": 275,
			"name": "resolveFingerprint",
			"variant": "declaration",
			"kind": 64,
			"flags": {},
			"sources": [
				{
					"fileName": "common/utils/resolver.ts",
					"line": 53,
					"character": 13,
					"url": "https://github.com/MeshJS/mesh/blob/1cc00f9/packages/module/src/common/utils/resolver.ts#L53"
				}
			],
			"signatures": [
				{
					"id": 276,
					"name": "resolveFingerprint",
					"variant": "signature",
					"kind": 4096,
					"flags": {},
					"sources": [
						{
							"fileName": "common/utils/resolver.ts",
							"line": 53,
							"character": 34,
							"url": "https://github.com/MeshJS/mesh/blob/1cc00f9/packages/module/src/common/utils/resolver.ts#L53"
						}
					],
					"parameters": [
						{
							"id": 277,
							"name": "policyId",
							"variant": "param",
							"kind": 32768,
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 278,
							"name": "assetName",
							"variant": "param",
							"kind": 32768,
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				}
			]
		},
		{
			"id": 279,
			"name": "resolveLanguageView",
			"variant": "declaration",
			"kind": 64,
			"flags": {},
			"sources": [
				{
					"fileName": "common/utils/resolver.ts",
					"line": 60,
					"character": 13,
					"url": "https://github.com/MeshJS/mesh/blob/1cc00f9/packages/module/src/common/utils/resolver.ts#L60"
				}
			],
			"signatures": [
				{
					"id": 280,
					"name": "resolveLanguageView",
					"variant": "signature",
					"kind": 4096,
					"flags": {},
					"sources": [
						{
							"fileName": "common/utils/resolver.ts",
							"line": 60,
							"character": 35,
							"url": "https://github.com/MeshJS/mesh/blob/1cc00f9/packages/module/src/common/utils/resolver.ts#L60"
						}
					],
					"parameters": [
						{
							"id": 281,
							"name": "era",
							"variant": "param",
							"kind": 32768,
							"flags": {},
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "src/types/Era.ts",
									"qualifiedName": "Era"
								},
								"name": "Era",
								"package": "@meshsdk/core"
							}
						},
						{
							"id": 282,
							"name": "version",
							"variant": "param",
							"kind": 32768,
							"flags": {},
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "src/types/PlutusScript.ts",
									"qualifiedName": "LanguageVersion"
								},
								"name": "LanguageVersion",
								"package": "@meshsdk/core"
							}
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "undefined"
							},
							{
								"type": "intrinsic",
								"name": "string"
							}
						]
					}
				}
			]
		},
		{
			"id": 283,
			"name": "resolveNativeScriptHash",
			"variant": "declaration",
			"kind": 64,
			"flags": {},
			"sources": [
				{
					"fileName": "common/utils/resolver.ts",
					"line": 64,
					"character": 13,
					"url": "https://github.com/MeshJS/mesh/blob/1cc00f9/packages/module/src/common/utils/resolver.ts#L64"
				}
			],
			"signatures": [
				{
					"id": 284,
					"name": "resolveNativeScriptHash",
					"variant": "signature",
					"kind": 4096,
					"flags": {},
					"sources": [
						{
							"fileName": "common/utils/resolver.ts",
							"line": 64,
							"character": 39,
							"url": "https://github.com/MeshJS/mesh/blob/1cc00f9/packages/module/src/common/utils/resolver.ts#L64"
						}
					],
					"parameters": [
						{
							"id": 285,
							"name": "script",
							"variant": "param",
							"kind": 32768,
							"flags": {},
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "src/types/NativeScript.ts",
									"qualifiedName": "NativeScript"
								},
								"name": "NativeScript",
								"package": "@meshsdk/core"
							}
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				}
			]
		},
		{
			"id": 286,
			"name": "resolvePaymentKeyHash",
			"variant": "declaration",
			"kind": 64,
			"flags": {},
			"sources": [
				{
					"fileName": "common/utils/resolver.ts",
					"line": 68,
					"character": 13,
					"url": "https://github.com/MeshJS/mesh/blob/1cc00f9/packages/module/src/common/utils/resolver.ts#L68"
				}
			],
			"signatures": [
				{
					"id": 287,
					"name": "resolvePaymentKeyHash",
					"variant": "signature",
					"kind": 4096,
					"flags": {},
					"sources": [
						{
							"fileName": "common/utils/resolver.ts",
							"line": 68,
							"character": 37,
							"url": "https://github.com/MeshJS/mesh/blob/1cc00f9/packages/module/src/common/utils/resolver.ts#L68"
						}
					],
					"parameters": [
						{
							"id": 288,
							"name": "bech32",
							"variant": "param",
							"kind": 32768,
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				}
			]
		},
		{
			"id": 289,
			"name": "resolvePlutusScriptAddress",
			"variant": "declaration",
			"kind": 64,
			"flags": {},
			"sources": [
				{
					"fileName": "common/utils/resolver.ts",
					"line": 87,
					"character": 13,
					"url": "https://github.com/MeshJS/mesh/blob/1cc00f9/packages/module/src/common/utils/resolver.ts#L87"
				}
			],
			"signatures": [
				{
					"id": 290,
					"name": "resolvePlutusScriptAddress",
					"variant": "signature",
					"kind": 4096,
					"flags": {},
					"sources": [
						{
							"fileName": "common/utils/resolver.ts",
							"line": 87,
							"character": 42,
							"url": "https://github.com/MeshJS/mesh/blob/1cc00f9/packages/module/src/common/utils/resolver.ts#L87"
						}
					],
					"parameters": [
						{
							"id": 291,
							"name": "script",
							"variant": "param",
							"kind": 32768,
							"flags": {},
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "src/types/PlutusScript.ts",
									"qualifiedName": "PlutusScript"
								},
								"name": "PlutusScript",
								"package": "@meshsdk/core"
							}
						},
						{
							"id": 292,
							"name": "networkId",
							"variant": "param",
							"kind": 32768,
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "number"
							},
							"defaultValue": "0"
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				}
			]
		},
		{
			"id": 293,
			"name": "resolvePlutusScriptHash",
			"variant": "declaration",
			"kind": 64,
			"flags": {},
			"sources": [
				{
					"fileName": "common/utils/resolver.ts",
					"line": 101,
					"character": 13,
					"url": "https://github.com/MeshJS/mesh/blob/1cc00f9/packages/module/src/common/utils/resolver.ts#L101"
				}
			],
			"signatures": [
				{
					"id": 294,
					"name": "resolvePlutusScriptHash",
					"variant": "signature",
					"kind": 4096,
					"flags": {},
					"sources": [
						{
							"fileName": "common/utils/resolver.ts",
							"line": 101,
							"character": 39,
							"url": "https://github.com/MeshJS/mesh/blob/1cc00f9/packages/module/src/common/utils/resolver.ts#L101"
						}
					],
					"parameters": [
						{
							"id": 295,
							"name": "bech32",
							"variant": "param",
							"kind": 32768,
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				}
			]
		},
		{
			"id": 296,
			"name": "resolvePoolId",
			"variant": "declaration",
			"kind": 64,
			"flags": {},
			"sources": [
				{
					"fileName": "common/utils/resolver.ts",
					"line": 114,
					"character": 13,
					"url": "https://github.com/MeshJS/mesh/blob/1cc00f9/packages/module/src/common/utils/resolver.ts#L114"
				}
			],
			"signatures": [
				{
					"id": 297,
					"name": "resolvePoolId",
					"variant": "signature",
					"kind": 4096,
					"flags": {},
					"sources": [
						{
							"fileName": "common/utils/resolver.ts",
							"line": 114,
							"character": 29,
							"url": "https://github.com/MeshJS/mesh/blob/1cc00f9/packages/module/src/common/utils/resolver.ts#L114"
						}
					],
					"parameters": [
						{
							"id": 298,
							"name": "hash",
							"variant": "param",
							"kind": 32768,
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				}
			]
		},
		{
			"id": 299,
			"name": "resolvePrivateKey",
			"variant": "declaration",
			"kind": 64,
			"flags": {},
			"sources": [
				{
					"fileName": "common/utils/resolver.ts",
					"line": 118,
					"character": 13,
					"url": "https://github.com/MeshJS/mesh/blob/1cc00f9/packages/module/src/common/utils/resolver.ts#L118"
				}
			],
			"signatures": [
				{
					"id": 300,
					"name": "resolvePrivateKey",
					"variant": "signature",
					"kind": 4096,
					"flags": {},
					"sources": [
						{
							"fileName": "common/utils/resolver.ts",
							"line": 118,
							"character": 33,
							"url": "https://github.com/MeshJS/mesh/blob/1cc00f9/packages/module/src/common/utils/resolver.ts#L118"
						}
					],
					"parameters": [
						{
							"id": 301,
							"name": "words",
							"variant": "param",
							"kind": 32768,
							"flags": {},
							"type": {
								"type": "array",
								"elementType": {
									"type": "intrinsic",
									"name": "string"
								}
							}
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				}
			]
		},
		{
			"id": 309,
			"name": "resolveRewardAddress",
			"variant": "declaration",
			"kind": 64,
			"flags": {},
			"sources": [
				{
					"fileName": "common/utils/resolver.ts",
					"line": 146,
					"character": 13,
					"url": "https://github.com/MeshJS/mesh/blob/1cc00f9/packages/module/src/common/utils/resolver.ts#L146"
				}
			],
			"signatures": [
				{
					"id": 310,
					"name": "resolveRewardAddress",
					"variant": "signature",
					"kind": 4096,
					"flags": {},
					"sources": [
						{
							"fileName": "common/utils/resolver.ts",
							"line": 146,
							"character": 36,
							"url": "https://github.com/MeshJS/mesh/blob/1cc00f9/packages/module/src/common/utils/resolver.ts#L146"
						}
					],
					"parameters": [
						{
							"id": 311,
							"name": "bech32",
							"variant": "param",
							"kind": 32768,
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				}
			]
		},
		{
			"id": 302,
			"name": "resolveScriptRef",
			"variant": "declaration",
			"kind": 64,
			"flags": {},
			"sources": [
				{
					"fileName": "common/utils/resolver.ts",
					"line": 128,
					"character": 13,
					"url": "https://github.com/MeshJS/mesh/blob/1cc00f9/packages/module/src/common/utils/resolver.ts#L128"
				}
			],
			"signatures": [
				{
					"id": 303,
					"name": "resolveScriptRef",
					"variant": "signature",
					"kind": 4096,
					"flags": {},
					"sources": [
						{
							"fileName": "common/utils/resolver.ts",
							"line": 128,
							"character": 32,
							"url": "https://github.com/MeshJS/mesh/blob/1cc00f9/packages/module/src/common/utils/resolver.ts#L128"
						}
					],
					"parameters": [
						{
							"id": 304,
							"name": "script",
							"variant": "param",
							"kind": 32768,
							"flags": {},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "reference",
										"target": {
											"sourceFileName": "src/types/NativeScript.ts",
											"qualifiedName": "NativeScript"
										},
										"name": "NativeScript",
										"package": "@meshsdk/core"
									},
									{
										"type": "reference",
										"target": {
											"sourceFileName": "src/types/PlutusScript.ts",
											"qualifiedName": "PlutusScript"
										},
										"name": "PlutusScript",
										"package": "@meshsdk/core"
									}
								]
							}
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				}
			]
		},
		{
			"id": 305,
			"name": "resolveSlotNo",
			"variant": "declaration",
			"kind": 64,
			"flags": {},
			"sources": [
				{
					"fileName": "common/utils/resolver.ts",
					"line": 132,
					"character": 13,
					"url": "https://github.com/MeshJS/mesh/blob/1cc00f9/packages/module/src/common/utils/resolver.ts#L132"
				}
			],
			"signatures": [
				{
					"id": 306,
					"name": "resolveSlotNo",
					"variant": "signature",
					"kind": 4096,
					"flags": {},
					"sources": [
						{
							"fileName": "common/utils/resolver.ts",
							"line": 132,
							"character": 29,
							"url": "https://github.com/MeshJS/mesh/blob/1cc00f9/packages/module/src/common/utils/resolver.ts#L132"
						}
					],
					"parameters": [
						{
							"id": 307,
							"name": "network",
							"variant": "param",
							"kind": 32768,
							"flags": {},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "literal",
										"value": "testnet"
									},
									{
										"type": "literal",
										"value": "preview"
									},
									{
										"type": "literal",
										"value": "preprod"
									},
									{
										"type": "literal",
										"value": "mainnet"
									}
								]
							}
						},
						{
							"id": 308,
							"name": "milliseconds",
							"variant": "param",
							"kind": 32768,
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "number"
							},
							"defaultValue": "..."
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				}
			]
		},
		{
			"id": 312,
			"name": "resolveStakeKeyHash",
			"variant": "declaration",
			"kind": 64,
			"flags": {},
			"sources": [
				{
					"fileName": "common/utils/resolver.ts",
					"line": 163,
					"character": 13,
					"url": "https://github.com/MeshJS/mesh/blob/1cc00f9/packages/module/src/common/utils/resolver.ts#L163"
				}
			],
			"signatures": [
				{
					"id": 313,
					"name": "resolveStakeKeyHash",
					"variant": "signature",
					"kind": 4096,
					"flags": {},
					"sources": [
						{
							"fileName": "common/utils/resolver.ts",
							"line": 163,
							"character": 35,
							"url": "https://github.com/MeshJS/mesh/blob/1cc00f9/packages/module/src/common/utils/resolver.ts#L163"
						}
					],
					"parameters": [
						{
							"id": 314,
							"name": "bech32",
							"variant": "param",
							"kind": 32768,
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				}
			]
		},
		{
			"id": 315,
			"name": "resolveTxFees",
			"variant": "declaration",
			"kind": 64,
			"flags": {},
			"sources": [
				{
					"fileName": "common/utils/resolver.ts",
					"line": 178,
					"character": 13,
					"url": "https://github.com/MeshJS/mesh/blob/1cc00f9/packages/module/src/common/utils/resolver.ts#L178"
				}
			],
			"signatures": [
				{
					"id": 316,
					"name": "resolveTxFees",
					"variant": "signature",
					"kind": 4096,
					"flags": {},
					"sources": [
						{
							"fileName": "common/utils/resolver.ts",
							"line": 178,
							"character": 29,
							"url": "https://github.com/MeshJS/mesh/blob/1cc00f9/packages/module/src/common/utils/resolver.ts#L178"
						}
					],
					"parameters": [
						{
							"id": 317,
							"name": "txSize",
							"variant": "param",
							"kind": 32768,
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "number"
							}
						},
						{
							"id": 318,
							"name": "minFeeA",
							"variant": "param",
							"kind": 32768,
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "number"
							},
							"defaultValue": "DEFAULT_PROTOCOL_PARAMETERS.minFeeA"
						},
						{
							"id": 319,
							"name": "minFeeB",
							"variant": "param",
							"kind": 32768,
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "number"
							},
							"defaultValue": "DEFAULT_PROTOCOL_PARAMETERS.minFeeB"
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				}
			]
		},
		{
			"id": 320,
			"name": "resolveTxHash",
			"variant": "declaration",
			"kind": 64,
			"flags": {},
			"sources": [
				{
					"fileName": "common/utils/resolver.ts",
					"line": 188,
					"character": 13,
					"url": "https://github.com/MeshJS/mesh/blob/1cc00f9/packages/module/src/common/utils/resolver.ts#L188"
				}
			],
			"signatures": [
				{
					"id": 321,
					"name": "resolveTxHash",
					"variant": "signature",
					"kind": 4096,
					"flags": {},
					"sources": [
						{
							"fileName": "common/utils/resolver.ts",
							"line": 188,
							"character": 29,
							"url": "https://github.com/MeshJS/mesh/blob/1cc00f9/packages/module/src/common/utils/resolver.ts#L188"
						}
					],
					"parameters": [
						{
							"id": 322,
							"name": "txHex",
							"variant": "param",
							"kind": 32768,
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				}
			]
		},
		{
			"id": 225,
			"name": "scriptAddress",
			"variant": "declaration",
			"kind": 64,
			"flags": {},
			"sources": [
				{
					"fileName": "common/data/plutus.ts",
					"line": 78,
					"character": 13,
					"url": "https://github.com/MeshJS/mesh/blob/1cc00f9/packages/module/src/common/data/plutus.ts#L78"
				}
			],
			"signatures": [
				{
					"id": 226,
					"name": "scriptAddress",
					"variant": "signature",
					"kind": 4096,
					"flags": {},
					"sources": [
						{
							"fileName": "common/data/plutus.ts",
							"line": 78,
							"character": 29,
							"url": "https://github.com/MeshJS/mesh/blob/1cc00f9/packages/module/src/common/data/plutus.ts#L78"
						}
					],
					"parameters": [
						{
							"id": 227,
							"name": "bytes",
							"variant": "param",
							"kind": 32768,
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 228,
							"name": "stakeCredential",
							"variant": "param",
							"kind": 32768,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						}
					],
					"type": {
						"type": "reference",
						"target": 152,
						"name": "ScriptAddress",
						"package": "@meshsdk/core"
					}
				}
			]
		},
		{
			"id": 215,
			"name": "tokenName",
			"variant": "declaration",
			"kind": 64,
			"flags": {},
			"sources": [
				{
					"fileName": "common/data/plutus.ts",
					"line": 61,
					"character": 13,
					"url": "https://github.com/MeshJS/mesh/blob/1cc00f9/packages/module/src/common/data/plutus.ts#L61"
				}
			],
			"signatures": [
				{
					"id": 216,
					"name": "tokenName",
					"variant": "signature",
					"kind": 4096,
					"flags": {},
					"sources": [
						{
							"fileName": "common/data/plutus.ts",
							"line": 61,
							"character": 25,
							"url": "https://github.com/MeshJS/mesh/blob/1cc00f9/packages/module/src/common/data/plutus.ts#L61"
						}
					],
					"parameters": [
						{
							"id": 217,
							"name": "bytes",
							"variant": "param",
							"kind": 32768,
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						}
					],
					"type": {
						"type": "reference",
						"target": 135,
						"name": "BuiltinByteString",
						"package": "@meshsdk/core"
					}
				}
			]
		},
		{
			"id": 256,
			"name": "tuple",
			"variant": "declaration",
			"kind": 64,
			"flags": {},
			"sources": [
				{
					"fileName": "common/data/plutus.ts",
					"line": 102,
					"character": 13,
					"url": "https://github.com/MeshJS/mesh/blob/1cc00f9/packages/module/src/common/data/plutus.ts#L102"
				}
			],
			"signatures": [
				{
					"id": 257,
					"name": "tuple",
					"variant": "signature",
					"kind": 4096,
					"flags": {},
					"sources": [
						{
							"fileName": "common/data/plutus.ts",
							"line": 102,
							"character": 21,
							"url": "https://github.com/MeshJS/mesh/blob/1cc00f9/packages/module/src/common/data/plutus.ts#L102"
						}
					],
					"typeParameter": [
						{
							"id": 258,
							"name": "K",
							"variant": "typeParam",
							"kind": 131072,
							"flags": {}
						},
						{
							"id": 259,
							"name": "V",
							"variant": "typeParam",
							"kind": 131072,
							"flags": {}
						}
					],
					"parameters": [
						{
							"id": 260,
							"name": "key",
							"variant": "param",
							"kind": 32768,
							"flags": {},
							"type": {
								"type": "reference",
								"target": 258,
								"name": "K",
								"package": "@meshsdk/core",
								"refersToTypeParameter": true
							}
						},
						{
							"id": 261,
							"name": "value",
							"variant": "param",
							"kind": 32768,
							"flags": {},
							"type": {
								"type": "reference",
								"target": 259,
								"name": "V",
								"package": "@meshsdk/core",
								"refersToTypeParameter": true
							}
						}
					],
					"type": {
						"type": "reference",
						"target": 177,
						"typeArguments": [
							{
								"type": "reference",
								"target": 258,
								"name": "K",
								"package": "@meshsdk/core",
								"refersToTypeParameter": true
							},
							{
								"type": "reference",
								"target": 259,
								"name": "V",
								"package": "@meshsdk/core",
								"refersToTypeParameter": true
							}
						],
						"name": "Tuple",
						"package": "@meshsdk/core"
					}
				}
			]
		},
		{
			"id": 233,
			"name": "txOutRef",
			"variant": "declaration",
			"kind": 64,
			"flags": {},
			"sources": [
				{
					"fileName": "common/data/plutus.ts",
					"line": 89,
					"character": 13,
					"url": "https://github.com/MeshJS/mesh/blob/1cc00f9/packages/module/src/common/data/plutus.ts#L89"
				}
			],
			"signatures": [
				{
					"id": 234,
					"name": "txOutRef",
					"variant": "signature",
					"kind": 4096,
					"flags": {},
					"sources": [
						{
							"fileName": "common/data/plutus.ts",
							"line": 89,
							"character": 24,
							"url": "https://github.com/MeshJS/mesh/blob/1cc00f9/packages/module/src/common/data/plutus.ts#L89"
						}
					],
					"parameters": [
						{
							"id": 235,
							"name": "txHash",
							"variant": "param",
							"kind": 32768,
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 236,
							"name": "index",
							"variant": "param",
							"kind": 32768,
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "number"
							}
						}
					],
					"type": {
						"type": "reference",
						"target": 154,
						"name": "TxOutRef",
						"package": "@meshsdk/core"
					}
				}
			]
		},
		{
			"id": 262,
			"name": "value",
			"variant": "declaration",
			"kind": 64,
			"flags": {},
			"sources": [
				{
					"fileName": "common/data/plutus.ts",
					"line": 104,
					"character": 13,
					"url": "https://github.com/MeshJS/mesh/blob/1cc00f9/packages/module/src/common/data/plutus.ts#L104"
				}
			],
			"signatures": [
				{
					"id": 263,
					"name": "value",
					"variant": "signature",
					"kind": 4096,
					"flags": {},
					"sources": [
						{
							"fileName": "common/data/plutus.ts",
							"line": 104,
							"character": 21,
							"url": "https://github.com/MeshJS/mesh/blob/1cc00f9/packages/module/src/common/data/plutus.ts#L104"
						}
					],
					"parameters": [
						{
							"id": 264,
							"name": "assets",
							"variant": "param",
							"kind": 32768,
							"flags": {},
							"type": {
								"type": "array",
								"elementType": {
									"type": "reference",
									"target": {
										"sourceFileName": "src/types/Asset.ts",
										"qualifiedName": "Asset"
									},
									"name": "Asset",
									"package": "@meshsdk/core"
								}
							}
						}
					],
					"type": {
						"type": "reference",
						"target": 180,
						"name": "Value",
						"package": "@meshsdk/core"
					}
				}
			]
		}
	],
	"groups": [
		{
			"title": "Classes",
			"children": [
				1176,
				349,
				1227,
				1293,
				660,
				418,
				429,
				526,
				824,
				1386,
				493,
				679,
				594
			]
		},
		{
			"title": "Interfaces",
			"children": [
				13,
				17,
				56,
				64,
				72,
				85,
				89,
				522
			]
		},
		{
			"title": "Type Aliases",
			"children": [
				153,
				167,
				155,
				134,
				1121,
				135,
				1139,
				122,
				128,
				130,
				132,
				1160,
				1370,
				148,
				172,
				161,
				138,
				141,
				521,
				150,
				1033,
				1135,
				1101,
				1092,
				147,
				145,
				181,
				151,
				146,
				1049,
				1131,
				1088,
				1157,
				152,
				1082,
				1059,
				1064,
				149,
				177,
				1048,
				1053,
				154,
				144,
				1117,
				180
			]
		},
		{
			"title": "Functions",
			"children": [
				229,
				246,
				200,
				203,
				8,
				182,
				188,
				192,
				196,
				212,
				251,
				1,
				206,
				332,
				337,
				343,
				209,
				94,
				99,
				103,
				107,
				111,
				114,
				118,
				218,
				323,
				329,
				265,
				237,
				243,
				221,
				240,
				5,
				268,
				271,
				275,
				279,
				283,
				286,
				289,
				293,
				296,
				299,
				309,
				302,
				305,
				312,
				315,
				320,
				225,
				215,
				256,
				233,
				262
			]
		}
	],
	"packageName": "@meshsdk/core",
	"readme": [
		{
			"kind": "text",
			"text": "![Mesh Logo](https://meshjs.dev/logo-mesh/mesh.png)\n\nMesh is an open-source library designed to make building dApps accessible. Whether you're a beginner developer, startup, web3 market leader, or a large enterprise, Mesh makes web3 development easy with reliable, scalable, and well-engineered APIs & developer tools.\n\nExplore the features on [Mesh Playground](https://meshjs.dev/).\n\n## Guides and documentations\n\n- [Starter Templates](https://meshjs.dev/starter-templates)\n- [Guides](https://meshjs.dev/guides)\n- [Install Mesh into existing project](https://meshjs.dev/migration-manual-installation)\n- [App Wallet (Building transactions on applications)](https://meshjs.dev/apis/appwallet)\n- [Browser Wallet (CIP30 wallets intergration)](https://meshjs.dev/apis/browserwallet)\n- [Transaction - Building, minting, burning, smart contracts, stake pool and more](https://meshjs.dev/apis/transaction)\n- [React Components](https://meshjs.dev/react)\n- [Service Providers](https://meshjs.dev/providers)\n- [Resolvers](https://meshjs.dev/apis/resolvers)\n\n## Why use Mesh\n- Start a new project with one of out [Starter Templates](https://meshjs.dev/starter-templates) with CLI command\n- Always up to date - Vasil-ready, developed promptly as the network updates so your app always works\n- Simple to use - Check out our [guides](https://meshjs.dev/guides) - you'll get started in less than 10 mins!\n- Adopts best practices - implements various CIPs and package is well build (no hacking and tweaking needed to get it to work)\n- Thoroughly tested - Mesh is used by both developers and learners, and is being built by developers with solid software engineering backgrounds\n- Integrates with Cardano projects - Koios, Blockfrost, ADA Handle (and more), you can pick and choose freely what you want to use for your app\n- Well documented - we focus on documentation so you can use it with ease, and our [Playground](https://meshjs.dev/) is built so you can see how it works\n\n## How can you contribute?\n\n- [Support us](https://meshjs.dev/about/support-us)\n- Build something - try Mesh by implementing your Web 3.0 project (recommended [starter guide](https://meshjs.dev/guides/nextjs))\n- Inform others - Tell others about Mesh, and star the [Github repo](https://github.com/MeshJS/mesh) :star:"
		}
	],
	"symbolIdMap": {
		"0": {
			"sourceFileName": "src/index.ts",
			"qualifiedName": ""
		},
		"1": {
			"sourceFileName": "src/common/helpers/generateNonce.ts",
			"qualifiedName": "generateNonce"
		},
		"2": {
			"sourceFileName": "src/common/helpers/generateNonce.ts",
			"qualifiedName": "generateNonce"
		},
		"3": {
			"sourceFileName": "src/common/helpers/generateNonce.ts",
			"qualifiedName": "label"
		},
		"4": {
			"sourceFileName": "src/common/helpers/generateNonce.ts",
			"qualifiedName": "length"
		},
		"5": {
			"sourceFileName": "src/common/helpers/readPlutusData.ts",
			"qualifiedName": "readPlutusData"
		},
		"6": {
			"sourceFileName": "src/common/helpers/readPlutusData.ts",
			"qualifiedName": "readPlutusData"
		},
		"7": {
			"sourceFileName": "src/common/helpers/readPlutusData.ts",
			"qualifiedName": "plutusData"
		},
		"8": {
			"sourceFileName": "src/core/CIP8.ts",
			"qualifiedName": "checkSignature"
		},
		"9": {
			"sourceFileName": "src/core/CIP8.ts",
			"qualifiedName": "checkSignature"
		},
		"10": {
			"sourceFileName": "src/core/CIP8.ts",
			"qualifiedName": "message"
		},
		"11": {
			"sourceFileName": "src/core/CIP8.ts",
			"qualifiedName": "signer"
		},
		"12": {
			"sourceFileName": "src/core/CIP8.ts",
			"qualifiedName": "__2"
		},
		"13": {
			"sourceFileName": "src/common/contracts/evaluator.ts",
			"qualifiedName": "IEvaluator"
		},
		"14": {
			"sourceFileName": "src/common/contracts/evaluator.ts",
			"qualifiedName": "IEvaluator.evaluateTx"
		},
		"15": {
			"sourceFileName": "src/common/contracts/evaluator.ts",
			"qualifiedName": "IEvaluator.evaluateTx"
		},
		"16": {
			"sourceFileName": "src/common/contracts/evaluator.ts",
			"qualifiedName": "tx"
		},
		"17": {
			"sourceFileName": "src/common/contracts/fetcher.ts",
			"qualifiedName": "IFetcher"
		},
		"18": {
			"sourceFileName": "src/common/contracts/fetcher.ts",
			"qualifiedName": "IFetcher.fetchAccountInfo"
		},
		"19": {
			"sourceFileName": "src/common/contracts/fetcher.ts",
			"qualifiedName": "IFetcher.fetchAccountInfo"
		},
		"20": {
			"sourceFileName": "src/common/contracts/fetcher.ts",
			"qualifiedName": "address"
		},
		"21": {
			"sourceFileName": "src/common/contracts/fetcher.ts",
			"qualifiedName": "IFetcher.fetchAddressUTxOs"
		},
		"22": {
			"sourceFileName": "src/common/contracts/fetcher.ts",
			"qualifiedName": "IFetcher.fetchAddressUTxOs"
		},
		"23": {
			"sourceFileName": "src/common/contracts/fetcher.ts",
			"qualifiedName": "address"
		},
		"24": {
			"sourceFileName": "src/common/contracts/fetcher.ts",
			"qualifiedName": "asset"
		},
		"25": {
			"sourceFileName": "src/common/contracts/fetcher.ts",
			"qualifiedName": "IFetcher.fetchAssetAddresses"
		},
		"26": {
			"sourceFileName": "src/common/contracts/fetcher.ts",
			"qualifiedName": "IFetcher.fetchAssetAddresses"
		},
		"27": {
			"sourceFileName": "src/common/contracts/fetcher.ts",
			"qualifiedName": "asset"
		},
		"28": {
			"sourceFileName": "src/common/contracts/fetcher.ts",
			"qualifiedName": "__type"
		},
		"29": {
			"sourceFileName": "src/common/contracts/fetcher.ts",
			"qualifiedName": "__type.address"
		},
		"30": {
			"sourceFileName": "src/common/contracts/fetcher.ts",
			"qualifiedName": "__type.quantity"
		},
		"31": {
			"sourceFileName": "src/common/contracts/fetcher.ts",
			"qualifiedName": "IFetcher.fetchAssetMetadata"
		},
		"32": {
			"sourceFileName": "src/common/contracts/fetcher.ts",
			"qualifiedName": "IFetcher.fetchAssetMetadata"
		},
		"33": {
			"sourceFileName": "src/common/contracts/fetcher.ts",
			"qualifiedName": "asset"
		},
		"34": {
			"sourceFileName": "src/common/contracts/fetcher.ts",
			"qualifiedName": "IFetcher.fetchBlockInfo"
		},
		"35": {
			"sourceFileName": "src/common/contracts/fetcher.ts",
			"qualifiedName": "IFetcher.fetchBlockInfo"
		},
		"36": {
			"sourceFileName": "src/common/contracts/fetcher.ts",
			"qualifiedName": "hash"
		},
		"37": {
			"sourceFileName": "src/common/contracts/fetcher.ts",
			"qualifiedName": "IFetcher.fetchCollectionAssets"
		},
		"38": {
			"sourceFileName": "src/common/contracts/fetcher.ts",
			"qualifiedName": "IFetcher.fetchCollectionAssets"
		},
		"39": {
			"sourceFileName": "src/common/contracts/fetcher.ts",
			"qualifiedName": "policyId"
		},
		"40": {
			"sourceFileName": "src/common/contracts/fetcher.ts",
			"qualifiedName": "cursor"
		},
		"41": {
			"sourceFileName": "src/common/contracts/fetcher.ts",
			"qualifiedName": "__type"
		},
		"42": {
			"sourceFileName": "src/common/contracts/fetcher.ts",
			"qualifiedName": "__type.assets"
		},
		"43": {
			"sourceFileName": "src/common/contracts/fetcher.ts",
			"qualifiedName": "__type.next"
		},
		"44": {
			"sourceFileName": "src/common/contracts/fetcher.ts",
			"qualifiedName": "IFetcher.fetchHandleAddress"
		},
		"45": {
			"sourceFileName": "src/common/contracts/fetcher.ts",
			"qualifiedName": "IFetcher.fetchHandleAddress"
		},
		"46": {
			"sourceFileName": "src/common/contracts/fetcher.ts",
			"qualifiedName": "handle"
		},
		"47": {
			"sourceFileName": "src/common/contracts/fetcher.ts",
			"qualifiedName": "IFetcher.fetchProtocolParameters"
		},
		"48": {
			"sourceFileName": "src/common/contracts/fetcher.ts",
			"qualifiedName": "IFetcher.fetchProtocolParameters"
		},
		"49": {
			"sourceFileName": "src/common/contracts/fetcher.ts",
			"qualifiedName": "epoch"
		},
		"50": {
			"sourceFileName": "src/common/contracts/fetcher.ts",
			"qualifiedName": "IFetcher.fetchTxInfo"
		},
		"51": {
			"sourceFileName": "src/common/contracts/fetcher.ts",
			"qualifiedName": "IFetcher.fetchTxInfo"
		},
		"52": {
			"sourceFileName": "src/common/contracts/fetcher.ts",
			"qualifiedName": "hash"
		},
		"53": {
			"sourceFileName": "src/common/contracts/fetcher.ts",
			"qualifiedName": "IFetcher.fetchUTxOs"
		},
		"54": {
			"sourceFileName": "src/common/contracts/fetcher.ts",
			"qualifiedName": "IFetcher.fetchUTxOs"
		},
		"55": {
			"sourceFileName": "src/common/contracts/fetcher.ts",
			"qualifiedName": "hash"
		},
		"56": {
			"sourceFileName": "src/common/contracts/initiator.ts",
			"qualifiedName": "IInitiator"
		},
		"57": {
			"sourceFileName": "src/common/contracts/initiator.ts",
			"qualifiedName": "IInitiator.getUsedAddress"
		},
		"58": {
			"sourceFileName": "src/common/contracts/initiator.ts",
			"qualifiedName": "IInitiator.getUsedAddress"
		},
		"59": {
			"sourceFileName": "src/common/contracts/initiator.ts",
			"qualifiedName": "IInitiator.getUsedCollateral"
		},
		"60": {
			"sourceFileName": "src/common/contracts/initiator.ts",
			"qualifiedName": "IInitiator.getUsedCollateral"
		},
		"61": {
			"sourceFileName": "src/common/contracts/initiator.ts",
			"qualifiedName": "limit"
		},
		"62": {
			"sourceFileName": "src/common/contracts/initiator.ts",
			"qualifiedName": "IInitiator.getUsedUTxOs"
		},
		"63": {
			"sourceFileName": "src/common/contracts/initiator.ts",
			"qualifiedName": "IInitiator.getUsedUTxOs"
		},
		"64": {
			"sourceFileName": "src/common/contracts/listener.ts",
			"qualifiedName": "IListener"
		},
		"65": {
			"sourceFileName": "src/common/contracts/listener.ts",
			"qualifiedName": "IListener.onTxConfirmed"
		},
		"66": {
			"sourceFileName": "src/common/contracts/listener.ts",
			"qualifiedName": "IListener.onTxConfirmed"
		},
		"67": {
			"sourceFileName": "src/common/contracts/listener.ts",
			"qualifiedName": "txHash"
		},
		"68": {
			"sourceFileName": "src/common/contracts/listener.ts",
			"qualifiedName": "callback"
		},
		"69": {
			"sourceFileName": "src/common/contracts/listener.ts",
			"qualifiedName": "__type"
		},
		"70": {
			"sourceFileName": "src/common/contracts/listener.ts",
			"qualifiedName": "__type"
		},
		"71": {
			"sourceFileName": "src/common/contracts/listener.ts",
			"qualifiedName": "limit"
		},
		"72": {
			"sourceFileName": "src/common/contracts/signer.ts",
			"qualifiedName": "ISigner"
		},
		"73": {
			"sourceFileName": "src/common/contracts/signer.ts",
			"qualifiedName": "ISigner.signData"
		},
		"74": {
			"sourceFileName": "src/common/contracts/signer.ts",
			"qualifiedName": "ISigner.signData"
		},
		"75": {
			"sourceFileName": "src/common/contracts/signer.ts",
			"qualifiedName": "address"
		},
		"76": {
			"sourceFileName": "src/common/contracts/signer.ts",
			"qualifiedName": "payload"
		},
		"77": {
			"sourceFileName": "src/common/contracts/signer.ts",
			"qualifiedName": "ISigner.signTx"
		},
		"78": {
			"sourceFileName": "src/common/contracts/signer.ts",
			"qualifiedName": "ISigner.signTx"
		},
		"79": {
			"sourceFileName": "src/common/contracts/signer.ts",
			"qualifiedName": "unsignedTx"
		},
		"80": {
			"sourceFileName": "src/common/contracts/signer.ts",
			"qualifiedName": "partialSign"
		},
		"81": {
			"sourceFileName": "src/common/contracts/signer.ts",
			"qualifiedName": "ISigner.signTxs"
		},
		"82": {
			"sourceFileName": "src/common/contracts/signer.ts",
			"qualifiedName": "ISigner.signTxs"
		},
		"83": {
			"sourceFileName": "src/common/contracts/signer.ts",
			"qualifiedName": "unsignedTxs"
		},
		"84": {
			"sourceFileName": "src/common/contracts/signer.ts",
			"qualifiedName": "partialSign"
		},
		"85": {
			"sourceFileName": "src/common/contracts/submitter.ts",
			"qualifiedName": "ISubmitter"
		},
		"86": {
			"sourceFileName": "src/common/contracts/submitter.ts",
			"qualifiedName": "ISubmitter.submitTx"
		},
		"87": {
			"sourceFileName": "src/common/contracts/submitter.ts",
			"qualifiedName": "ISubmitter.submitTx"
		},
		"88": {
			"sourceFileName": "src/common/contracts/submitter.ts",
			"qualifiedName": "tx"
		},
		"89": {
			"sourceFileName": "src/common/contracts/uploader.ts",
			"qualifiedName": "IUploader"
		},
		"90": {
			"sourceFileName": "src/common/contracts/uploader.ts",
			"qualifiedName": "IUploader.uploadContent"
		},
		"91": {
			"sourceFileName": "src/common/contracts/uploader.ts",
			"qualifiedName": "IUploader.uploadContent"
		},
		"92": {
			"sourceFileName": "src/common/contracts/uploader.ts",
			"qualifiedName": "content"
		},
		"93": {
			"sourceFileName": "src/common/contracts/uploader.ts",
			"qualifiedName": "recursive"
		},
		"94": {
			"sourceFileName": "src/common/data/mesh.ts",
			"qualifiedName": "mConStr"
		},
		"95": {
			"sourceFileName": "src/common/data/mesh.ts",
			"qualifiedName": "mConStr"
		},
		"96": {
			"sourceFileName": "src/common/data/mesh.ts",
			"qualifiedName": "T"
		},
		"97": {
			"sourceFileName": "src/common/data/mesh.ts",
			"qualifiedName": "alternative"
		},
		"98": {
			"sourceFileName": "src/common/data/mesh.ts",
			"qualifiedName": "fields"
		},
		"99": {
			"sourceFileName": "src/common/data/mesh.ts",
			"qualifiedName": "mConStr0"
		},
		"100": {
			"sourceFileName": "src/common/data/mesh.ts",
			"qualifiedName": "mConStr0"
		},
		"101": {
			"sourceFileName": "src/common/data/mesh.ts",
			"qualifiedName": "T"
		},
		"102": {
			"sourceFileName": "src/common/data/mesh.ts",
			"qualifiedName": "fields"
		},
		"103": {
			"sourceFileName": "src/common/data/mesh.ts",
			"qualifiedName": "mConStr1"
		},
		"104": {
			"sourceFileName": "src/common/data/mesh.ts",
			"qualifiedName": "mConStr1"
		},
		"105": {
			"sourceFileName": "src/common/data/mesh.ts",
			"qualifiedName": "T"
		},
		"106": {
			"sourceFileName": "src/common/data/mesh.ts",
			"qualifiedName": "fields"
		},
		"107": {
			"sourceFileName": "src/common/data/mesh.ts",
			"qualifiedName": "mConStr2"
		},
		"108": {
			"sourceFileName": "src/common/data/mesh.ts",
			"qualifiedName": "mConStr2"
		},
		"109": {
			"sourceFileName": "src/common/data/mesh.ts",
			"qualifiedName": "T"
		},
		"110": {
			"sourceFileName": "src/common/data/mesh.ts",
			"qualifiedName": "fields"
		},
		"111": {
			"sourceFileName": "src/common/data/mesh.ts",
			"qualifiedName": "mMaybeStakingHash"
		},
		"112": {
			"sourceFileName": "src/common/data/mesh.ts",
			"qualifiedName": "mMaybeStakingHash"
		},
		"113": {
			"sourceFileName": "src/common/data/mesh.ts",
			"qualifiedName": "stakeCredential"
		},
		"114": {
			"sourceFileName": "src/common/data/mesh.ts",
			"qualifiedName": "mPubKeyAddress"
		},
		"115": {
			"sourceFileName": "src/common/data/mesh.ts",
			"qualifiedName": "mPubKeyAddress"
		},
		"116": {
			"sourceFileName": "src/common/data/mesh.ts",
			"qualifiedName": "bytes"
		},
		"117": {
			"sourceFileName": "src/common/data/mesh.ts",
			"qualifiedName": "stakeCredential"
		},
		"118": {
			"sourceFileName": "src/common/data/mesh.ts",
			"qualifiedName": "mScriptAddress"
		},
		"119": {
			"sourceFileName": "src/common/data/mesh.ts",
			"qualifiedName": "mScriptAddress"
		},
		"120": {
			"sourceFileName": "src/common/data/mesh.ts",
			"qualifiedName": "bytes"
		},
		"121": {
			"sourceFileName": "src/common/data/mesh.ts",
			"qualifiedName": "stakeCredential"
		},
		"122": {
			"sourceFileName": "src/common/data/plutus.ts",
			"qualifiedName": "ConStr"
		},
		"123": {
			"sourceFileName": "src/common/data/plutus.ts",
			"qualifiedName": "__type"
		},
		"124": {
			"sourceFileName": "src/common/data/plutus.ts",
			"qualifiedName": "__type.constructor"
		},
		"125": {
			"sourceFileName": "src/common/data/plutus.ts",
			"qualifiedName": "__type.fields"
		},
		"126": {
			"sourceFileName": "src/common/data/plutus.ts",
			"qualifiedName": "N"
		},
		"127": {
			"sourceFileName": "src/common/data/plutus.ts",
			"qualifiedName": "T"
		},
		"128": {
			"sourceFileName": "src/common/data/plutus.ts",
			"qualifiedName": "ConStr0"
		},
		"129": {
			"sourceFileName": "src/common/data/plutus.ts",
			"qualifiedName": "T"
		},
		"130": {
			"sourceFileName": "src/common/data/plutus.ts",
			"qualifiedName": "ConStr1"
		},
		"131": {
			"sourceFileName": "src/common/data/plutus.ts",
			"qualifiedName": "T"
		},
		"132": {
			"sourceFileName": "src/common/data/plutus.ts",
			"qualifiedName": "ConStr2"
		},
		"133": {
			"sourceFileName": "src/common/data/plutus.ts",
			"qualifiedName": "T"
		},
		"134": {
			"sourceFileName": "src/common/data/plutus.ts",
			"qualifiedName": "Bool"
		},
		"135": {
			"sourceFileName": "src/common/data/plutus.ts",
			"qualifiedName": "BuiltinByteString"
		},
		"136": {
			"sourceFileName": "src/common/data/plutus.ts",
			"qualifiedName": "__type"
		},
		"137": {
			"sourceFileName": "src/common/data/plutus.ts",
			"qualifiedName": "__type.bytes"
		},
		"138": {
			"sourceFileName": "src/common/data/plutus.ts",
			"qualifiedName": "Integer"
		},
		"139": {
			"sourceFileName": "src/common/data/plutus.ts",
			"qualifiedName": "__type"
		},
		"140": {
			"sourceFileName": "src/common/data/plutus.ts",
			"qualifiedName": "__type.int"
		},
		"141": {
			"sourceFileName": "src/common/data/plutus.ts",
			"qualifiedName": "List"
		},
		"142": {
			"sourceFileName": "src/common/data/plutus.ts",
			"qualifiedName": "__type"
		},
		"143": {
			"sourceFileName": "src/common/data/plutus.ts",
			"qualifiedName": "__type.list"
		},
		"144": {
			"sourceFileName": "src/common/data/plutus.ts",
			"qualifiedName": "ValidatorHash"
		},
		"145": {
			"sourceFileName": "src/common/data/plutus.ts",
			"qualifiedName": "PaymentPubKeyHash"
		},
		"146": {
			"sourceFileName": "src/common/data/plutus.ts",
			"qualifiedName": "PubKeyHash"
		},
		"147": {
			"sourceFileName": "src/common/data/plutus.ts",
			"qualifiedName": "POSIXTime"
		},
		"148": {
			"sourceFileName": "src/common/data/plutus.ts",
			"qualifiedName": "CurrencySymbol"
		},
		"149": {
			"sourceFileName": "src/common/data/plutus.ts",
			"qualifiedName": "TokenName"
		},
		"150": {
			"sourceFileName": "src/common/data/plutus.ts",
			"qualifiedName": "MaybeStakingHash"
		},
		"151": {
			"sourceFileName": "src/common/data/plutus.ts",
			"qualifiedName": "PubKeyAddress"
		},
		"152": {
			"sourceFileName": "src/common/data/plutus.ts",
			"qualifiedName": "ScriptAddress"
		},
		"153": {
			"sourceFileName": "src/common/data/plutus.ts",
			"qualifiedName": "AssetClass"
		},
		"154": {
			"sourceFileName": "src/common/data/plutus.ts",
			"qualifiedName": "TxOutRef"
		},
		"155": {
			"sourceFileName": "src/common/data/plutus.ts",
			"qualifiedName": "AssocMapItem"
		},
		"156": {
			"sourceFileName": "src/common/data/plutus.ts",
			"qualifiedName": "__type"
		},
		"157": {
			"sourceFileName": "src/common/data/plutus.ts",
			"qualifiedName": "__type.k"
		},
		"158": {
			"sourceFileName": "src/common/data/plutus.ts",
			"qualifiedName": "__type.v"
		},
		"159": {
			"sourceFileName": "src/common/data/plutus.ts",
			"qualifiedName": "K"
		},
		"160": {
			"sourceFileName": "src/common/data/plutus.ts",
			"qualifiedName": "V"
		},
		"161": {
			"sourceFileName": "src/common/data/plutus.ts",
			"qualifiedName": "DictItem"
		},
		"162": {
			"sourceFileName": "src/common/data/plutus.ts",
			"qualifiedName": "__type"
		},
		"163": {
			"sourceFileName": "src/common/data/plutus.ts",
			"qualifiedName": "__type.k"
		},
		"164": {
			"sourceFileName": "src/common/data/plutus.ts",
			"qualifiedName": "__type.v"
		},
		"165": {
			"sourceFileName": "src/common/data/plutus.ts",
			"qualifiedName": "K"
		},
		"166": {
			"sourceFileName": "src/common/data/plutus.ts",
			"qualifiedName": "V"
		},
		"167": {
			"sourceFileName": "src/common/data/plutus.ts",
			"qualifiedName": "AssocMap"
		},
		"168": {
			"sourceFileName": "src/common/data/plutus.ts",
			"qualifiedName": "__type"
		},
		"169": {
			"sourceFileName": "src/common/data/plutus.ts",
			"qualifiedName": "__type.map"
		},
		"170": {
			"sourceFileName": "src/common/data/plutus.ts",
			"qualifiedName": "K"
		},
		"171": {
			"sourceFileName": "src/common/data/plutus.ts",
			"qualifiedName": "V"
		},
		"172": {
			"sourceFileName": "src/common/data/plutus.ts",
			"qualifiedName": "Dict"
		},
		"173": {
			"sourceFileName": "src/common/data/plutus.ts",
			"qualifiedName": "__type"
		},
		"174": {
			"sourceFileName": "src/common/data/plutus.ts",
			"qualifiedName": "__type.map"
		},
		"175": {
			"sourceFileName": "src/common/data/plutus.ts",
			"qualifiedName": "K"
		},
		"176": {
			"sourceFileName": "src/common/data/plutus.ts",
			"qualifiedName": "V"
		},
		"177": {
			"sourceFileName": "src/common/data/plutus.ts",
			"qualifiedName": "Tuple"
		},
		"178": {
			"sourceFileName": "src/common/data/plutus.ts",
			"qualifiedName": "K"
		},
		"179": {
			"sourceFileName": "src/common/data/plutus.ts",
			"qualifiedName": "V"
		},
		"180": {
			"sourceFileName": "src/common/data/plutus.ts",
			"qualifiedName": "Value"
		},
		"181": {
			"sourceFileName": "src/common/data/plutus.ts",
			"qualifiedName": "PlutusData"
		},
		"182": {
			"sourceFileName": "src/common/data/plutus.ts",
			"qualifiedName": "conStr"
		},
		"183": {
			"sourceFileName": "src/common/data/plutus.ts",
			"qualifiedName": "conStr"
		},
		"184": {
			"sourceFileName": "src/common/data/plutus.ts",
			"qualifiedName": "N"
		},
		"185": {
			"sourceFileName": "src/common/data/plutus.ts",
			"qualifiedName": "T"
		},
		"186": {
			"sourceFileName": "src/common/data/plutus.ts",
			"qualifiedName": "constructor"
		},
		"187": {
			"sourceFileName": "src/common/data/plutus.ts",
			"qualifiedName": "fields"
		},
		"188": {
			"sourceFileName": "src/common/data/plutus.ts",
			"qualifiedName": "conStr0"
		},
		"189": {
			"sourceFileName": "src/common/data/plutus.ts",
			"qualifiedName": "conStr0"
		},
		"190": {
			"sourceFileName": "src/common/data/plutus.ts",
			"qualifiedName": "T"
		},
		"191": {
			"sourceFileName": "src/common/data/plutus.ts",
			"qualifiedName": "fields"
		},
		"192": {
			"sourceFileName": "src/common/data/plutus.ts",
			"qualifiedName": "conStr1"
		},
		"193": {
			"sourceFileName": "src/common/data/plutus.ts",
			"qualifiedName": "conStr1"
		},
		"194": {
			"sourceFileName": "src/common/data/plutus.ts",
			"qualifiedName": "T"
		},
		"195": {
			"sourceFileName": "src/common/data/plutus.ts",
			"qualifiedName": "fields"
		},
		"196": {
			"sourceFileName": "src/common/data/plutus.ts",
			"qualifiedName": "conStr2"
		},
		"197": {
			"sourceFileName": "src/common/data/plutus.ts",
			"qualifiedName": "conStr2"
		},
		"198": {
			"sourceFileName": "src/common/data/plutus.ts",
			"qualifiedName": "T"
		},
		"199": {
			"sourceFileName": "src/common/data/plutus.ts",
			"qualifiedName": "fields"
		},
		"200": {
			"sourceFileName": "src/common/data/plutus.ts",
			"qualifiedName": "bool"
		},
		"201": {
			"sourceFileName": "src/common/data/plutus.ts",
			"qualifiedName": "bool"
		},
		"202": {
			"sourceFileName": "src/common/data/plutus.ts",
			"qualifiedName": "b"
		},
		"203": {
			"sourceFileName": "src/common/data/plutus.ts",
			"qualifiedName": "builtinByteString"
		},
		"204": {
			"sourceFileName": "src/common/data/plutus.ts",
			"qualifiedName": "builtinByteString"
		},
		"205": {
			"sourceFileName": "src/common/data/plutus.ts",
			"qualifiedName": "bytes"
		},
		"206": {
			"sourceFileName": "src/common/data/plutus.ts",
			"qualifiedName": "integer"
		},
		"207": {
			"sourceFileName": "src/common/data/plutus.ts",
			"qualifiedName": "integer"
		},
		"208": {
			"sourceFileName": "src/common/data/plutus.ts",
			"qualifiedName": "int"
		},
		"209": {
			"sourceFileName": "src/common/data/plutus.ts",
			"qualifiedName": "list"
		},
		"210": {
			"sourceFileName": "src/common/data/plutus.ts",
			"qualifiedName": "list"
		},
		"211": {
			"sourceFileName": "src/common/data/plutus.ts",
			"qualifiedName": "pList"
		},
		"212": {
			"sourceFileName": "src/common/data/plutus.ts",
			"qualifiedName": "currencySymbol"
		},
		"213": {
			"sourceFileName": "src/common/data/plutus.ts",
			"qualifiedName": "currencySymbol"
		},
		"214": {
			"sourceFileName": "src/common/data/plutus.ts",
			"qualifiedName": "bytes"
		},
		"215": {
			"sourceFileName": "src/common/data/plutus.ts",
			"qualifiedName": "tokenName"
		},
		"216": {
			"sourceFileName": "src/common/data/plutus.ts",
			"qualifiedName": "tokenName"
		},
		"217": {
			"sourceFileName": "src/common/data/plutus.ts",
			"qualifiedName": "bytes"
		},
		"218": {
			"sourceFileName": "src/common/data/plutus.ts",
			"qualifiedName": "maybeStakingHash"
		},
		"219": {
			"sourceFileName": "src/common/data/plutus.ts",
			"qualifiedName": "maybeStakingHash"
		},
		"220": {
			"sourceFileName": "src/common/data/plutus.ts",
			"qualifiedName": "stakeCredential"
		},
		"221": {
			"sourceFileName": "src/common/data/plutus.ts",
			"qualifiedName": "pubKeyAddress"
		},
		"222": {
			"sourceFileName": "src/common/data/plutus.ts",
			"qualifiedName": "pubKeyAddress"
		},
		"223": {
			"sourceFileName": "src/common/data/plutus.ts",
			"qualifiedName": "bytes"
		},
		"224": {
			"sourceFileName": "src/common/data/plutus.ts",
			"qualifiedName": "stakeCredential"
		},
		"225": {
			"sourceFileName": "src/common/data/plutus.ts",
			"qualifiedName": "scriptAddress"
		},
		"226": {
			"sourceFileName": "src/common/data/plutus.ts",
			"qualifiedName": "scriptAddress"
		},
		"227": {
			"sourceFileName": "src/common/data/plutus.ts",
			"qualifiedName": "bytes"
		},
		"228": {
			"sourceFileName": "src/common/data/plutus.ts",
			"qualifiedName": "stakeCredential"
		},
		"229": {
			"sourceFileName": "src/common/data/plutus.ts",
			"qualifiedName": "assetClass"
		},
		"230": {
			"sourceFileName": "src/common/data/plutus.ts",
			"qualifiedName": "assetClass"
		},
		"231": {
			"sourceFileName": "src/common/data/plutus.ts",
			"qualifiedName": "policyId"
		},
		"232": {
			"sourceFileName": "src/common/data/plutus.ts",
			"qualifiedName": "assetName"
		},
		"233": {
			"sourceFileName": "src/common/data/plutus.ts",
			"qualifiedName": "txOutRef"
		},
		"234": {
			"sourceFileName": "src/common/data/plutus.ts",
			"qualifiedName": "txOutRef"
		},
		"235": {
			"sourceFileName": "src/common/data/plutus.ts",
			"qualifiedName": "txHash"
		},
		"236": {
			"sourceFileName": "src/common/data/plutus.ts",
			"qualifiedName": "index"
		},
		"237": {
			"sourceFileName": "src/common/data/plutus.ts",
			"qualifiedName": "paymentPubKeyHash"
		},
		"238": {
			"sourceFileName": "src/common/data/plutus.ts",
			"qualifiedName": "paymentPubKeyHash"
		},
		"239": {
			"sourceFileName": "src/common/data/plutus.ts",
			"qualifiedName": "bytes"
		},
		"240": {
			"sourceFileName": "src/common/data/plutus.ts",
			"qualifiedName": "pubKeyHash"
		},
		"241": {
			"sourceFileName": "src/common/data/plutus.ts",
			"qualifiedName": "pubKeyHash"
		},
		"242": {
			"sourceFileName": "src/common/data/plutus.ts",
			"qualifiedName": "bytes"
		},
		"243": {
			"sourceFileName": "src/common/data/plutus.ts",
			"qualifiedName": "posixTime"
		},
		"244": {
			"sourceFileName": "src/common/data/plutus.ts",
			"qualifiedName": "posixTime"
		},
		"245": {
			"sourceFileName": "src/common/data/plutus.ts",
			"qualifiedName": "int"
		},
		"246": {
			"sourceFileName": "src/common/data/plutus.ts",
			"qualifiedName": "assocMap"
		},
		"247": {
			"sourceFileName": "src/common/data/plutus.ts",
			"qualifiedName": "assocMap"
		},
		"248": {
			"sourceFileName": "src/common/data/plutus.ts",
			"qualifiedName": "K"
		},
		"249": {
			"sourceFileName": "src/common/data/plutus.ts",
			"qualifiedName": "V"
		},
		"250": {
			"sourceFileName": "src/common/data/plutus.ts",
			"qualifiedName": "itemsMap"
		},
		"251": {
			"sourceFileName": "src/common/data/plutus.ts",
			"qualifiedName": "dict"
		},
		"252": {
			"sourceFileName": "src/common/data/plutus.ts",
			"qualifiedName": "dict"
		},
		"253": {
			"sourceFileName": "src/common/data/plutus.ts",
			"qualifiedName": "K"
		},
		"254": {
			"sourceFileName": "src/common/data/plutus.ts",
			"qualifiedName": "V"
		},
		"255": {
			"sourceFileName": "src/common/data/plutus.ts",
			"qualifiedName": "itemsMap"
		},
		"256": {
			"sourceFileName": "src/common/data/plutus.ts",
			"qualifiedName": "tuple"
		},
		"257": {
			"sourceFileName": "src/common/data/plutus.ts",
			"qualifiedName": "tuple"
		},
		"258": {
			"sourceFileName": "src/common/data/plutus.ts",
			"qualifiedName": "K"
		},
		"259": {
			"sourceFileName": "src/common/data/plutus.ts",
			"qualifiedName": "V"
		},
		"260": {
			"sourceFileName": "src/common/data/plutus.ts",
			"qualifiedName": "key"
		},
		"261": {
			"sourceFileName": "src/common/data/plutus.ts",
			"qualifiedName": "value"
		},
		"262": {
			"sourceFileName": "src/common/data/plutus.ts",
			"qualifiedName": "value"
		},
		"263": {
			"sourceFileName": "src/common/data/plutus.ts",
			"qualifiedName": "value"
		},
		"264": {
			"sourceFileName": "src/common/data/plutus.ts",
			"qualifiedName": "assets"
		},
		"265": {
			"sourceFileName": "src/common/data/plutus.ts",
			"qualifiedName": "parsePlutusValueToAssets"
		},
		"266": {
			"sourceFileName": "src/common/data/plutus.ts",
			"qualifiedName": "parsePlutusValueToAssets"
		},
		"267": {
			"sourceFileName": "src/common/data/plutus.ts",
			"qualifiedName": "plutusValue"
		},
		"268": {
			"sourceFileName": "src/common/utils/resolver.ts",
			"qualifiedName": "resolveDataHash"
		},
		"269": {
			"sourceFileName": "src/common/utils/resolver.ts",
			"qualifiedName": "resolveDataHash"
		},
		"270": {
			"sourceFileName": "src/common/utils/resolver.ts",
			"qualifiedName": "data"
		},
		"271": {
			"sourceFileName": "src/common/utils/resolver.ts",
			"qualifiedName": "resolveEpochNo"
		},
		"272": {
			"sourceFileName": "src/common/utils/resolver.ts",
			"qualifiedName": "resolveEpochNo"
		},
		"273": {
			"sourceFileName": "src/common/utils/resolver.ts",
			"qualifiedName": "network"
		},
		"274": {
			"sourceFileName": "src/common/utils/resolver.ts",
			"qualifiedName": "milliseconds"
		},
		"275": {
			"sourceFileName": "src/common/utils/resolver.ts",
			"qualifiedName": "resolveFingerprint"
		},
		"276": {
			"sourceFileName": "src/common/utils/resolver.ts",
			"qualifiedName": "resolveFingerprint"
		},
		"277": {
			"sourceFileName": "src/common/utils/resolver.ts",
			"qualifiedName": "policyId"
		},
		"278": {
			"sourceFileName": "src/common/utils/resolver.ts",
			"qualifiedName": "assetName"
		},
		"279": {
			"sourceFileName": "src/common/utils/resolver.ts",
			"qualifiedName": "resolveLanguageView"
		},
		"280": {
			"sourceFileName": "src/common/utils/resolver.ts",
			"qualifiedName": "resolveLanguageView"
		},
		"281": {
			"sourceFileName": "src/common/utils/resolver.ts",
			"qualifiedName": "era"
		},
		"282": {
			"sourceFileName": "src/common/utils/resolver.ts",
			"qualifiedName": "version"
		},
		"283": {
			"sourceFileName": "src/common/utils/resolver.ts",
			"qualifiedName": "resolveNativeScriptHash"
		},
		"284": {
			"sourceFileName": "src/common/utils/resolver.ts",
			"qualifiedName": "resolveNativeScriptHash"
		},
		"285": {
			"sourceFileName": "src/common/utils/resolver.ts",
			"qualifiedName": "script"
		},
		"286": {
			"sourceFileName": "src/common/utils/resolver.ts",
			"qualifiedName": "resolvePaymentKeyHash"
		},
		"287": {
			"sourceFileName": "src/common/utils/resolver.ts",
			"qualifiedName": "resolvePaymentKeyHash"
		},
		"288": {
			"sourceFileName": "src/common/utils/resolver.ts",
			"qualifiedName": "bech32"
		},
		"289": {
			"sourceFileName": "src/common/utils/resolver.ts",
			"qualifiedName": "resolvePlutusScriptAddress"
		},
		"290": {
			"sourceFileName": "src/common/utils/resolver.ts",
			"qualifiedName": "resolvePlutusScriptAddress"
		},
		"291": {
			"sourceFileName": "src/common/utils/resolver.ts",
			"qualifiedName": "script"
		},
		"292": {
			"sourceFileName": "src/common/utils/resolver.ts",
			"qualifiedName": "networkId"
		},
		"293": {
			"sourceFileName": "src/common/utils/resolver.ts",
			"qualifiedName": "resolvePlutusScriptHash"
		},
		"294": {
			"sourceFileName": "src/common/utils/resolver.ts",
			"qualifiedName": "resolvePlutusScriptHash"
		},
		"295": {
			"sourceFileName": "src/common/utils/resolver.ts",
			"qualifiedName": "bech32"
		},
		"296": {
			"sourceFileName": "src/common/utils/resolver.ts",
			"qualifiedName": "resolvePoolId"
		},
		"297": {
			"sourceFileName": "src/common/utils/resolver.ts",
			"qualifiedName": "resolvePoolId"
		},
		"298": {
			"sourceFileName": "src/common/utils/resolver.ts",
			"qualifiedName": "hash"
		},
		"299": {
			"sourceFileName": "src/common/utils/resolver.ts",
			"qualifiedName": "resolvePrivateKey"
		},
		"300": {
			"sourceFileName": "src/common/utils/resolver.ts",
			"qualifiedName": "resolvePrivateKey"
		},
		"301": {
			"sourceFileName": "src/common/utils/resolver.ts",
			"qualifiedName": "words"
		},
		"302": {
			"sourceFileName": "src/common/utils/resolver.ts",
			"qualifiedName": "resolveScriptRef"
		},
		"303": {
			"sourceFileName": "src/common/utils/resolver.ts",
			"qualifiedName": "resolveScriptRef"
		},
		"304": {
			"sourceFileName": "src/common/utils/resolver.ts",
			"qualifiedName": "script"
		},
		"305": {
			"sourceFileName": "src/common/utils/resolver.ts",
			"qualifiedName": "resolveSlotNo"
		},
		"306": {
			"sourceFileName": "src/common/utils/resolver.ts",
			"qualifiedName": "resolveSlotNo"
		},
		"307": {
			"sourceFileName": "src/common/utils/resolver.ts",
			"qualifiedName": "network"
		},
		"308": {
			"sourceFileName": "src/common/utils/resolver.ts",
			"qualifiedName": "milliseconds"
		},
		"309": {
			"sourceFileName": "src/common/utils/resolver.ts",
			"qualifiedName": "resolveRewardAddress"
		},
		"310": {
			"sourceFileName": "src/common/utils/resolver.ts",
			"qualifiedName": "resolveRewardAddress"
		},
		"311": {
			"sourceFileName": "src/common/utils/resolver.ts",
			"qualifiedName": "bech32"
		},
		"312": {
			"sourceFileName": "src/common/utils/resolver.ts",
			"qualifiedName": "resolveStakeKeyHash"
		},
		"313": {
			"sourceFileName": "src/common/utils/resolver.ts",
			"qualifiedName": "resolveStakeKeyHash"
		},
		"314": {
			"sourceFileName": "src/common/utils/resolver.ts",
			"qualifiedName": "bech32"
		},
		"315": {
			"sourceFileName": "src/common/utils/resolver.ts",
			"qualifiedName": "resolveTxFees"
		},
		"316": {
			"sourceFileName": "src/common/utils/resolver.ts",
			"qualifiedName": "resolveTxFees"
		},
		"317": {
			"sourceFileName": "src/common/utils/resolver.ts",
			"qualifiedName": "txSize"
		},
		"318": {
			"sourceFileName": "src/common/utils/resolver.ts",
			"qualifiedName": "minFeeA"
		},
		"319": {
			"sourceFileName": "src/common/utils/resolver.ts",
			"qualifiedName": "minFeeB"
		},
		"320": {
			"sourceFileName": "src/common/utils/resolver.ts",
			"qualifiedName": "resolveTxHash"
		},
		"321": {
			"sourceFileName": "src/common/utils/resolver.ts",
			"qualifiedName": "resolveTxHash"
		},
		"322": {
			"sourceFileName": "src/common/utils/resolver.ts",
			"qualifiedName": "txHex"
		},
		"323": {
			"sourceFileName": "src/common/utils/parser.ts",
			"qualifiedName": "parseAssetUnit"
		},
		"324": {
			"sourceFileName": "src/common/utils/parser.ts",
			"qualifiedName": "parseAssetUnit"
		},
		"325": {
			"sourceFileName": "src/common/utils/parser.ts",
			"qualifiedName": "unit"
		},
		"326": {
			"sourceFileName": "src/common/utils/parser.ts",
			"qualifiedName": "__object"
		},
		"327": {
			"sourceFileName": "src/common/utils/parser.ts",
			"qualifiedName": "__object.policyId"
		},
		"328": {
			"sourceFileName": "src/common/utils/parser.ts",
			"qualifiedName": "__object.assetName"
		},
		"329": {
			"sourceFileName": "src/common/utils/parser.ts",
			"qualifiedName": "parseHttpError"
		},
		"330": {
			"sourceFileName": "src/common/utils/parser.ts",
			"qualifiedName": "parseHttpError"
		},
		"331": {
			"sourceFileName": "src/common/utils/parser.ts",
			"qualifiedName": "error"
		},
		"332": {
			"sourceFileName": "src/core/CIP2.ts",
			"qualifiedName": "keepRelevant"
		},
		"333": {
			"sourceFileName": "src/core/CIP2.ts",
			"qualifiedName": "keepRelevant"
		},
		"334": {
			"sourceFileName": "src/core/CIP2.ts",
			"qualifiedName": "requestedOutputSet"
		},
		"335": {
			"sourceFileName": "src/core/CIP2.ts",
			"qualifiedName": "initialUTxOSet"
		},
		"336": {
			"sourceFileName": "src/core/CIP2.ts",
			"qualifiedName": "minimumLovelaceRequired"
		},
		"337": {
			"sourceFileName": "src/core/CIP2.ts",
			"qualifiedName": "largestFirst"
		},
		"338": {
			"sourceFileName": "src/core/CIP2.ts",
			"qualifiedName": "largestFirst"
		},
		"339": {
			"sourceFileName": "src/core/CIP2.ts",
			"qualifiedName": "lovelace"
		},
		"340": {
			"sourceFileName": "src/core/CIP2.ts",
			"qualifiedName": "initialUTxOSet"
		},
		"341": {
			"sourceFileName": "src/core/CIP2.ts",
			"qualifiedName": "includeTxFees"
		},
		"342": {
			"sourceFileName": "src/core/CIP2.ts",
			"qualifiedName": "__3"
		},
		"343": {
			"sourceFileName": "src/core/CIP2.ts",
			"qualifiedName": "largestFirstMultiAsset"
		},
		"344": {
			"sourceFileName": "src/core/CIP2.ts",
			"qualifiedName": "largestFirstMultiAsset"
		},
		"345": {
			"sourceFileName": "src/core/CIP2.ts",
			"qualifiedName": "requestedOutputSet"
		},
		"346": {
			"sourceFileName": "src/core/CIP2.ts",
			"qualifiedName": "initialUTxOSet"
		},
		"347": {
			"sourceFileName": "src/core/CIP2.ts",
			"qualifiedName": "includeTxFees"
		},
		"348": {
			"sourceFileName": "src/core/CIP2.ts",
			"qualifiedName": "parameters"
		},
		"349": {
			"sourceFileName": "src/providers/blockfrost.provider.ts",
			"qualifiedName": "BlockfrostProvider"
		},
		"350": {
			"sourceFileName": "src/providers/blockfrost.provider.ts",
			"qualifiedName": "BlockfrostProvider.__constructor"
		},
		"351": {
			"sourceFileName": "src/providers/blockfrost.provider.ts",
			"qualifiedName": "BlockfrostProvider"
		},
		"352": {
			"sourceFileName": "src/providers/blockfrost.provider.ts",
			"qualifiedName": "baseUrl"
		},
		"353": {
			"sourceFileName": "src/providers/blockfrost.provider.ts",
			"qualifiedName": "BlockfrostProvider"
		},
		"354": {
			"sourceFileName": "src/providers/blockfrost.provider.ts",
			"qualifiedName": "projectId"
		},
		"355": {
			"sourceFileName": "src/providers/blockfrost.provider.ts",
			"qualifiedName": "version"
		},
		"356": {
			"sourceFileName": "src/providers/blockfrost.provider.ts",
			"qualifiedName": "BlockfrostProvider._axiosInstance"
		},
		"357": {
			"sourceFileName": "src/providers/blockfrost.provider.ts",
			"qualifiedName": "BlockfrostProvider.fetchAccountInfo"
		},
		"358": {
			"sourceFileName": "src/providers/blockfrost.provider.ts",
			"qualifiedName": "BlockfrostProvider.fetchAccountInfo"
		},
		"359": {
			"sourceFileName": "src/providers/blockfrost.provider.ts",
			"qualifiedName": "address"
		},
		"360": {
			"sourceFileName": "src/providers/blockfrost.provider.ts",
			"qualifiedName": "BlockfrostProvider.resolveScriptRef"
		},
		"361": {
			"sourceFileName": "src/providers/blockfrost.provider.ts",
			"qualifiedName": "BlockfrostProvider.resolveScriptRef"
		},
		"362": {
			"sourceFileName": "src/providers/blockfrost.provider.ts",
			"qualifiedName": "scriptHash"
		},
		"363": {
			"sourceFileName": "src/providers/blockfrost.provider.ts",
			"qualifiedName": "BlockfrostProvider.toUTxO"
		},
		"364": {
			"sourceFileName": "src/providers/blockfrost.provider.ts",
			"qualifiedName": "BlockfrostProvider.toUTxO"
		},
		"365": {
			"sourceFileName": "src/providers/blockfrost.provider.ts",
			"qualifiedName": "bfUTxO"
		},
		"366": {
			"sourceFileName": "src/providers/blockfrost.provider.ts",
			"qualifiedName": "tx_hash"
		},
		"367": {
			"sourceFileName": "src/providers/blockfrost.provider.ts",
			"qualifiedName": "BlockfrostProvider.fetchAddressUTxOs"
		},
		"368": {
			"sourceFileName": "src/providers/blockfrost.provider.ts",
			"qualifiedName": "BlockfrostProvider.fetchAddressUTxOs"
		},
		"369": {
			"sourceFileName": "src/providers/blockfrost.provider.ts",
			"qualifiedName": "address"
		},
		"370": {
			"sourceFileName": "src/providers/blockfrost.provider.ts",
			"qualifiedName": "asset"
		},
		"371": {
			"sourceFileName": "src/providers/blockfrost.provider.ts",
			"qualifiedName": "BlockfrostProvider.fetchAssetAddresses"
		},
		"372": {
			"sourceFileName": "src/providers/blockfrost.provider.ts",
			"qualifiedName": "BlockfrostProvider.fetchAssetAddresses"
		},
		"373": {
			"sourceFileName": "src/providers/blockfrost.provider.ts",
			"qualifiedName": "asset"
		},
		"374": {
			"sourceFileName": "src/providers/blockfrost.provider.ts",
			"qualifiedName": "__type"
		},
		"375": {
			"sourceFileName": "src/providers/blockfrost.provider.ts",
			"qualifiedName": "__type.address"
		},
		"376": {
			"sourceFileName": "src/providers/blockfrost.provider.ts",
			"qualifiedName": "__type.quantity"
		},
		"377": {
			"sourceFileName": "src/providers/blockfrost.provider.ts",
			"qualifiedName": "BlockfrostProvider.fetchAssetMetadata"
		},
		"378": {
			"sourceFileName": "src/providers/blockfrost.provider.ts",
			"qualifiedName": "BlockfrostProvider.fetchAssetMetadata"
		},
		"379": {
			"sourceFileName": "src/providers/blockfrost.provider.ts",
			"qualifiedName": "asset"
		},
		"380": {
			"sourceFileName": "src/providers/blockfrost.provider.ts",
			"qualifiedName": "BlockfrostProvider.fetchBlockInfo"
		},
		"381": {
			"sourceFileName": "src/providers/blockfrost.provider.ts",
			"qualifiedName": "BlockfrostProvider.fetchBlockInfo"
		},
		"382": {
			"sourceFileName": "src/providers/blockfrost.provider.ts",
			"qualifiedName": "hash"
		},
		"383": {
			"sourceFileName": "src/providers/blockfrost.provider.ts",
			"qualifiedName": "BlockfrostProvider.fetchCollectionAssets"
		},
		"384": {
			"sourceFileName": "src/providers/blockfrost.provider.ts",
			"qualifiedName": "BlockfrostProvider.fetchCollectionAssets"
		},
		"385": {
			"sourceFileName": "src/providers/blockfrost.provider.ts",
			"qualifiedName": "policyId"
		},
		"386": {
			"sourceFileName": "src/providers/blockfrost.provider.ts",
			"qualifiedName": "cursor"
		},
		"387": {
			"sourceFileName": "src/providers/blockfrost.provider.ts",
			"qualifiedName": "__type"
		},
		"388": {
			"sourceFileName": "src/providers/blockfrost.provider.ts",
			"qualifiedName": "__type.assets"
		},
		"389": {
			"sourceFileName": "src/providers/blockfrost.provider.ts",
			"qualifiedName": "__type.next"
		},
		"390": {
			"sourceFileName": "src/providers/blockfrost.provider.ts",
			"qualifiedName": "BlockfrostProvider.fetchHandleAddress"
		},
		"391": {
			"sourceFileName": "src/providers/blockfrost.provider.ts",
			"qualifiedName": "BlockfrostProvider.fetchHandleAddress"
		},
		"392": {
			"sourceFileName": "src/providers/blockfrost.provider.ts",
			"qualifiedName": "handle"
		},
		"393": {
			"sourceFileName": "src/providers/blockfrost.provider.ts",
			"qualifiedName": "BlockfrostProvider.fetchProtocolParameters"
		},
		"394": {
			"sourceFileName": "src/providers/blockfrost.provider.ts",
			"qualifiedName": "BlockfrostProvider.fetchProtocolParameters"
		},
		"395": {
			"sourceFileName": "src/providers/blockfrost.provider.ts",
			"qualifiedName": "epoch"
		},
		"396": {
			"sourceFileName": "src/providers/blockfrost.provider.ts",
			"qualifiedName": "BlockfrostProvider.fetchTxInfo"
		},
		"397": {
			"sourceFileName": "src/providers/blockfrost.provider.ts",
			"qualifiedName": "BlockfrostProvider.fetchTxInfo"
		},
		"398": {
			"sourceFileName": "src/providers/blockfrost.provider.ts",
			"qualifiedName": "hash"
		},
		"399": {
			"sourceFileName": "src/providers/blockfrost.provider.ts",
			"qualifiedName": "BlockfrostProvider.fetchUTxOs"
		},
		"400": {
			"sourceFileName": "src/providers/blockfrost.provider.ts",
			"qualifiedName": "BlockfrostProvider.fetchUTxOs"
		},
		"401": {
			"sourceFileName": "src/providers/blockfrost.provider.ts",
			"qualifiedName": "hash"
		},
		"402": {
			"sourceFileName": "src/providers/blockfrost.provider.ts",
			"qualifiedName": "BlockfrostProvider.onTxConfirmed"
		},
		"403": {
			"sourceFileName": "src/providers/blockfrost.provider.ts",
			"qualifiedName": "BlockfrostProvider.onTxConfirmed"
		},
		"404": {
			"sourceFileName": "src/providers/blockfrost.provider.ts",
			"qualifiedName": "txHash"
		},
		"405": {
			"sourceFileName": "src/providers/blockfrost.provider.ts",
			"qualifiedName": "callback"
		},
		"406": {
			"sourceFileName": "src/providers/blockfrost.provider.ts",
			"qualifiedName": "__type"
		},
		"407": {
			"sourceFileName": "src/providers/blockfrost.provider.ts",
			"qualifiedName": "__type"
		},
		"408": {
			"sourceFileName": "src/providers/blockfrost.provider.ts",
			"qualifiedName": "limit"
		},
		"409": {
			"sourceFileName": "src/providers/blockfrost.provider.ts",
			"qualifiedName": "BlockfrostProvider.submitTx"
		},
		"410": {
			"sourceFileName": "src/providers/blockfrost.provider.ts",
			"qualifiedName": "BlockfrostProvider.submitTx"
		},
		"411": {
			"sourceFileName": "src/providers/blockfrost.provider.ts",
			"qualifiedName": "tx"
		},
		"412": {
			"sourceFileName": "src/providers/blockfrost.provider.ts",
			"qualifiedName": "BlockfrostProvider.fetchPlutusScriptCBOR"
		},
		"413": {
			"sourceFileName": "src/providers/blockfrost.provider.ts",
			"qualifiedName": "BlockfrostProvider.fetchPlutusScriptCBOR"
		},
		"414": {
			"sourceFileName": "src/providers/blockfrost.provider.ts",
			"qualifiedName": "scriptHash"
		},
		"415": {
			"sourceFileName": "src/providers/blockfrost.provider.ts",
			"qualifiedName": "BlockfrostProvider.fetchNativeScriptJSON"
		},
		"416": {
			"sourceFileName": "src/providers/blockfrost.provider.ts",
			"qualifiedName": "BlockfrostProvider.fetchNativeScriptJSON"
		},
		"417": {
			"sourceFileName": "src/providers/blockfrost.provider.ts",
			"qualifiedName": "scriptHash"
		},
		"418": {
			"sourceFileName": "src/providers/infura.provider.ts",
			"qualifiedName": "InfuraProvider"
		},
		"419": {
			"sourceFileName": "src/providers/infura.provider.ts",
			"qualifiedName": "InfuraProvider.__constructor"
		},
		"420": {
			"sourceFileName": "src/providers/infura.provider.ts",
			"qualifiedName": "InfuraProvider"
		},
		"421": {
			"sourceFileName": "src/providers/infura.provider.ts",
			"qualifiedName": "projectId"
		},
		"422": {
			"sourceFileName": "src/providers/infura.provider.ts",
			"qualifiedName": "projectSecret"
		},
		"423": {
			"sourceFileName": "src/providers/infura.provider.ts",
			"qualifiedName": "options"
		},
		"424": {
			"sourceFileName": "src/providers/infura.provider.ts",
			"qualifiedName": "InfuraProvider._axiosInstance"
		},
		"425": {
			"sourceFileName": "src/providers/infura.provider.ts",
			"qualifiedName": "InfuraProvider.uploadContent"
		},
		"426": {
			"sourceFileName": "src/providers/infura.provider.ts",
			"qualifiedName": "InfuraProvider.uploadContent"
		},
		"427": {
			"sourceFileName": "src/providers/infura.provider.ts",
			"qualifiedName": "content"
		},
		"428": {
			"sourceFileName": "src/providers/infura.provider.ts",
			"qualifiedName": "recursive"
		},
		"429": {
			"sourceFileName": "src/providers/koios.provider.ts",
			"qualifiedName": "KoiosProvider"
		},
		"430": {
			"sourceFileName": "src/providers/koios.provider.ts",
			"qualifiedName": "KoiosProvider.__constructor"
		},
		"431": {
			"sourceFileName": "src/providers/koios.provider.ts",
			"qualifiedName": "KoiosProvider"
		},
		"432": {
			"sourceFileName": "src/providers/koios.provider.ts",
			"qualifiedName": "baseUrl"
		},
		"433": {
			"sourceFileName": "src/providers/koios.provider.ts",
			"qualifiedName": "KoiosProvider"
		},
		"434": {
			"sourceFileName": "src/providers/koios.provider.ts",
			"qualifiedName": "network"
		},
		"435": {
			"sourceFileName": "src/providers/koios.provider.ts",
			"qualifiedName": "token"
		},
		"436": {
			"sourceFileName": "src/providers/koios.provider.ts",
			"qualifiedName": "version"
		},
		"437": {
			"sourceFileName": "src/providers/koios.provider.ts",
			"qualifiedName": "KoiosProvider._axiosInstance"
		},
		"438": {
			"sourceFileName": "src/providers/koios.provider.ts",
			"qualifiedName": "KoiosProvider.fetchAccountInfo"
		},
		"439": {
			"sourceFileName": "src/providers/koios.provider.ts",
			"qualifiedName": "KoiosProvider.fetchAccountInfo"
		},
		"440": {
			"sourceFileName": "src/providers/koios.provider.ts",
			"qualifiedName": "address"
		},
		"441": {
			"sourceFileName": "src/providers/koios.provider.ts",
			"qualifiedName": "KoiosProvider.fetchAddressUTxOs"
		},
		"442": {
			"sourceFileName": "src/providers/koios.provider.ts",
			"qualifiedName": "KoiosProvider.fetchAddressUTxOs"
		},
		"443": {
			"sourceFileName": "src/providers/koios.provider.ts",
			"qualifiedName": "address"
		},
		"444": {
			"sourceFileName": "src/providers/koios.provider.ts",
			"qualifiedName": "asset"
		},
		"445": {
			"sourceFileName": "src/providers/koios.provider.ts",
			"qualifiedName": "KoiosProvider.fetchAssetAddresses"
		},
		"446": {
			"sourceFileName": "src/providers/koios.provider.ts",
			"qualifiedName": "KoiosProvider.fetchAssetAddresses"
		},
		"447": {
			"sourceFileName": "src/providers/koios.provider.ts",
			"qualifiedName": "asset"
		},
		"448": {
			"sourceFileName": "src/providers/koios.provider.ts",
			"qualifiedName": "__type"
		},
		"449": {
			"sourceFileName": "src/providers/koios.provider.ts",
			"qualifiedName": "__type.address"
		},
		"450": {
			"sourceFileName": "src/providers/koios.provider.ts",
			"qualifiedName": "__type.quantity"
		},
		"451": {
			"sourceFileName": "src/providers/koios.provider.ts",
			"qualifiedName": "KoiosProvider.fetchAssetMetadata"
		},
		"452": {
			"sourceFileName": "src/providers/koios.provider.ts",
			"qualifiedName": "KoiosProvider.fetchAssetMetadata"
		},
		"453": {
			"sourceFileName": "src/providers/koios.provider.ts",
			"qualifiedName": "asset"
		},
		"454": {
			"sourceFileName": "src/providers/koios.provider.ts",
			"qualifiedName": "KoiosProvider.fetchBlockInfo"
		},
		"455": {
			"sourceFileName": "src/providers/koios.provider.ts",
			"qualifiedName": "KoiosProvider.fetchBlockInfo"
		},
		"456": {
			"sourceFileName": "src/providers/koios.provider.ts",
			"qualifiedName": "hash"
		},
		"457": {
			"sourceFileName": "src/providers/koios.provider.ts",
			"qualifiedName": "KoiosProvider.fetchCollectionAssets"
		},
		"458": {
			"sourceFileName": "src/providers/koios.provider.ts",
			"qualifiedName": "KoiosProvider.fetchCollectionAssets"
		},
		"459": {
			"sourceFileName": "src/providers/koios.provider.ts",
			"qualifiedName": "policyId"
		},
		"460": {
			"sourceFileName": "src/providers/koios.provider.ts",
			"qualifiedName": "cursor"
		},
		"461": {
			"sourceFileName": "src/providers/koios.provider.ts",
			"qualifiedName": "__type"
		},
		"462": {
			"sourceFileName": "src/providers/koios.provider.ts",
			"qualifiedName": "__type.assets"
		},
		"463": {
			"sourceFileName": "src/providers/koios.provider.ts",
			"qualifiedName": "__type.next"
		},
		"464": {
			"sourceFileName": "src/providers/koios.provider.ts",
			"qualifiedName": "KoiosProvider.fetchHandleAddress"
		},
		"465": {
			"sourceFileName": "src/providers/koios.provider.ts",
			"qualifiedName": "KoiosProvider.fetchHandleAddress"
		},
		"466": {
			"sourceFileName": "src/providers/koios.provider.ts",
			"qualifiedName": "handle"
		},
		"467": {
			"sourceFileName": "src/providers/koios.provider.ts",
			"qualifiedName": "KoiosProvider.fetchProtocolParameters"
		},
		"468": {
			"sourceFileName": "src/providers/koios.provider.ts",
			"qualifiedName": "KoiosProvider.fetchProtocolParameters"
		},
		"469": {
			"sourceFileName": "src/providers/koios.provider.ts",
			"qualifiedName": "epoch"
		},
		"470": {
			"sourceFileName": "src/providers/koios.provider.ts",
			"qualifiedName": "KoiosProvider.fetchTxInfo"
		},
		"471": {
			"sourceFileName": "src/providers/koios.provider.ts",
			"qualifiedName": "KoiosProvider.fetchTxInfo"
		},
		"472": {
			"sourceFileName": "src/providers/koios.provider.ts",
			"qualifiedName": "hash"
		},
		"473": {
			"sourceFileName": "src/providers/koios.provider.ts",
			"qualifiedName": "KoiosProvider.fetchUTxOs"
		},
		"474": {
			"sourceFileName": "src/providers/koios.provider.ts",
			"qualifiedName": "KoiosProvider.fetchUTxOs"
		},
		"475": {
			"sourceFileName": "src/providers/koios.provider.ts",
			"qualifiedName": "hash"
		},
		"476": {
			"sourceFileName": "src/providers/koios.provider.ts",
			"qualifiedName": "KoiosProvider.onTxConfirmed"
		},
		"477": {
			"sourceFileName": "src/providers/koios.provider.ts",
			"qualifiedName": "KoiosProvider.onTxConfirmed"
		},
		"478": {
			"sourceFileName": "src/providers/koios.provider.ts",
			"qualifiedName": "txHash"
		},
		"479": {
			"sourceFileName": "src/providers/koios.provider.ts",
			"qualifiedName": "callback"
		},
		"480": {
			"sourceFileName": "src/providers/koios.provider.ts",
			"qualifiedName": "__type"
		},
		"481": {
			"sourceFileName": "src/providers/koios.provider.ts",
			"qualifiedName": "__type"
		},
		"482": {
			"sourceFileName": "src/providers/koios.provider.ts",
			"qualifiedName": "limit"
		},
		"483": {
			"sourceFileName": "src/providers/koios.provider.ts",
			"qualifiedName": "KoiosProvider.submitTx"
		},
		"484": {
			"sourceFileName": "src/providers/koios.provider.ts",
			"qualifiedName": "KoiosProvider.submitTx"
		},
		"485": {
			"sourceFileName": "src/providers/koios.provider.ts",
			"qualifiedName": "tx"
		},
		"486": {
			"sourceFileName": "src/providers/koios.provider.ts",
			"qualifiedName": "KoiosProvider.toUTxO"
		},
		"487": {
			"sourceFileName": "src/providers/koios.provider.ts",
			"qualifiedName": "KoiosProvider.toUTxO"
		},
		"488": {
			"sourceFileName": "src/providers/koios.provider.ts",
			"qualifiedName": "utxo"
		},
		"489": {
			"sourceFileName": "src/providers/koios.provider.ts",
			"qualifiedName": "address"
		},
		"490": {
			"sourceFileName": "src/providers/koios.provider.ts",
			"qualifiedName": "KoiosProvider.resolveScriptRef"
		},
		"491": {
			"sourceFileName": "src/providers/koios.provider.ts",
			"qualifiedName": "KoiosProvider.resolveScriptRef"
		},
		"492": {
			"sourceFileName": "src/providers/koios.provider.ts",
			"qualifiedName": "kScriptRef"
		},
		"493": {
			"sourceFileName": "src/providers/ogmios.provider.ts",
			"qualifiedName": "OgmiosProvider"
		},
		"494": {
			"sourceFileName": "src/providers/ogmios.provider.ts",
			"qualifiedName": "OgmiosProvider.__constructor"
		},
		"495": {
			"sourceFileName": "src/providers/ogmios.provider.ts",
			"qualifiedName": "OgmiosProvider"
		},
		"496": {
			"sourceFileName": "src/providers/ogmios.provider.ts",
			"qualifiedName": "baseUrl"
		},
		"497": {
			"sourceFileName": "src/providers/ogmios.provider.ts",
			"qualifiedName": "OgmiosProvider"
		},
		"498": {
			"sourceFileName": "src/providers/ogmios.provider.ts",
			"qualifiedName": "network"
		},
		"499": {
			"sourceFileName": "src/providers/ogmios.provider.ts",
			"qualifiedName": "OgmiosProvider._baseUrl"
		},
		"500": {
			"sourceFileName": "src/providers/ogmios.provider.ts",
			"qualifiedName": "OgmiosProvider.evaluateTx"
		},
		"501": {
			"sourceFileName": "src/providers/ogmios.provider.ts",
			"qualifiedName": "OgmiosProvider.evaluateTx"
		},
		"502": {
			"sourceFileName": "src/providers/ogmios.provider.ts",
			"qualifiedName": "tx"
		},
		"503": {
			"sourceFileName": "src/providers/ogmios.provider.ts",
			"qualifiedName": "OgmiosProvider.onNextTx"
		},
		"504": {
			"sourceFileName": "src/providers/ogmios.provider.ts",
			"qualifiedName": "OgmiosProvider.onNextTx"
		},
		"505": {
			"sourceFileName": "src/providers/ogmios.provider.ts",
			"qualifiedName": "callback"
		},
		"506": {
			"sourceFileName": "src/providers/ogmios.provider.ts",
			"qualifiedName": "__type"
		},
		"507": {
			"sourceFileName": "src/providers/ogmios.provider.ts",
			"qualifiedName": "__type"
		},
		"508": {
			"sourceFileName": "src/providers/ogmios.provider.ts",
			"qualifiedName": "tx"
		},
		"509": {
			"sourceFileName": "src/providers/ogmios.provider.ts",
			"qualifiedName": "__type"
		},
		"510": {
			"sourceFileName": "src/providers/ogmios.provider.ts",
			"qualifiedName": "__type"
		},
		"511": {
			"sourceFileName": "src/providers/ogmios.provider.ts",
			"qualifiedName": "OgmiosProvider.submitTx"
		},
		"512": {
			"sourceFileName": "src/providers/ogmios.provider.ts",
			"qualifiedName": "OgmiosProvider.submitTx"
		},
		"513": {
			"sourceFileName": "src/providers/ogmios.provider.ts",
			"qualifiedName": "tx"
		},
		"514": {
			"sourceFileName": "src/providers/ogmios.provider.ts",
			"qualifiedName": "OgmiosProvider.open"
		},
		"515": {
			"sourceFileName": "src/providers/ogmios.provider.ts",
			"qualifiedName": "OgmiosProvider.open"
		},
		"516": {
			"sourceFileName": "src/providers/ogmios.provider.ts",
			"qualifiedName": "OgmiosProvider.send"
		},
		"517": {
			"sourceFileName": "src/providers/ogmios.provider.ts",
			"qualifiedName": "OgmiosProvider.send"
		},
		"518": {
			"sourceFileName": "src/providers/ogmios.provider.ts",
			"qualifiedName": "client"
		},
		"519": {
			"sourceFileName": "src/providers/ogmios.provider.ts",
			"qualifiedName": "methodname"
		},
		"520": {
			"sourceFileName": "src/providers/ogmios.provider.ts",
			"qualifiedName": "args"
		},
		"521": {
			"sourceFileName": "src/providers/maestro.provider.ts",
			"qualifiedName": "MaestroSupportedNetworks"
		},
		"522": {
			"sourceFileName": "src/providers/maestro.provider.ts",
			"qualifiedName": "MaestroConfig"
		},
		"523": {
			"sourceFileName": "src/providers/maestro.provider.ts",
			"qualifiedName": "MaestroConfig.network"
		},
		"524": {
			"sourceFileName": "src/providers/maestro.provider.ts",
			"qualifiedName": "MaestroConfig.apiKey"
		},
		"525": {
			"sourceFileName": "src/providers/maestro.provider.ts",
			"qualifiedName": "MaestroConfig.turboSubmit"
		},
		"526": {
			"sourceFileName": "src/providers/maestro.provider.ts",
			"qualifiedName": "MaestroProvider"
		},
		"527": {
			"sourceFileName": "src/providers/maestro.provider.ts",
			"qualifiedName": "MaestroProvider.__constructor"
		},
		"528": {
			"sourceFileName": "src/providers/maestro.provider.ts",
			"qualifiedName": "MaestroProvider"
		},
		"529": {
			"sourceFileName": "src/providers/maestro.provider.ts",
			"qualifiedName": "__0"
		},
		"530": {
			"sourceFileName": "src/providers/maestro.provider.ts",
			"qualifiedName": "MaestroProvider._axiosInstance"
		},
		"531": {
			"sourceFileName": "src/providers/maestro.provider.ts",
			"qualifiedName": "MaestroProvider._amountsAsStrings"
		},
		"532": {
			"sourceFileName": "src/providers/maestro.provider.ts",
			"qualifiedName": "__object"
		},
		"533": {
			"sourceFileName": "src/providers/maestro.provider.ts",
			"qualifiedName": "__object.headers"
		},
		"534": {
			"sourceFileName": "src/providers/maestro.provider.ts",
			"qualifiedName": "__object"
		},
		"535": {
			"sourceFileName": "src/providers/maestro.provider.ts",
			"qualifiedName": "__object.amounts-as-strings"
		},
		"536": {
			"sourceFileName": "src/providers/maestro.provider.ts",
			"qualifiedName": "MaestroProvider.submitUrl"
		},
		"537": {
			"sourceFileName": "src/providers/maestro.provider.ts",
			"qualifiedName": "MaestroProvider.evaluateTx"
		},
		"538": {
			"sourceFileName": "src/providers/maestro.provider.ts",
			"qualifiedName": "MaestroProvider.evaluateTx"
		},
		"539": {
			"sourceFileName": "src/providers/maestro.provider.ts",
			"qualifiedName": "cbor"
		},
		"540": {
			"sourceFileName": "src/providers/maestro.provider.ts",
			"qualifiedName": "MaestroProvider.fetchAccountInfo"
		},
		"541": {
			"sourceFileName": "src/providers/maestro.provider.ts",
			"qualifiedName": "MaestroProvider.fetchAccountInfo"
		},
		"542": {
			"sourceFileName": "src/providers/maestro.provider.ts",
			"qualifiedName": "address"
		},
		"543": {
			"sourceFileName": "src/providers/maestro.provider.ts",
			"qualifiedName": "MaestroProvider.fetchAddressUTxOs"
		},
		"544": {
			"sourceFileName": "src/providers/maestro.provider.ts",
			"qualifiedName": "MaestroProvider.fetchAddressUTxOs"
		},
		"545": {
			"sourceFileName": "src/providers/maestro.provider.ts",
			"qualifiedName": "address"
		},
		"546": {
			"sourceFileName": "src/providers/maestro.provider.ts",
			"qualifiedName": "asset"
		},
		"547": {
			"sourceFileName": "src/providers/maestro.provider.ts",
			"qualifiedName": "MaestroProvider.fetchAssetAddresses"
		},
		"548": {
			"sourceFileName": "src/providers/maestro.provider.ts",
			"qualifiedName": "MaestroProvider.fetchAssetAddresses"
		},
		"549": {
			"sourceFileName": "src/providers/maestro.provider.ts",
			"qualifiedName": "asset"
		},
		"550": {
			"sourceFileName": "src/providers/maestro.provider.ts",
			"qualifiedName": "__type"
		},
		"551": {
			"sourceFileName": "src/providers/maestro.provider.ts",
			"qualifiedName": "__type.address"
		},
		"552": {
			"sourceFileName": "src/providers/maestro.provider.ts",
			"qualifiedName": "__type.quantity"
		},
		"553": {
			"sourceFileName": "src/providers/maestro.provider.ts",
			"qualifiedName": "MaestroProvider.fetchAssetMetadata"
		},
		"554": {
			"sourceFileName": "src/providers/maestro.provider.ts",
			"qualifiedName": "MaestroProvider.fetchAssetMetadata"
		},
		"555": {
			"sourceFileName": "src/providers/maestro.provider.ts",
			"qualifiedName": "asset"
		},
		"556": {
			"sourceFileName": "src/providers/maestro.provider.ts",
			"qualifiedName": "MaestroProvider.fetchBlockInfo"
		},
		"557": {
			"sourceFileName": "src/providers/maestro.provider.ts",
			"qualifiedName": "MaestroProvider.fetchBlockInfo"
		},
		"558": {
			"sourceFileName": "src/providers/maestro.provider.ts",
			"qualifiedName": "hash"
		},
		"559": {
			"sourceFileName": "src/providers/maestro.provider.ts",
			"qualifiedName": "MaestroProvider.fetchCollectionAssets"
		},
		"560": {
			"sourceFileName": "src/providers/maestro.provider.ts",
			"qualifiedName": "MaestroProvider.fetchCollectionAssets"
		},
		"561": {
			"sourceFileName": "src/providers/maestro.provider.ts",
			"qualifiedName": "policyId"
		},
		"562": {
			"sourceFileName": "src/providers/maestro.provider.ts",
			"qualifiedName": "cursor"
		},
		"563": {
			"sourceFileName": "src/providers/maestro.provider.ts",
			"qualifiedName": "__type"
		},
		"564": {
			"sourceFileName": "src/providers/maestro.provider.ts",
			"qualifiedName": "__type.assets"
		},
		"565": {
			"sourceFileName": "src/providers/maestro.provider.ts",
			"qualifiedName": "__type.next"
		},
		"566": {
			"sourceFileName": "src/providers/maestro.provider.ts",
			"qualifiedName": "MaestroProvider.fetchHandleAddress"
		},
		"567": {
			"sourceFileName": "src/providers/maestro.provider.ts",
			"qualifiedName": "MaestroProvider.fetchHandleAddress"
		},
		"568": {
			"sourceFileName": "src/providers/maestro.provider.ts",
			"qualifiedName": "handle"
		},
		"569": {
			"sourceFileName": "src/providers/maestro.provider.ts",
			"qualifiedName": "MaestroProvider.fetchProtocolParameters"
		},
		"570": {
			"sourceFileName": "src/providers/maestro.provider.ts",
			"qualifiedName": "MaestroProvider.fetchProtocolParameters"
		},
		"571": {
			"sourceFileName": "src/providers/maestro.provider.ts",
			"qualifiedName": "epoch"
		},
		"572": {
			"sourceFileName": "src/providers/maestro.provider.ts",
			"qualifiedName": "MaestroProvider.fetchTxInfo"
		},
		"573": {
			"sourceFileName": "src/providers/maestro.provider.ts",
			"qualifiedName": "MaestroProvider.fetchTxInfo"
		},
		"574": {
			"sourceFileName": "src/providers/maestro.provider.ts",
			"qualifiedName": "hash"
		},
		"575": {
			"sourceFileName": "src/providers/maestro.provider.ts",
			"qualifiedName": "MaestroProvider.fetchUTxOs"
		},
		"576": {
			"sourceFileName": "src/providers/maestro.provider.ts",
			"qualifiedName": "MaestroProvider.fetchUTxOs"
		},
		"577": {
			"sourceFileName": "src/providers/maestro.provider.ts",
			"qualifiedName": "hash"
		},
		"578": {
			"sourceFileName": "src/providers/maestro.provider.ts",
			"qualifiedName": "MaestroProvider.onTxConfirmed"
		},
		"579": {
			"sourceFileName": "src/providers/maestro.provider.ts",
			"qualifiedName": "MaestroProvider.onTxConfirmed"
		},
		"580": {
			"sourceFileName": "src/providers/maestro.provider.ts",
			"qualifiedName": "txHash"
		},
		"581": {
			"sourceFileName": "src/providers/maestro.provider.ts",
			"qualifiedName": "callback"
		},
		"582": {
			"sourceFileName": "src/providers/maestro.provider.ts",
			"qualifiedName": "__type"
		},
		"583": {
			"sourceFileName": "src/providers/maestro.provider.ts",
			"qualifiedName": "__type"
		},
		"584": {
			"sourceFileName": "src/providers/maestro.provider.ts",
			"qualifiedName": "limit"
		},
		"585": {
			"sourceFileName": "src/providers/maestro.provider.ts",
			"qualifiedName": "MaestroProvider.submitTx"
		},
		"586": {
			"sourceFileName": "src/providers/maestro.provider.ts",
			"qualifiedName": "MaestroProvider.submitTx"
		},
		"587": {
			"sourceFileName": "src/providers/maestro.provider.ts",
			"qualifiedName": "tx"
		},
		"588": {
			"sourceFileName": "src/providers/maestro.provider.ts",
			"qualifiedName": "MaestroProvider.toUTxO"
		},
		"589": {
			"sourceFileName": "src/providers/maestro.provider.ts",
			"qualifiedName": "MaestroProvider.toUTxO"
		},
		"590": {
			"sourceFileName": "src/providers/maestro.provider.ts",
			"qualifiedName": "utxo"
		},
		"591": {
			"sourceFileName": "src/providers/maestro.provider.ts",
			"qualifiedName": "MaestroProvider.resolveScript"
		},
		"592": {
			"sourceFileName": "src/providers/maestro.provider.ts",
			"qualifiedName": "MaestroProvider.resolveScript"
		},
		"593": {
			"sourceFileName": "src/providers/maestro.provider.ts",
			"qualifiedName": "utxo"
		},
		"594": {
			"sourceFileName": "src/providers/yaci.provider.ts",
			"qualifiedName": "YaciProvider"
		},
		"595": {
			"sourceFileName": "src/providers/yaci.provider.ts",
			"qualifiedName": "YaciProvider.__constructor"
		},
		"596": {
			"sourceFileName": "src/providers/yaci.provider.ts",
			"qualifiedName": "YaciProvider"
		},
		"597": {
			"sourceFileName": "src/providers/yaci.provider.ts",
			"qualifiedName": "baseUrl"
		},
		"598": {
			"sourceFileName": "src/providers/yaci.provider.ts",
			"qualifiedName": "YaciProvider._axiosInstance"
		},
		"599": {
			"sourceFileName": "src/providers/yaci.provider.ts",
			"qualifiedName": "YaciProvider.fetchAccountInfo"
		},
		"600": {
			"sourceFileName": "src/providers/yaci.provider.ts",
			"qualifiedName": "YaciProvider.fetchAccountInfo"
		},
		"601": {
			"sourceFileName": "src/providers/yaci.provider.ts",
			"qualifiedName": "address"
		},
		"602": {
			"sourceFileName": "src/providers/yaci.provider.ts",
			"qualifiedName": "YaciProvider.resolveScriptRef"
		},
		"603": {
			"sourceFileName": "src/providers/yaci.provider.ts",
			"qualifiedName": "YaciProvider.resolveScriptRef"
		},
		"604": {
			"sourceFileName": "src/providers/yaci.provider.ts",
			"qualifiedName": "scriptHash"
		},
		"605": {
			"sourceFileName": "src/providers/yaci.provider.ts",
			"qualifiedName": "YaciProvider.toUTxO"
		},
		"606": {
			"sourceFileName": "src/providers/yaci.provider.ts",
			"qualifiedName": "YaciProvider.toUTxO"
		},
		"607": {
			"sourceFileName": "src/providers/yaci.provider.ts",
			"qualifiedName": "bfUTxO"
		},
		"608": {
			"sourceFileName": "src/providers/yaci.provider.ts",
			"qualifiedName": "tx_hash"
		},
		"609": {
			"sourceFileName": "src/providers/yaci.provider.ts",
			"qualifiedName": "YaciProvider.fetchAddressUTxOs"
		},
		"610": {
			"sourceFileName": "src/providers/yaci.provider.ts",
			"qualifiedName": "YaciProvider.fetchAddressUTxOs"
		},
		"611": {
			"sourceFileName": "src/providers/yaci.provider.ts",
			"qualifiedName": "address"
		},
		"612": {
			"sourceFileName": "src/providers/yaci.provider.ts",
			"qualifiedName": "asset"
		},
		"613": {
			"sourceFileName": "src/providers/yaci.provider.ts",
			"qualifiedName": "YaciProvider.fetchAssetAddresses"
		},
		"614": {
			"sourceFileName": "src/providers/yaci.provider.ts",
			"qualifiedName": "YaciProvider.fetchAssetAddresses"
		},
		"615": {
			"sourceFileName": "src/providers/yaci.provider.ts",
			"qualifiedName": "asset"
		},
		"616": {
			"sourceFileName": "src/providers/yaci.provider.ts",
			"qualifiedName": "__type"
		},
		"617": {
			"sourceFileName": "src/providers/yaci.provider.ts",
			"qualifiedName": "__type.address"
		},
		"618": {
			"sourceFileName": "src/providers/yaci.provider.ts",
			"qualifiedName": "__type.quantity"
		},
		"619": {
			"sourceFileName": "src/providers/yaci.provider.ts",
			"qualifiedName": "YaciProvider.fetchAssetMetadata"
		},
		"620": {
			"sourceFileName": "src/providers/yaci.provider.ts",
			"qualifiedName": "YaciProvider.fetchAssetMetadata"
		},
		"621": {
			"sourceFileName": "src/providers/yaci.provider.ts",
			"qualifiedName": "asset"
		},
		"622": {
			"sourceFileName": "src/providers/yaci.provider.ts",
			"qualifiedName": "YaciProvider.fetchBlockInfo"
		},
		"623": {
			"sourceFileName": "src/providers/yaci.provider.ts",
			"qualifiedName": "YaciProvider.fetchBlockInfo"
		},
		"624": {
			"sourceFileName": "src/providers/yaci.provider.ts",
			"qualifiedName": "hash"
		},
		"625": {
			"sourceFileName": "src/providers/yaci.provider.ts",
			"qualifiedName": "YaciProvider.fetchCollectionAssets"
		},
		"626": {
			"sourceFileName": "src/providers/yaci.provider.ts",
			"qualifiedName": "YaciProvider.fetchCollectionAssets"
		},
		"627": {
			"sourceFileName": "src/providers/yaci.provider.ts",
			"qualifiedName": "policyId"
		},
		"628": {
			"sourceFileName": "src/providers/yaci.provider.ts",
			"qualifiedName": "cursor"
		},
		"629": {
			"sourceFileName": "src/providers/yaci.provider.ts",
			"qualifiedName": "__type"
		},
		"630": {
			"sourceFileName": "src/providers/yaci.provider.ts",
			"qualifiedName": "__type.assets"
		},
		"631": {
			"sourceFileName": "src/providers/yaci.provider.ts",
			"qualifiedName": "__type.next"
		},
		"632": {
			"sourceFileName": "src/providers/yaci.provider.ts",
			"qualifiedName": "YaciProvider.fetchHandleAddress"
		},
		"633": {
			"sourceFileName": "src/providers/yaci.provider.ts",
			"qualifiedName": "YaciProvider.fetchHandleAddress"
		},
		"634": {
			"sourceFileName": "src/providers/yaci.provider.ts",
			"qualifiedName": "handle"
		},
		"635": {
			"sourceFileName": "src/providers/yaci.provider.ts",
			"qualifiedName": "YaciProvider.fetchProtocolParameters"
		},
		"636": {
			"sourceFileName": "src/providers/yaci.provider.ts",
			"qualifiedName": "YaciProvider.fetchProtocolParameters"
		},
		"637": {
			"sourceFileName": "src/providers/yaci.provider.ts",
			"qualifiedName": "epoch"
		},
		"638": {
			"sourceFileName": "src/providers/yaci.provider.ts",
			"qualifiedName": "YaciProvider.fetchTxInfo"
		},
		"639": {
			"sourceFileName": "src/providers/yaci.provider.ts",
			"qualifiedName": "YaciProvider.fetchTxInfo"
		},
		"640": {
			"sourceFileName": "src/providers/yaci.provider.ts",
			"qualifiedName": "hash"
		},
		"641": {
			"sourceFileName": "src/providers/yaci.provider.ts",
			"qualifiedName": "YaciProvider.fetchUTxOs"
		},
		"642": {
			"sourceFileName": "src/providers/yaci.provider.ts",
			"qualifiedName": "YaciProvider.fetchUTxOs"
		},
		"643": {
			"sourceFileName": "src/providers/yaci.provider.ts",
			"qualifiedName": "hash"
		},
		"644": {
			"sourceFileName": "src/providers/yaci.provider.ts",
			"qualifiedName": "YaciProvider.onTxConfirmed"
		},
		"645": {
			"sourceFileName": "src/providers/yaci.provider.ts",
			"qualifiedName": "YaciProvider.onTxConfirmed"
		},
		"646": {
			"sourceFileName": "src/providers/yaci.provider.ts",
			"qualifiedName": "txHash"
		},
		"647": {
			"sourceFileName": "src/providers/yaci.provider.ts",
			"qualifiedName": "callback"
		},
		"648": {
			"sourceFileName": "src/providers/yaci.provider.ts",
			"qualifiedName": "__type"
		},
		"649": {
			"sourceFileName": "src/providers/yaci.provider.ts",
			"qualifiedName": "__type"
		},
		"650": {
			"sourceFileName": "src/providers/yaci.provider.ts",
			"qualifiedName": "limit"
		},
		"651": {
			"sourceFileName": "src/providers/yaci.provider.ts",
			"qualifiedName": "YaciProvider.submitTx"
		},
		"652": {
			"sourceFileName": "src/providers/yaci.provider.ts",
			"qualifiedName": "YaciProvider.submitTx"
		},
		"653": {
			"sourceFileName": "src/providers/yaci.provider.ts",
			"qualifiedName": "txHex"
		},
		"654": {
			"sourceFileName": "src/providers/yaci.provider.ts",
			"qualifiedName": "YaciProvider.fetchPlutusScriptCBOR"
		},
		"655": {
			"sourceFileName": "src/providers/yaci.provider.ts",
			"qualifiedName": "YaciProvider.fetchPlutusScriptCBOR"
		},
		"656": {
			"sourceFileName": "src/providers/yaci.provider.ts",
			"qualifiedName": "scriptHash"
		},
		"657": {
			"sourceFileName": "src/providers/yaci.provider.ts",
			"qualifiedName": "YaciProvider.fetchNativeScriptJSON"
		},
		"658": {
			"sourceFileName": "src/providers/yaci.provider.ts",
			"qualifiedName": "YaciProvider.fetchNativeScriptJSON"
		},
		"659": {
			"sourceFileName": "src/providers/yaci.provider.ts",
			"qualifiedName": "scriptHash"
		},
		"660": {
			"sourceFileName": "src/scripts/forge.script.ts",
			"qualifiedName": "ForgeScript"
		},
		"661": {
			"sourceFileName": "src/scripts/forge.script.ts",
			"qualifiedName": "ForgeScript.withOneSignature"
		},
		"662": {
			"sourceFileName": "src/scripts/forge.script.ts",
			"qualifiedName": "ForgeScript.withOneSignature"
		},
		"663": {
			"sourceFileName": "src/scripts/forge.script.ts",
			"qualifiedName": "address"
		},
		"664": {
			"sourceFileName": "src/scripts/forge.script.ts",
			"qualifiedName": "ForgeScript.withAtLeastNSignatures"
		},
		"665": {
			"sourceFileName": "src/scripts/forge.script.ts",
			"qualifiedName": "ForgeScript.withAtLeastNSignatures"
		},
		"666": {
			"sourceFileName": "src/scripts/forge.script.ts",
			"qualifiedName": "addresses"
		},
		"667": {
			"sourceFileName": "src/scripts/forge.script.ts",
			"qualifiedName": "minimumRequired"
		},
		"668": {
			"sourceFileName": "src/scripts/forge.script.ts",
			"qualifiedName": "ForgeScript.withAnySignature"
		},
		"669": {
			"sourceFileName": "src/scripts/forge.script.ts",
			"qualifiedName": "ForgeScript.withAnySignature"
		},
		"670": {
			"sourceFileName": "src/scripts/forge.script.ts",
			"qualifiedName": "addresses"
		},
		"671": {
			"sourceFileName": "src/scripts/forge.script.ts",
			"qualifiedName": "ForgeScript.withAllSignatures"
		},
		"672": {
			"sourceFileName": "src/scripts/forge.script.ts",
			"qualifiedName": "ForgeScript.withAllSignatures"
		},
		"673": {
			"sourceFileName": "src/scripts/forge.script.ts",
			"qualifiedName": "addresses"
		},
		"674": {
			"sourceFileName": "src/scripts/forge.script.ts",
			"qualifiedName": "ForgeScript.fromNativeScript"
		},
		"675": {
			"sourceFileName": "src/scripts/forge.script.ts",
			"qualifiedName": "ForgeScript.fromNativeScript"
		},
		"676": {
			"sourceFileName": "src/scripts/forge.script.ts",
			"qualifiedName": "script"
		},
		"679": {
			"sourceFileName": "src/transaction/transaction.service.ts",
			"qualifiedName": "Transaction"
		},
		"680": {
			"sourceFileName": "src/transaction/transaction.service.ts",
			"qualifiedName": "Transaction.attachMetadata"
		},
		"681": {
			"sourceFileName": "src/transaction/transaction.service.ts",
			"qualifiedName": "Transaction.attachMetadata"
		},
		"682": {
			"sourceFileName": "src/transaction/transaction.service.ts",
			"qualifiedName": "cborTx"
		},
		"683": {
			"sourceFileName": "src/transaction/transaction.service.ts",
			"qualifiedName": "cborTxMetadata"
		},
		"684": {
			"sourceFileName": "src/transaction/transaction.service.ts",
			"qualifiedName": "era"
		},
		"685": {
			"sourceFileName": "src/transaction/transaction.service.ts",
			"qualifiedName": "Transaction.deattachMetadata"
		},
		"686": {
			"sourceFileName": "src/transaction/transaction.service.ts",
			"qualifiedName": "Transaction.deattachMetadata"
		},
		"687": {
			"sourceFileName": "src/transaction/transaction.service.ts",
			"qualifiedName": "cborTx"
		},
		"688": {
			"sourceFileName": "src/transaction/transaction.service.ts",
			"qualifiedName": "Transaction.maskMetadata"
		},
		"689": {
			"sourceFileName": "src/transaction/transaction.service.ts",
			"qualifiedName": "Transaction.maskMetadata"
		},
		"690": {
			"sourceFileName": "src/transaction/transaction.service.ts",
			"qualifiedName": "cborTx"
		},
		"691": {
			"sourceFileName": "src/transaction/transaction.service.ts",
			"qualifiedName": "era"
		},
		"692": {
			"sourceFileName": "src/transaction/transaction.service.ts",
			"qualifiedName": "Transaction.readMetadata"
		},
		"693": {
			"sourceFileName": "src/transaction/transaction.service.ts",
			"qualifiedName": "Transaction.readMetadata"
		},
		"694": {
			"sourceFileName": "src/transaction/transaction.service.ts",
			"qualifiedName": "cborTx"
		},
		"695": {
			"sourceFileName": "src/transaction/transaction.service.ts",
			"qualifiedName": "Transaction.writeMetadata"
		},
		"696": {
			"sourceFileName": "src/transaction/transaction.service.ts",
			"qualifiedName": "Transaction.writeMetadata"
		},
		"697": {
			"sourceFileName": "src/transaction/transaction.service.ts",
			"qualifiedName": "cborTx"
		},
		"698": {
			"sourceFileName": "src/transaction/transaction.service.ts",
			"qualifiedName": "cborTxMetadata"
		},
		"699": {
			"sourceFileName": "src/transaction/transaction.service.ts",
			"qualifiedName": "era"
		},
		"700": {
			"sourceFileName": "src/transaction/transaction.service.ts",
			"qualifiedName": "Transaction.__constructor"
		},
		"701": {
			"sourceFileName": "src/transaction/transaction.service.ts",
			"qualifiedName": "Transaction"
		},
		"702": {
			"sourceFileName": "src/transaction/transaction.service.ts",
			"qualifiedName": "options"
		},
		"703": {
			"sourceFileName": "src/transaction/transaction.service.ts",
			"qualifiedName": "Transaction._changeAddress"
		},
		"704": {
			"sourceFileName": "src/transaction/transaction.service.ts",
			"qualifiedName": "Transaction._txOutputs"
		},
		"705": {
			"sourceFileName": "src/transaction/transaction.service.ts",
			"qualifiedName": "Transaction._recipients"
		},
		"706": {
			"sourceFileName": "src/transaction/transaction.service.ts",
			"qualifiedName": "Transaction._totalBurns"
		},
		"707": {
			"sourceFileName": "src/transaction/transaction.service.ts",
			"qualifiedName": "Transaction._totalMints"
		},
		"708": {
			"sourceFileName": "src/transaction/transaction.service.ts",
			"qualifiedName": "Transaction._era"
		},
		"709": {
			"sourceFileName": "src/transaction/transaction.service.ts",
			"qualifiedName": "Transaction._initiator"
		},
		"710": {
			"sourceFileName": "src/transaction/transaction.service.ts",
			"qualifiedName": "Transaction._mintBuilder"
		},
		"711": {
			"sourceFileName": "src/transaction/transaction.service.ts",
			"qualifiedName": "Transaction._protocolParameters"
		},
		"712": {
			"sourceFileName": "src/transaction/transaction.service.ts",
			"qualifiedName": "Transaction._txBuilder"
		},
		"713": {
			"sourceFileName": "src/transaction/transaction.service.ts",
			"qualifiedName": "Transaction._txCertificates"
		},
		"714": {
			"sourceFileName": "src/transaction/transaction.service.ts",
			"qualifiedName": "Transaction._txInputsBuilder"
		},
		"715": {
			"sourceFileName": "src/transaction/transaction.service.ts",
			"qualifiedName": "Transaction._txWithdrawals"
		},
		"716": {
			"sourceFileName": "src/transaction/transaction.service.ts",
			"qualifiedName": "Transaction.size"
		},
		"717": {
			"sourceFileName": "src/transaction/transaction.service.ts",
			"qualifiedName": "Transaction.size"
		},
		"718": {
			"sourceFileName": "src/transaction/transaction.service.ts",
			"qualifiedName": "Transaction.build"
		},
		"719": {
			"sourceFileName": "src/transaction/transaction.service.ts",
			"qualifiedName": "Transaction.build"
		},
		"720": {
			"sourceFileName": "src/transaction/transaction.service.ts",
			"qualifiedName": "Transaction.burnAsset"
		},
		"721": {
			"sourceFileName": "src/transaction/transaction.service.ts",
			"qualifiedName": "Transaction.burnAsset"
		},
		"722": {
			"sourceFileName": "src/transaction/transaction.service.ts",
			"qualifiedName": "forgeScript"
		},
		"723": {
			"sourceFileName": "src/transaction/transaction.service.ts",
			"qualifiedName": "asset"
		},
		"724": {
			"sourceFileName": "src/transaction/transaction.service.ts",
			"qualifiedName": "redeemer"
		},
		"725": {
			"sourceFileName": "src/transaction/transaction.service.ts",
			"qualifiedName": "Transaction.delegateStake"
		},
		"726": {
			"sourceFileName": "src/transaction/transaction.service.ts",
			"qualifiedName": "Transaction.delegateStake"
		},
		"727": {
			"sourceFileName": "src/transaction/transaction.service.ts",
			"qualifiedName": "rewardAddress"
		},
		"728": {
			"sourceFileName": "src/transaction/transaction.service.ts",
			"qualifiedName": "poolId"
		},
		"729": {
			"sourceFileName": "src/transaction/transaction.service.ts",
			"qualifiedName": "Transaction.deregisterStake"
		},
		"730": {
			"sourceFileName": "src/transaction/transaction.service.ts",
			"qualifiedName": "Transaction.deregisterStake"
		},
		"731": {
			"sourceFileName": "src/transaction/transaction.service.ts",
			"qualifiedName": "rewardAddress"
		},
		"732": {
			"sourceFileName": "src/transaction/transaction.service.ts",
			"qualifiedName": "Transaction.mintAsset"
		},
		"733": {
			"sourceFileName": "src/transaction/transaction.service.ts",
			"qualifiedName": "Transaction.mintAsset"
		},
		"734": {
			"sourceFileName": "src/transaction/transaction.service.ts",
			"qualifiedName": "forgeScript"
		},
		"735": {
			"sourceFileName": "src/transaction/transaction.service.ts",
			"qualifiedName": "mint"
		},
		"736": {
			"sourceFileName": "src/transaction/transaction.service.ts",
			"qualifiedName": "redeemer"
		},
		"737": {
			"sourceFileName": "src/transaction/transaction.service.ts",
			"qualifiedName": "Transaction.redeemValue"
		},
		"738": {
			"sourceFileName": "src/transaction/transaction.service.ts",
			"qualifiedName": "Transaction.redeemValue"
		},
		"739": {
			"sourceFileName": "src/transaction/transaction.service.ts",
			"qualifiedName": "options"
		},
		"740": {
			"sourceFileName": "src/transaction/transaction.service.ts",
			"qualifiedName": "__type"
		},
		"741": {
			"sourceFileName": "src/transaction/transaction.service.ts",
			"qualifiedName": "__type.value"
		},
		"742": {
			"sourceFileName": "src/transaction/transaction.service.ts",
			"qualifiedName": "__type.script"
		},
		"743": {
			"sourceFileName": "src/transaction/transaction.service.ts",
			"qualifiedName": "__type.datum"
		},
		"744": {
			"sourceFileName": "src/transaction/transaction.service.ts",
			"qualifiedName": "__type.redeemer"
		},
		"745": {
			"sourceFileName": "src/transaction/transaction.service.ts",
			"qualifiedName": "Transaction.registerStake"
		},
		"746": {
			"sourceFileName": "src/transaction/transaction.service.ts",
			"qualifiedName": "Transaction.registerStake"
		},
		"747": {
			"sourceFileName": "src/transaction/transaction.service.ts",
			"qualifiedName": "rewardAddress"
		},
		"748": {
			"sourceFileName": "src/transaction/transaction.service.ts",
			"qualifiedName": "Transaction.registerPool"
		},
		"749": {
			"sourceFileName": "src/transaction/transaction.service.ts",
			"qualifiedName": "Transaction.registerPool"
		},
		"750": {
			"sourceFileName": "src/transaction/transaction.service.ts",
			"qualifiedName": "params"
		},
		"751": {
			"sourceFileName": "src/transaction/transaction.service.ts",
			"qualifiedName": "Transaction.retirePool"
		},
		"752": {
			"sourceFileName": "src/transaction/transaction.service.ts",
			"qualifiedName": "Transaction.retirePool"
		},
		"753": {
			"sourceFileName": "src/transaction/transaction.service.ts",
			"qualifiedName": "poolId"
		},
		"754": {
			"sourceFileName": "src/transaction/transaction.service.ts",
			"qualifiedName": "epochNo"
		},
		"755": {
			"sourceFileName": "src/transaction/transaction.service.ts",
			"qualifiedName": "Transaction.sendAssets"
		},
		"756": {
			"sourceFileName": "src/transaction/transaction.service.ts",
			"qualifiedName": "Transaction.sendAssets"
		},
		"757": {
			"sourceFileName": "src/transaction/transaction.service.ts",
			"qualifiedName": "recipient"
		},
		"758": {
			"sourceFileName": "src/transaction/transaction.service.ts",
			"qualifiedName": "assets"
		},
		"759": {
			"sourceFileName": "src/transaction/transaction.service.ts",
			"qualifiedName": "Transaction.sendLovelace"
		},
		"760": {
			"sourceFileName": "src/transaction/transaction.service.ts",
			"qualifiedName": "Transaction.sendLovelace"
		},
		"761": {
			"sourceFileName": "src/transaction/transaction.service.ts",
			"qualifiedName": "recipient"
		},
		"762": {
			"sourceFileName": "src/transaction/transaction.service.ts",
			"qualifiedName": "lovelace"
		},
		"763": {
			"sourceFileName": "src/transaction/transaction.service.ts",
			"qualifiedName": "Transaction.sendToken"
		},
		"764": {
			"sourceFileName": "src/transaction/transaction.service.ts",
			"qualifiedName": "Transaction.sendToken"
		},
		"765": {
			"sourceFileName": "src/transaction/transaction.service.ts",
			"qualifiedName": "recipient"
		},
		"766": {
			"sourceFileName": "src/transaction/transaction.service.ts",
			"qualifiedName": "ticker"
		},
		"767": {
			"sourceFileName": "src/transaction/transaction.service.ts",
			"qualifiedName": "amount"
		},
		"768": {
			"sourceFileName": "src/transaction/transaction.service.ts",
			"qualifiedName": "Transaction.sendValue"
		},
		"769": {
			"sourceFileName": "src/transaction/transaction.service.ts",
			"qualifiedName": "Transaction.sendValue"
		},
		"770": {
			"sourceFileName": "src/transaction/transaction.service.ts",
			"qualifiedName": "recipient"
		},
		"771": {
			"sourceFileName": "src/transaction/transaction.service.ts",
			"qualifiedName": "value"
		},
		"772": {
			"sourceFileName": "src/transaction/transaction.service.ts",
			"qualifiedName": "Transaction.setChangeAddress"
		},
		"773": {
			"sourceFileName": "src/transaction/transaction.service.ts",
			"qualifiedName": "Transaction.setChangeAddress"
		},
		"774": {
			"sourceFileName": "src/transaction/transaction.service.ts",
			"qualifiedName": "changeAddress"
		},
		"775": {
			"sourceFileName": "src/transaction/transaction.service.ts",
			"qualifiedName": "Transaction.setCollateral"
		},
		"776": {
			"sourceFileName": "src/transaction/transaction.service.ts",
			"qualifiedName": "Transaction.setCollateral"
		},
		"777": {
			"sourceFileName": "src/transaction/transaction.service.ts",
			"qualifiedName": "collateral"
		},
		"778": {
			"sourceFileName": "src/transaction/transaction.service.ts",
			"qualifiedName": "Transaction.setMetadata"
		},
		"779": {
			"sourceFileName": "src/transaction/transaction.service.ts",
			"qualifiedName": "Transaction.setMetadata"
		},
		"780": {
			"sourceFileName": "src/transaction/transaction.service.ts",
			"qualifiedName": "key"
		},
		"781": {
			"sourceFileName": "src/transaction/transaction.service.ts",
			"qualifiedName": "value"
		},
		"782": {
			"sourceFileName": "src/transaction/transaction.service.ts",
			"qualifiedName": "Transaction.setRequiredSigners"
		},
		"783": {
			"sourceFileName": "src/transaction/transaction.service.ts",
			"qualifiedName": "Transaction.setRequiredSigners"
		},
		"784": {
			"sourceFileName": "src/transaction/transaction.service.ts",
			"qualifiedName": "addresses"
		},
		"785": {
			"sourceFileName": "src/transaction/transaction.service.ts",
			"qualifiedName": "Transaction.setTimeToStart"
		},
		"786": {
			"sourceFileName": "src/transaction/transaction.service.ts",
			"qualifiedName": "Transaction.setTimeToStart"
		},
		"787": {
			"sourceFileName": "src/transaction/transaction.service.ts",
			"qualifiedName": "slot"
		},
		"788": {
			"sourceFileName": "src/transaction/transaction.service.ts",
			"qualifiedName": "Transaction.setTimeToExpire"
		},
		"789": {
			"sourceFileName": "src/transaction/transaction.service.ts",
			"qualifiedName": "Transaction.setTimeToExpire"
		},
		"790": {
			"sourceFileName": "src/transaction/transaction.service.ts",
			"qualifiedName": "slot"
		},
		"791": {
			"sourceFileName": "src/transaction/transaction.service.ts",
			"qualifiedName": "Transaction.setTxInputs"
		},
		"792": {
			"sourceFileName": "src/transaction/transaction.service.ts",
			"qualifiedName": "Transaction.setTxInputs"
		},
		"793": {
			"sourceFileName": "src/transaction/transaction.service.ts",
			"qualifiedName": "inputs"
		},
		"794": {
			"sourceFileName": "src/transaction/transaction.service.ts",
			"qualifiedName": "Transaction.setTxRefInputs"
		},
		"795": {
			"sourceFileName": "src/transaction/transaction.service.ts",
			"qualifiedName": "Transaction.setTxRefInputs"
		},
		"796": {
			"sourceFileName": "src/transaction/transaction.service.ts",
			"qualifiedName": "inputs"
		},
		"797": {
			"sourceFileName": "src/transaction/transaction.service.ts",
			"qualifiedName": "Transaction.withdrawRewards"
		},
		"798": {
			"sourceFileName": "src/transaction/transaction.service.ts",
			"qualifiedName": "Transaction.withdrawRewards"
		},
		"799": {
			"sourceFileName": "src/transaction/transaction.service.ts",
			"qualifiedName": "rewardAddress"
		},
		"800": {
			"sourceFileName": "src/transaction/transaction.service.ts",
			"qualifiedName": "lovelace"
		},
		"801": {
			"sourceFileName": "src/transaction/transaction.service.ts",
			"qualifiedName": "Transaction.addBurnInputsIfNeeded"
		},
		"802": {
			"sourceFileName": "src/transaction/transaction.service.ts",
			"qualifiedName": "Transaction.addBurnInputsIfNeeded"
		},
		"803": {
			"sourceFileName": "src/transaction/transaction.service.ts",
			"qualifiedName": "Transaction.addChangeAddress"
		},
		"804": {
			"sourceFileName": "src/transaction/transaction.service.ts",
			"qualifiedName": "Transaction.addChangeAddress"
		},
		"805": {
			"sourceFileName": "src/transaction/transaction.service.ts",
			"qualifiedName": "Transaction.addCollateralIfNeeded"
		},
		"806": {
			"sourceFileName": "src/transaction/transaction.service.ts",
			"qualifiedName": "Transaction.addCollateralIfNeeded"
		},
		"807": {
			"sourceFileName": "src/transaction/transaction.service.ts",
			"qualifiedName": "Transaction.addRequiredSignersIfNeeded"
		},
		"808": {
			"sourceFileName": "src/transaction/transaction.service.ts",
			"qualifiedName": "Transaction.addRequiredSignersIfNeeded"
		},
		"809": {
			"sourceFileName": "src/transaction/transaction.service.ts",
			"qualifiedName": "Transaction.addTxInputsAsNeeded"
		},
		"810": {
			"sourceFileName": "src/transaction/transaction.service.ts",
			"qualifiedName": "Transaction.addTxInputsAsNeeded"
		},
		"811": {
			"sourceFileName": "src/transaction/transaction.service.ts",
			"qualifiedName": "Transaction.forgeAssetsIfNeeded"
		},
		"812": {
			"sourceFileName": "src/transaction/transaction.service.ts",
			"qualifiedName": "Transaction.forgeAssetsIfNeeded"
		},
		"813": {
			"sourceFileName": "src/transaction/transaction.service.ts",
			"qualifiedName": "Transaction.filterAvailableUTxOs"
		},
		"814": {
			"sourceFileName": "src/transaction/transaction.service.ts",
			"qualifiedName": "Transaction.filterAvailableUTxOs"
		},
		"815": {
			"sourceFileName": "src/transaction/transaction.service.ts",
			"qualifiedName": "selectedUTxOs"
		},
		"816": {
			"sourceFileName": "src/transaction/transaction.service.ts",
			"qualifiedName": "Transaction.addMintOutputs"
		},
		"817": {
			"sourceFileName": "src/transaction/transaction.service.ts",
			"qualifiedName": "Transaction.addMintOutputs"
		},
		"818": {
			"sourceFileName": "src/transaction/transaction.service.ts",
			"qualifiedName": "Transaction.notVisited"
		},
		"819": {
			"sourceFileName": "src/transaction/transaction.service.ts",
			"qualifiedName": "Transaction.notVisited"
		},
		"820": {
			"sourceFileName": "src/transaction/transaction.service.ts",
			"qualifiedName": "checkpoint"
		},
		"821": {
			"sourceFileName": "src/transaction/transaction.service.ts",
			"qualifiedName": "Transaction.setTxOutput"
		},
		"822": {
			"sourceFileName": "src/transaction/transaction.service.ts",
			"qualifiedName": "Transaction.setTxOutput"
		},
		"823": {
			"sourceFileName": "src/transaction/transaction.service.ts",
			"qualifiedName": "asset"
		},
		"824": {
			"sourceFileName": "src/transaction/meshTxBuilder/meshTxBuilder.service.ts",
			"qualifiedName": "MeshTxBuilder"
		},
		"825": {
			"sourceFileName": "src/transaction/meshTxBuilder/meshTxBuilder.service.ts",
			"qualifiedName": "MeshTxBuilder.__constructor"
		},
		"826": {
			"sourceFileName": "src/transaction/meshTxBuilder/meshTxBuilder.service.ts",
			"qualifiedName": "MeshTxBuilder"
		},
		"827": {
			"sourceFileName": "src/transaction/meshTxBuilder/meshTxBuilder.service.ts",
			"qualifiedName": "__0"
		},
		"828": {
			"sourceFileName": "src/transaction/meshTxBuilder/meshTxBuilder.service.ts",
			"qualifiedName": "MeshTxBuilder._fetcher"
		},
		"829": {
			"sourceFileName": "src/transaction/meshTxBuilder/meshTxBuilder.service.ts",
			"qualifiedName": "MeshTxBuilder._submitter"
		},
		"830": {
			"sourceFileName": "src/transaction/meshTxBuilder/meshTxBuilder.service.ts",
			"qualifiedName": "MeshTxBuilder._evaluator"
		},
		"831": {
			"sourceFileName": "src/transaction/meshTxBuilder/meshTxBuilder.service.ts",
			"qualifiedName": "MeshTxBuilder.queriedTxHashes"
		},
		"832": {
			"sourceFileName": "src/transaction/meshTxBuilder/meshTxBuilder.service.ts",
			"qualifiedName": "MeshTxBuilder.queriedUTxOs"
		},
		"833": {
			"sourceFileName": "src/transaction/meshTxBuilder/meshTxBuilder.service.ts",
			"qualifiedName": "__type"
		},
		"834": {
			"sourceFileName": "src/transaction/meshTxBuilder/meshTxBuilder.service.ts",
			"qualifiedName": "__type.__index"
		},
		"836": {
			"sourceFileName": "src/transaction/meshTxBuilder/meshTxBuilder.service.ts",
			"qualifiedName": "MeshTxBuilder.complete"
		},
		"837": {
			"sourceFileName": "src/transaction/meshTxBuilder/meshTxBuilder.service.ts",
			"qualifiedName": "MeshTxBuilder.complete"
		},
		"838": {
			"sourceFileName": "src/transaction/meshTxBuilder/meshTxBuilder.service.ts",
			"qualifiedName": "customizedTx"
		},
		"839": {
			"sourceFileName": "src/transaction/meshTxBuilder/meshTxBuilder.service.ts",
			"qualifiedName": "MeshTxBuilder.submitTx"
		},
		"840": {
			"sourceFileName": "src/transaction/meshTxBuilder/meshTxBuilder.service.ts",
			"qualifiedName": "MeshTxBuilder.submitTx"
		},
		"841": {
			"sourceFileName": "src/transaction/meshTxBuilder/meshTxBuilder.service.ts",
			"qualifiedName": "txHex"
		},
		"842": {
			"sourceFileName": "src/transaction/meshTxBuilder/meshTxBuilder.service.ts",
			"qualifiedName": "MeshTxBuilder.getUTxOInfo"
		},
		"843": {
			"sourceFileName": "src/transaction/meshTxBuilder/meshTxBuilder.service.ts",
			"qualifiedName": "MeshTxBuilder.getUTxOInfo"
		},
		"844": {
			"sourceFileName": "src/transaction/meshTxBuilder/meshTxBuilder.service.ts",
			"qualifiedName": "txHash"
		},
		"845": {
			"sourceFileName": "src/transaction/meshTxBuilder/meshTxBuilder.service.ts",
			"qualifiedName": "MeshTxBuilder.queryAllTxInfo"
		},
		"846": {
			"sourceFileName": "src/transaction/meshTxBuilder/meshTxBuilder.service.ts",
			"qualifiedName": "MeshTxBuilder.queryAllTxInfo"
		},
		"847": {
			"sourceFileName": "src/transaction/meshTxBuilder/meshTxBuilder.service.ts",
			"qualifiedName": "incompleteTxIns"
		},
		"848": {
			"sourceFileName": "src/transaction/meshTxBuilder/meshTxBuilder.service.ts",
			"qualifiedName": "MeshTxBuilder.completeTxInformation"
		},
		"849": {
			"sourceFileName": "src/transaction/meshTxBuilder/meshTxBuilder.service.ts",
			"qualifiedName": "MeshTxBuilder.completeTxInformation"
		},
		"850": {
			"sourceFileName": "src/transaction/meshTxBuilder/meshTxBuilder.service.ts",
			"qualifiedName": "input"
		},
		"851": {
			"sourceFileName": "src/transaction/meshTxBuilder/meshTxBuilder.service.ts",
			"qualifiedName": "MeshTxBuilder.isInputComplete"
		},
		"852": {
			"sourceFileName": "src/transaction/meshTxBuilder/meshTxBuilder.service.ts",
			"qualifiedName": "MeshTxBuilder.isInputComplete"
		},
		"853": {
			"sourceFileName": "src/transaction/meshTxBuilder/meshTxBuilder.service.ts",
			"qualifiedName": "txIn"
		},
		"854": {
			"sourceFileName": "src/transaction/meshTxBuilder/meshTxBuilder.service.ts",
			"qualifiedName": "MeshTxBuilder.isInputInfoComplete"
		},
		"855": {
			"sourceFileName": "src/transaction/meshTxBuilder/meshTxBuilder.service.ts",
			"qualifiedName": "MeshTxBuilder.isInputInfoComplete"
		},
		"856": {
			"sourceFileName": "src/transaction/meshTxBuilder/meshTxBuilder.service.ts",
			"qualifiedName": "txIn"
		},
		"857": {
			"sourceFileName": "src/transaction/meshTxBuilder/meshTxBuilder.service.ts",
			"qualifiedName": "MeshTxBuilder.isRefScriptInfoComplete"
		},
		"858": {
			"sourceFileName": "src/transaction/meshTxBuilder/meshTxBuilder.service.ts",
			"qualifiedName": "MeshTxBuilder.isRefScriptInfoComplete"
		},
		"859": {
			"sourceFileName": "src/transaction/meshTxBuilder/meshTxBuilder.service.ts",
			"qualifiedName": "scriptTxIn"
		},
		"860": {
			"sourceFileName": "src/transaction/meshTxBuilder/meshTxBuilderCore.ts",
			"qualifiedName": "MeshTxBuilderCore.txHex"
		},
		"861": {
			"sourceFileName": "src/transaction/meshTxBuilder/meshTxBuilderCore.ts",
			"qualifiedName": "MeshTxBuilderCore.txEvaluationMultiplier"
		},
		"862": {
			"sourceFileName": "src/transaction/meshTxBuilder/meshTxBuilderCore.ts",
			"qualifiedName": "MeshTxBuilderCore.serializer"
		},
		"863": {
			"sourceFileName": "src/transaction/meshTxBuilder/meshTxBuilderCore.ts",
			"qualifiedName": "MeshTxBuilderCore.isHydra"
		},
		"864": {
			"sourceFileName": "src/transaction/meshTxBuilder/meshTxBuilderCore.ts",
			"qualifiedName": "MeshTxBuilderCore.meshTxBuilderBody"
		},
		"865": {
			"sourceFileName": "src/transaction/meshTxBuilder/meshTxBuilderCore.ts",
			"qualifiedName": "MeshTxBuilderCore.mintItem"
		},
		"866": {
			"sourceFileName": "src/transaction/meshTxBuilder/meshTxBuilderCore.ts",
			"qualifiedName": "MeshTxBuilderCore.txInQueueItem"
		},
		"867": {
			"sourceFileName": "src/transaction/meshTxBuilder/meshTxBuilderCore.ts",
			"qualifiedName": "MeshTxBuilderCore.collateralQueueItem"
		},
		"868": {
			"sourceFileName": "src/transaction/meshTxBuilder/meshTxBuilderCore.ts",
			"qualifiedName": "MeshTxBuilderCore.refScriptTxInQueueItem"
		},
		"869": {
			"sourceFileName": "src/transaction/meshTxBuilder/meshTxBuilderCore.ts",
			"qualifiedName": "MeshTxBuilderCore.reset"
		},
		"870": {
			"sourceFileName": "src/transaction/meshTxBuilder/meshTxBuilderCore.ts",
			"qualifiedName": "MeshTxBuilderCore.reset"
		},
		"871": {
			"sourceFileName": "src/transaction/meshTxBuilder/meshTxBuilderCore.ts",
			"qualifiedName": "MeshTxBuilderCore.emptyTxBuilderBody"
		},
		"872": {
			"sourceFileName": "src/transaction/meshTxBuilder/meshTxBuilderCore.ts",
			"qualifiedName": "MeshTxBuilderCore.emptyTxBuilderBody"
		},
		"873": {
			"sourceFileName": "src/transaction/meshTxBuilder/meshTxBuilderCore.ts",
			"qualifiedName": "MeshTxBuilderCore.completeSync"
		},
		"874": {
			"sourceFileName": "src/transaction/meshTxBuilder/meshTxBuilderCore.ts",
			"qualifiedName": "MeshTxBuilderCore.completeSync"
		},
		"875": {
			"sourceFileName": "src/transaction/meshTxBuilder/meshTxBuilderCore.ts",
			"qualifiedName": "customizedTx"
		},
		"876": {
			"sourceFileName": "src/transaction/meshTxBuilder/meshTxBuilderCore.ts",
			"qualifiedName": "MeshTxBuilderCore.completeSigning"
		},
		"877": {
			"sourceFileName": "src/transaction/meshTxBuilder/meshTxBuilderCore.ts",
			"qualifiedName": "MeshTxBuilderCore.completeSigning"
		},
		"878": {
			"sourceFileName": "src/transaction/meshTxBuilder/meshTxBuilderCore.ts",
			"qualifiedName": "MeshTxBuilderCore.txIn"
		},
		"879": {
			"sourceFileName": "src/transaction/meshTxBuilder/meshTxBuilderCore.ts",
			"qualifiedName": "MeshTxBuilderCore.txIn"
		},
		"880": {
			"sourceFileName": "src/transaction/meshTxBuilder/meshTxBuilderCore.ts",
			"qualifiedName": "txHash"
		},
		"881": {
			"sourceFileName": "src/transaction/meshTxBuilder/meshTxBuilderCore.ts",
			"qualifiedName": "txIndex"
		},
		"882": {
			"sourceFileName": "src/transaction/meshTxBuilder/meshTxBuilderCore.ts",
			"qualifiedName": "amount"
		},
		"883": {
			"sourceFileName": "src/transaction/meshTxBuilder/meshTxBuilderCore.ts",
			"qualifiedName": "address"
		},
		"884": {
			"sourceFileName": "src/transaction/meshTxBuilder/meshTxBuilderCore.ts",
			"qualifiedName": "MeshTxBuilderCore.txInScript"
		},
		"885": {
			"sourceFileName": "src/transaction/meshTxBuilder/meshTxBuilderCore.ts",
			"qualifiedName": "MeshTxBuilderCore.txInScript"
		},
		"886": {
			"sourceFileName": "src/transaction/meshTxBuilder/meshTxBuilderCore.ts",
			"qualifiedName": "scriptCbor"
		},
		"887": {
			"sourceFileName": "src/transaction/meshTxBuilder/meshTxBuilderCore.ts",
			"qualifiedName": "version"
		},
		"888": {
			"sourceFileName": "src/transaction/meshTxBuilder/meshTxBuilderCore.ts",
			"qualifiedName": "MeshTxBuilderCore.txInDatumValue"
		},
		"889": {
			"sourceFileName": "src/transaction/meshTxBuilder/meshTxBuilderCore.ts",
			"qualifiedName": "MeshTxBuilderCore.txInDatumValue"
		},
		"890": {
			"sourceFileName": "src/transaction/meshTxBuilder/meshTxBuilderCore.ts",
			"qualifiedName": "datum"
		},
		"891": {
			"sourceFileName": "src/transaction/meshTxBuilder/meshTxBuilderCore.ts",
			"qualifiedName": "type"
		},
		"892": {
			"sourceFileName": "src/transaction/meshTxBuilder/meshTxBuilderCore.ts",
			"qualifiedName": "MeshTxBuilderCore.txInInlineDatumPresent"
		},
		"893": {
			"sourceFileName": "src/transaction/meshTxBuilder/meshTxBuilderCore.ts",
			"qualifiedName": "MeshTxBuilderCore.txInInlineDatumPresent"
		},
		"894": {
			"sourceFileName": "src/transaction/meshTxBuilder/meshTxBuilderCore.ts",
			"qualifiedName": "MeshTxBuilderCore.txInRedeemerValue"
		},
		"895": {
			"sourceFileName": "src/transaction/meshTxBuilder/meshTxBuilderCore.ts",
			"qualifiedName": "MeshTxBuilderCore.txInRedeemerValue"
		},
		"896": {
			"sourceFileName": "src/transaction/meshTxBuilder/meshTxBuilderCore.ts",
			"qualifiedName": "redeemer"
		},
		"897": {
			"sourceFileName": "src/transaction/meshTxBuilder/meshTxBuilderCore.ts",
			"qualifiedName": "exUnits"
		},
		"898": {
			"sourceFileName": "src/transaction/meshTxBuilder/meshTxBuilderCore.ts",
			"qualifiedName": "__object"
		},
		"899": {
			"sourceFileName": "src/types/Action.ts",
			"qualifiedName": "__type.mem"
		},
		"900": {
			"sourceFileName": "src/types/Action.ts",
			"qualifiedName": "__type.steps"
		},
		"901": {
			"sourceFileName": "src/transaction/meshTxBuilder/meshTxBuilderCore.ts",
			"qualifiedName": "type"
		},
		"902": {
			"sourceFileName": "src/transaction/meshTxBuilder/meshTxBuilderCore.ts",
			"qualifiedName": "MeshTxBuilderCore.txOut"
		},
		"903": {
			"sourceFileName": "src/transaction/meshTxBuilder/meshTxBuilderCore.ts",
			"qualifiedName": "MeshTxBuilderCore.txOut"
		},
		"904": {
			"sourceFileName": "src/transaction/meshTxBuilder/meshTxBuilderCore.ts",
			"qualifiedName": "address"
		},
		"905": {
			"sourceFileName": "src/transaction/meshTxBuilder/meshTxBuilderCore.ts",
			"qualifiedName": "amount"
		},
		"906": {
			"sourceFileName": "src/transaction/meshTxBuilder/meshTxBuilderCore.ts",
			"qualifiedName": "MeshTxBuilderCore.txOutDatumHashValue"
		},
		"907": {
			"sourceFileName": "src/transaction/meshTxBuilder/meshTxBuilderCore.ts",
			"qualifiedName": "MeshTxBuilderCore.txOutDatumHashValue"
		},
		"908": {
			"sourceFileName": "src/transaction/meshTxBuilder/meshTxBuilderCore.ts",
			"qualifiedName": "datum"
		},
		"909": {
			"sourceFileName": "src/transaction/meshTxBuilder/meshTxBuilderCore.ts",
			"qualifiedName": "type"
		},
		"910": {
			"sourceFileName": "src/transaction/meshTxBuilder/meshTxBuilderCore.ts",
			"qualifiedName": "MeshTxBuilderCore.txOutInlineDatumValue"
		},
		"911": {
			"sourceFileName": "src/transaction/meshTxBuilder/meshTxBuilderCore.ts",
			"qualifiedName": "MeshTxBuilderCore.txOutInlineDatumValue"
		},
		"912": {
			"sourceFileName": "src/transaction/meshTxBuilder/meshTxBuilderCore.ts",
			"qualifiedName": "datum"
		},
		"913": {
			"sourceFileName": "src/transaction/meshTxBuilder/meshTxBuilderCore.ts",
			"qualifiedName": "type"
		},
		"914": {
			"sourceFileName": "src/transaction/meshTxBuilder/meshTxBuilderCore.ts",
			"qualifiedName": "MeshTxBuilderCore.txOutReferenceScript"
		},
		"915": {
			"sourceFileName": "src/transaction/meshTxBuilder/meshTxBuilderCore.ts",
			"qualifiedName": "MeshTxBuilderCore.txOutReferenceScript"
		},
		"916": {
			"sourceFileName": "src/transaction/meshTxBuilder/meshTxBuilderCore.ts",
			"qualifiedName": "scriptCbor"
		},
		"917": {
			"sourceFileName": "src/transaction/meshTxBuilder/meshTxBuilderCore.ts",
			"qualifiedName": "version"
		},
		"918": {
			"sourceFileName": "src/transaction/meshTxBuilder/meshTxBuilderCore.ts",
			"qualifiedName": "MeshTxBuilderCore.spendingPlutusScriptV2"
		},
		"919": {
			"sourceFileName": "src/transaction/meshTxBuilder/meshTxBuilderCore.ts",
			"qualifiedName": "MeshTxBuilderCore.spendingPlutusScriptV2"
		},
		"920": {
			"sourceFileName": "src/transaction/meshTxBuilder/meshTxBuilderCore.ts",
			"qualifiedName": "MeshTxBuilderCore.spendingTxInReference"
		},
		"921": {
			"sourceFileName": "src/transaction/meshTxBuilder/meshTxBuilderCore.ts",
			"qualifiedName": "MeshTxBuilderCore.spendingTxInReference"
		},
		"922": {
			"sourceFileName": "src/transaction/meshTxBuilder/meshTxBuilderCore.ts",
			"qualifiedName": "txHash"
		},
		"923": {
			"sourceFileName": "src/transaction/meshTxBuilder/meshTxBuilderCore.ts",
			"qualifiedName": "txIndex"
		},
		"924": {
			"sourceFileName": "src/transaction/meshTxBuilder/meshTxBuilderCore.ts",
			"qualifiedName": "spendingScriptHash"
		},
		"925": {
			"sourceFileName": "src/transaction/meshTxBuilder/meshTxBuilderCore.ts",
			"qualifiedName": "version"
		},
		"926": {
			"sourceFileName": "src/transaction/meshTxBuilder/meshTxBuilderCore.ts",
			"qualifiedName": "MeshTxBuilderCore.spendingReferenceTxInInlineDatumPresent"
		},
		"927": {
			"sourceFileName": "src/transaction/meshTxBuilder/meshTxBuilderCore.ts",
			"qualifiedName": "MeshTxBuilderCore.spendingReferenceTxInInlineDatumPresent"
		},
		"928": {
			"sourceFileName": "src/transaction/meshTxBuilder/meshTxBuilderCore.ts",
			"qualifiedName": "MeshTxBuilderCore.spendingReferenceTxInRedeemerValue"
		},
		"929": {
			"sourceFileName": "src/transaction/meshTxBuilder/meshTxBuilderCore.ts",
			"qualifiedName": "MeshTxBuilderCore.spendingReferenceTxInRedeemerValue"
		},
		"930": {
			"sourceFileName": "src/transaction/meshTxBuilder/meshTxBuilderCore.ts",
			"qualifiedName": "redeemer"
		},
		"931": {
			"sourceFileName": "src/transaction/meshTxBuilder/meshTxBuilderCore.ts",
			"qualifiedName": "exUnits"
		},
		"932": {
			"sourceFileName": "src/transaction/meshTxBuilder/meshTxBuilderCore.ts",
			"qualifiedName": "__object"
		},
		"933": {
			"sourceFileName": "src/types/Action.ts",
			"qualifiedName": "__type.mem"
		},
		"934": {
			"sourceFileName": "src/types/Action.ts",
			"qualifiedName": "__type.steps"
		},
		"935": {
			"sourceFileName": "src/transaction/meshTxBuilder/meshTxBuilderCore.ts",
			"qualifiedName": "type"
		},
		"936": {
			"sourceFileName": "src/transaction/meshTxBuilder/meshTxBuilderCore.ts",
			"qualifiedName": "MeshTxBuilderCore.readOnlyTxInReference"
		},
		"937": {
			"sourceFileName": "src/transaction/meshTxBuilder/meshTxBuilderCore.ts",
			"qualifiedName": "MeshTxBuilderCore.readOnlyTxInReference"
		},
		"938": {
			"sourceFileName": "src/transaction/meshTxBuilder/meshTxBuilderCore.ts",
			"qualifiedName": "txHash"
		},
		"939": {
			"sourceFileName": "src/transaction/meshTxBuilder/meshTxBuilderCore.ts",
			"qualifiedName": "txIndex"
		},
		"940": {
			"sourceFileName": "src/transaction/meshTxBuilder/meshTxBuilderCore.ts",
			"qualifiedName": "MeshTxBuilderCore.mintPlutusScriptV2"
		},
		"941": {
			"sourceFileName": "src/transaction/meshTxBuilder/meshTxBuilderCore.ts",
			"qualifiedName": "MeshTxBuilderCore.mintPlutusScriptV2"
		},
		"942": {
			"sourceFileName": "src/transaction/meshTxBuilder/meshTxBuilderCore.ts",
			"qualifiedName": "MeshTxBuilderCore.mint"
		},
		"943": {
			"sourceFileName": "src/transaction/meshTxBuilder/meshTxBuilderCore.ts",
			"qualifiedName": "MeshTxBuilderCore.mint"
		},
		"944": {
			"sourceFileName": "src/transaction/meshTxBuilder/meshTxBuilderCore.ts",
			"qualifiedName": "quantity"
		},
		"945": {
			"sourceFileName": "src/transaction/meshTxBuilder/meshTxBuilderCore.ts",
			"qualifiedName": "policy"
		},
		"946": {
			"sourceFileName": "src/transaction/meshTxBuilder/meshTxBuilderCore.ts",
			"qualifiedName": "name"
		},
		"947": {
			"sourceFileName": "src/transaction/meshTxBuilder/meshTxBuilderCore.ts",
			"qualifiedName": "MeshTxBuilderCore.mintingScript"
		},
		"948": {
			"sourceFileName": "src/transaction/meshTxBuilder/meshTxBuilderCore.ts",
			"qualifiedName": "MeshTxBuilderCore.mintingScript"
		},
		"949": {
			"sourceFileName": "src/transaction/meshTxBuilder/meshTxBuilderCore.ts",
			"qualifiedName": "scriptCBOR"
		},
		"950": {
			"sourceFileName": "src/transaction/meshTxBuilder/meshTxBuilderCore.ts",
			"qualifiedName": "version"
		},
		"951": {
			"sourceFileName": "src/transaction/meshTxBuilder/meshTxBuilderCore.ts",
			"qualifiedName": "MeshTxBuilderCore.mintTxInReference"
		},
		"952": {
			"sourceFileName": "src/transaction/meshTxBuilder/meshTxBuilderCore.ts",
			"qualifiedName": "MeshTxBuilderCore.mintTxInReference"
		},
		"953": {
			"sourceFileName": "src/transaction/meshTxBuilder/meshTxBuilderCore.ts",
			"qualifiedName": "txHash"
		},
		"954": {
			"sourceFileName": "src/transaction/meshTxBuilder/meshTxBuilderCore.ts",
			"qualifiedName": "txIndex"
		},
		"955": {
			"sourceFileName": "src/transaction/meshTxBuilder/meshTxBuilderCore.ts",
			"qualifiedName": "version"
		},
		"956": {
			"sourceFileName": "src/transaction/meshTxBuilder/meshTxBuilderCore.ts",
			"qualifiedName": "MeshTxBuilderCore.mintReferenceTxInRedeemerValue"
		},
		"957": {
			"sourceFileName": "src/transaction/meshTxBuilder/meshTxBuilderCore.ts",
			"qualifiedName": "MeshTxBuilderCore.mintReferenceTxInRedeemerValue"
		},
		"958": {
			"sourceFileName": "src/transaction/meshTxBuilder/meshTxBuilderCore.ts",
			"qualifiedName": "redeemer"
		},
		"959": {
			"sourceFileName": "src/transaction/meshTxBuilder/meshTxBuilderCore.ts",
			"qualifiedName": "exUnits"
		},
		"960": {
			"sourceFileName": "src/transaction/meshTxBuilder/meshTxBuilderCore.ts",
			"qualifiedName": "__object"
		},
		"961": {
			"sourceFileName": "src/types/Action.ts",
			"qualifiedName": "__type.mem"
		},
		"962": {
			"sourceFileName": "src/types/Action.ts",
			"qualifiedName": "__type.steps"
		},
		"963": {
			"sourceFileName": "src/transaction/meshTxBuilder/meshTxBuilderCore.ts",
			"qualifiedName": "type"
		},
		"964": {
			"sourceFileName": "src/transaction/meshTxBuilder/meshTxBuilderCore.ts",
			"qualifiedName": "MeshTxBuilderCore.mintRedeemerValue"
		},
		"965": {
			"sourceFileName": "src/transaction/meshTxBuilder/meshTxBuilderCore.ts",
			"qualifiedName": "MeshTxBuilderCore.mintRedeemerValue"
		},
		"966": {
			"sourceFileName": "src/transaction/meshTxBuilder/meshTxBuilderCore.ts",
			"qualifiedName": "redeemer"
		},
		"967": {
			"sourceFileName": "src/transaction/meshTxBuilder/meshTxBuilderCore.ts",
			"qualifiedName": "exUnits"
		},
		"968": {
			"sourceFileName": "src/transaction/meshTxBuilder/meshTxBuilderCore.ts",
			"qualifiedName": "__object"
		},
		"969": {
			"sourceFileName": "src/types/Action.ts",
			"qualifiedName": "__type.mem"
		},
		"970": {
			"sourceFileName": "src/types/Action.ts",
			"qualifiedName": "__type.steps"
		},
		"971": {
			"sourceFileName": "src/transaction/meshTxBuilder/meshTxBuilderCore.ts",
			"qualifiedName": "type"
		},
		"972": {
			"sourceFileName": "src/transaction/meshTxBuilder/meshTxBuilderCore.ts",
			"qualifiedName": "MeshTxBuilderCore.requiredSignerHash"
		},
		"973": {
			"sourceFileName": "src/transaction/meshTxBuilder/meshTxBuilderCore.ts",
			"qualifiedName": "MeshTxBuilderCore.requiredSignerHash"
		},
		"974": {
			"sourceFileName": "src/transaction/meshTxBuilder/meshTxBuilderCore.ts",
			"qualifiedName": "pubKeyHash"
		},
		"975": {
			"sourceFileName": "src/transaction/meshTxBuilder/meshTxBuilderCore.ts",
			"qualifiedName": "MeshTxBuilderCore.txInCollateral"
		},
		"976": {
			"sourceFileName": "src/transaction/meshTxBuilder/meshTxBuilderCore.ts",
			"qualifiedName": "MeshTxBuilderCore.txInCollateral"
		},
		"977": {
			"sourceFileName": "src/transaction/meshTxBuilder/meshTxBuilderCore.ts",
			"qualifiedName": "txHash"
		},
		"978": {
			"sourceFileName": "src/transaction/meshTxBuilder/meshTxBuilderCore.ts",
			"qualifiedName": "txIndex"
		},
		"979": {
			"sourceFileName": "src/transaction/meshTxBuilder/meshTxBuilderCore.ts",
			"qualifiedName": "amount"
		},
		"980": {
			"sourceFileName": "src/transaction/meshTxBuilder/meshTxBuilderCore.ts",
			"qualifiedName": "address"
		},
		"981": {
			"sourceFileName": "src/transaction/meshTxBuilder/meshTxBuilderCore.ts",
			"qualifiedName": "MeshTxBuilderCore.registerPoolCertificate"
		},
		"982": {
			"sourceFileName": "src/transaction/meshTxBuilder/meshTxBuilderCore.ts",
			"qualifiedName": "MeshTxBuilderCore.registerPoolCertificate"
		},
		"983": {
			"sourceFileName": "src/transaction/meshTxBuilder/meshTxBuilderCore.ts",
			"qualifiedName": "poolParams"
		},
		"984": {
			"sourceFileName": "src/transaction/meshTxBuilder/meshTxBuilderCore.ts",
			"qualifiedName": "MeshTxBuilderCore.registerStakeCertificate"
		},
		"985": {
			"sourceFileName": "src/transaction/meshTxBuilder/meshTxBuilderCore.ts",
			"qualifiedName": "MeshTxBuilderCore.registerStakeCertificate"
		},
		"986": {
			"sourceFileName": "src/transaction/meshTxBuilder/meshTxBuilderCore.ts",
			"qualifiedName": "stakeKeyHash"
		},
		"987": {
			"sourceFileName": "src/transaction/meshTxBuilder/meshTxBuilderCore.ts",
			"qualifiedName": "MeshTxBuilderCore.delegateStakeCertificate"
		},
		"988": {
			"sourceFileName": "src/transaction/meshTxBuilder/meshTxBuilderCore.ts",
			"qualifiedName": "MeshTxBuilderCore.delegateStakeCertificate"
		},
		"989": {
			"sourceFileName": "src/transaction/meshTxBuilder/meshTxBuilderCore.ts",
			"qualifiedName": "stakeKeyHash"
		},
		"990": {
			"sourceFileName": "src/transaction/meshTxBuilder/meshTxBuilderCore.ts",
			"qualifiedName": "poolId"
		},
		"991": {
			"sourceFileName": "src/transaction/meshTxBuilder/meshTxBuilderCore.ts",
			"qualifiedName": "MeshTxBuilderCore.deregisterStakeCertificate"
		},
		"992": {
			"sourceFileName": "src/transaction/meshTxBuilder/meshTxBuilderCore.ts",
			"qualifiedName": "MeshTxBuilderCore.deregisterStakeCertificate"
		},
		"993": {
			"sourceFileName": "src/transaction/meshTxBuilder/meshTxBuilderCore.ts",
			"qualifiedName": "stakeKeyHash"
		},
		"994": {
			"sourceFileName": "src/transaction/meshTxBuilder/meshTxBuilderCore.ts",
			"qualifiedName": "MeshTxBuilderCore.retirePoolCertificate"
		},
		"995": {
			"sourceFileName": "src/transaction/meshTxBuilder/meshTxBuilderCore.ts",
			"qualifiedName": "MeshTxBuilderCore.retirePoolCertificate"
		},
		"996": {
			"sourceFileName": "src/transaction/meshTxBuilder/meshTxBuilderCore.ts",
			"qualifiedName": "poolId"
		},
		"997": {
			"sourceFileName": "src/transaction/meshTxBuilder/meshTxBuilderCore.ts",
			"qualifiedName": "epoch"
		},
		"998": {
			"sourceFileName": "src/transaction/meshTxBuilder/meshTxBuilderCore.ts",
			"qualifiedName": "MeshTxBuilderCore.changeAddress"
		},
		"999": {
			"sourceFileName": "src/transaction/meshTxBuilder/meshTxBuilderCore.ts",
			"qualifiedName": "MeshTxBuilderCore.changeAddress"
		},
		"1000": {
			"sourceFileName": "src/transaction/meshTxBuilder/meshTxBuilderCore.ts",
			"qualifiedName": "addr"
		},
		"1001": {
			"sourceFileName": "src/transaction/meshTxBuilder/meshTxBuilderCore.ts",
			"qualifiedName": "MeshTxBuilderCore.invalidBefore"
		},
		"1002": {
			"sourceFileName": "src/transaction/meshTxBuilder/meshTxBuilderCore.ts",
			"qualifiedName": "MeshTxBuilderCore.invalidBefore"
		},
		"1003": {
			"sourceFileName": "src/transaction/meshTxBuilder/meshTxBuilderCore.ts",
			"qualifiedName": "slot"
		},
		"1004": {
			"sourceFileName": "src/transaction/meshTxBuilder/meshTxBuilderCore.ts",
			"qualifiedName": "MeshTxBuilderCore.invalidHereafter"
		},
		"1005": {
			"sourceFileName": "src/transaction/meshTxBuilder/meshTxBuilderCore.ts",
			"qualifiedName": "MeshTxBuilderCore.invalidHereafter"
		},
		"1006": {
			"sourceFileName": "src/transaction/meshTxBuilder/meshTxBuilderCore.ts",
			"qualifiedName": "slot"
		},
		"1007": {
			"sourceFileName": "src/transaction/meshTxBuilder/meshTxBuilderCore.ts",
			"qualifiedName": "MeshTxBuilderCore.metadataValue"
		},
		"1008": {
			"sourceFileName": "src/transaction/meshTxBuilder/meshTxBuilderCore.ts",
			"qualifiedName": "MeshTxBuilderCore.metadataValue"
		},
		"1009": {
			"sourceFileName": "src/transaction/meshTxBuilder/meshTxBuilderCore.ts",
			"qualifiedName": "T"
		},
		"1010": {
			"sourceFileName": "src/transaction/meshTxBuilder/meshTxBuilderCore.ts",
			"qualifiedName": "tag"
		},
		"1011": {
			"sourceFileName": "src/transaction/meshTxBuilder/meshTxBuilderCore.ts",
			"qualifiedName": "metadata"
		},
		"1012": {
			"sourceFileName": "src/transaction/meshTxBuilder/meshTxBuilderCore.ts",
			"qualifiedName": "MeshTxBuilderCore.protocolParams"
		},
		"1013": {
			"sourceFileName": "src/transaction/meshTxBuilder/meshTxBuilderCore.ts",
			"qualifiedName": "MeshTxBuilderCore.protocolParams"
		},
		"1014": {
			"sourceFileName": "src/transaction/meshTxBuilder/meshTxBuilderCore.ts",
			"qualifiedName": "params"
		},
		"1015": {
			"sourceFileName": "src/transaction/meshTxBuilder/meshTxBuilderCore.ts",
			"qualifiedName": "MeshTxBuilderCore.signingKey"
		},
		"1016": {
			"sourceFileName": "src/transaction/meshTxBuilder/meshTxBuilderCore.ts",
			"qualifiedName": "MeshTxBuilderCore.signingKey"
		},
		"1017": {
			"sourceFileName": "src/transaction/meshTxBuilder/meshTxBuilderCore.ts",
			"qualifiedName": "skeyHex"
		},
		"1018": {
			"sourceFileName": "src/transaction/meshTxBuilder/meshTxBuilderCore.ts",
			"qualifiedName": "MeshTxBuilderCore.selectUtxosFrom"
		},
		"1019": {
			"sourceFileName": "src/transaction/meshTxBuilder/meshTxBuilderCore.ts",
			"qualifiedName": "MeshTxBuilderCore.selectUtxosFrom"
		},
		"1020": {
			"sourceFileName": "src/transaction/meshTxBuilder/meshTxBuilderCore.ts",
			"qualifiedName": "extraInputs"
		},
		"1021": {
			"sourceFileName": "src/transaction/meshTxBuilder/meshTxBuilderCore.ts",
			"qualifiedName": "threshold"
		},
		"1022": {
			"sourceFileName": "src/transaction/meshTxBuilder/meshTxBuilderCore.ts",
			"qualifiedName": "MeshTxBuilderCore.removeDuplicateInputs"
		},
		"1023": {
			"sourceFileName": "src/transaction/meshTxBuilder/meshTxBuilderCore.ts",
			"qualifiedName": "MeshTxBuilderCore.removeDuplicateInputs"
		},
		"1024": {
			"sourceFileName": "src/transaction/meshTxBuilder/meshTxBuilderCore.ts",
			"qualifiedName": "MeshTxBuilderCore.queueAllLastItem"
		},
		"1025": {
			"sourceFileName": "src/transaction/meshTxBuilder/meshTxBuilderCore.ts",
			"qualifiedName": "MeshTxBuilderCore.queueAllLastItem"
		},
		"1026": {
			"sourceFileName": "src/transaction/meshTxBuilder/meshTxBuilderCore.ts",
			"qualifiedName": "MeshTxBuilderCore.updateRedeemer"
		},
		"1027": {
			"sourceFileName": "src/transaction/meshTxBuilder/meshTxBuilderCore.ts",
			"qualifiedName": "MeshTxBuilderCore.updateRedeemer"
		},
		"1028": {
			"sourceFileName": "src/transaction/meshTxBuilder/meshTxBuilderCore.ts",
			"qualifiedName": "meshTxBuilderBody"
		},
		"1029": {
			"sourceFileName": "src/transaction/meshTxBuilder/meshTxBuilderCore.ts",
			"qualifiedName": "txEvaluation"
		},
		"1030": {
			"sourceFileName": "src/transaction/meshTxBuilder/meshTxBuilderCore.ts",
			"qualifiedName": "MeshTxBuilderCore.castRawDataToJsonString"
		},
		"1031": {
			"sourceFileName": "src/transaction/meshTxBuilder/meshTxBuilderCore.ts",
			"qualifiedName": "MeshTxBuilderCore.castRawDataToJsonString"
		},
		"1032": {
			"sourceFileName": "src/transaction/meshTxBuilder/meshTxBuilderCore.ts",
			"qualifiedName": "rawData"
		},
		"1033": {
			"sourceFileName": "src/transaction/meshTxBuilder/type.ts",
			"qualifiedName": "MeshTxBuilderBody"
		},
		"1034": {
			"sourceFileName": "src/transaction/meshTxBuilder/type.ts",
			"qualifiedName": "__type"
		},
		"1035": {
			"sourceFileName": "src/transaction/meshTxBuilder/type.ts",
			"qualifiedName": "__type.inputs"
		},
		"1036": {
			"sourceFileName": "src/transaction/meshTxBuilder/type.ts",
			"qualifiedName": "__type.outputs"
		},
		"1037": {
			"sourceFileName": "src/transaction/meshTxBuilder/type.ts",
			"qualifiedName": "__type.extraInputs"
		},
		"1038": {
			"sourceFileName": "src/transaction/meshTxBuilder/type.ts",
			"qualifiedName": "__type.selectionThreshold"
		},
		"1039": {
			"sourceFileName": "src/transaction/meshTxBuilder/type.ts",
			"qualifiedName": "__type.collaterals"
		},
		"1040": {
			"sourceFileName": "src/transaction/meshTxBuilder/type.ts",
			"qualifiedName": "__type.requiredSignatures"
		},
		"1041": {
			"sourceFileName": "src/transaction/meshTxBuilder/type.ts",
			"qualifiedName": "__type.referenceInputs"
		},
		"1042": {
			"sourceFileName": "src/transaction/meshTxBuilder/type.ts",
			"qualifiedName": "__type.mints"
		},
		"1043": {
			"sourceFileName": "src/transaction/meshTxBuilder/type.ts",
			"qualifiedName": "__type.changeAddress"
		},
		"1044": {
			"sourceFileName": "src/transaction/meshTxBuilder/type.ts",
			"qualifiedName": "__type.metadata"
		},
		"1045": {
			"sourceFileName": "src/transaction/meshTxBuilder/type.ts",
			"qualifiedName": "__type.validityRange"
		},
		"1046": {
			"sourceFileName": "src/transaction/meshTxBuilder/type.ts",
			"qualifiedName": "__type.certificates"
		},
		"1047": {
			"sourceFileName": "src/transaction/meshTxBuilder/type.ts",
			"qualifiedName": "__type.signingKey"
		},
		"1048": {
			"sourceFileName": "src/transaction/meshTxBuilder/type.ts",
			"qualifiedName": "TxIn"
		},
		"1049": {
			"sourceFileName": "src/transaction/meshTxBuilder/type.ts",
			"qualifiedName": "PubKeyTxIn"
		},
		"1050": {
			"sourceFileName": "src/transaction/meshTxBuilder/type.ts",
			"qualifiedName": "__type"
		},
		"1051": {
			"sourceFileName": "src/transaction/meshTxBuilder/type.ts",
			"qualifiedName": "__type.type"
		},
		"1052": {
			"sourceFileName": "src/transaction/meshTxBuilder/type.ts",
			"qualifiedName": "__type.txIn"
		},
		"1053": {
			"sourceFileName": "src/transaction/meshTxBuilder/type.ts",
			"qualifiedName": "TxInParameter"
		},
		"1054": {
			"sourceFileName": "src/transaction/meshTxBuilder/type.ts",
			"qualifiedName": "__type"
		},
		"1055": {
			"sourceFileName": "src/transaction/meshTxBuilder/type.ts",
			"qualifiedName": "__type.txHash"
		},
		"1056": {
			"sourceFileName": "src/transaction/meshTxBuilder/type.ts",
			"qualifiedName": "__type.txIndex"
		},
		"1057": {
			"sourceFileName": "src/transaction/meshTxBuilder/type.ts",
			"qualifiedName": "__type.amount"
		},
		"1058": {
			"sourceFileName": "src/transaction/meshTxBuilder/type.ts",
			"qualifiedName": "__type.address"
		},
		"1059": {
			"sourceFileName": "src/transaction/meshTxBuilder/type.ts",
			"qualifiedName": "ScriptTxIn"
		},
		"1060": {
			"sourceFileName": "src/transaction/meshTxBuilder/type.ts",
			"qualifiedName": "__type"
		},
		"1061": {
			"sourceFileName": "src/transaction/meshTxBuilder/type.ts",
			"qualifiedName": "__type.type"
		},
		"1062": {
			"sourceFileName": "src/transaction/meshTxBuilder/type.ts",
			"qualifiedName": "__type.txIn"
		},
		"1063": {
			"sourceFileName": "src/transaction/meshTxBuilder/type.ts",
			"qualifiedName": "__type.scriptTxIn"
		},
		"1064": {
			"sourceFileName": "src/transaction/meshTxBuilder/type.ts",
			"qualifiedName": "ScriptTxInParameter"
		},
		"1065": {
			"sourceFileName": "src/transaction/meshTxBuilder/type.ts",
			"qualifiedName": "__type"
		},
		"1066": {
			"sourceFileName": "src/transaction/meshTxBuilder/type.ts",
			"qualifiedName": "__type.scriptSource"
		},
		"1067": {
			"sourceFileName": "src/transaction/meshTxBuilder/type.ts",
			"qualifiedName": "__type"
		},
		"1068": {
			"sourceFileName": "src/transaction/meshTxBuilder/type.ts",
			"qualifiedName": "__type.type"
		},
		"1069": {
			"sourceFileName": "src/transaction/meshTxBuilder/type.ts",
			"qualifiedName": "__type.script"
		},
		"1070": {
			"sourceFileName": "src/transaction/meshTxBuilder/type.ts",
			"qualifiedName": "__type"
		},
		"1071": {
			"sourceFileName": "src/transaction/meshTxBuilder/type.ts",
			"qualifiedName": "__type.type"
		},
		"1072": {
			"sourceFileName": "src/transaction/meshTxBuilder/type.ts",
			"qualifiedName": "__type.txInInfo"
		},
		"1073": {
			"sourceFileName": "src/transaction/meshTxBuilder/type.ts",
			"qualifiedName": "__type.datumSource"
		},
		"1074": {
			"sourceFileName": "src/transaction/meshTxBuilder/type.ts",
			"qualifiedName": "__type"
		},
		"1075": {
			"sourceFileName": "src/transaction/meshTxBuilder/type.ts",
			"qualifiedName": "__type.type"
		},
		"1076": {
			"sourceFileName": "src/transaction/meshTxBuilder/type.ts",
			"qualifiedName": "__type.data"
		},
		"1077": {
			"sourceFileName": "src/transaction/meshTxBuilder/type.ts",
			"qualifiedName": "__type"
		},
		"1078": {
			"sourceFileName": "src/transaction/meshTxBuilder/type.ts",
			"qualifiedName": "__type.type"
		},
		"1079": {
			"sourceFileName": "src/transaction/meshTxBuilder/type.ts",
			"qualifiedName": "__type.txHash"
		},
		"1080": {
			"sourceFileName": "src/transaction/meshTxBuilder/type.ts",
			"qualifiedName": "__type.txIndex"
		},
		"1081": {
			"sourceFileName": "src/transaction/meshTxBuilder/type.ts",
			"qualifiedName": "__type.redeemer"
		},
		"1082": {
			"sourceFileName": "src/transaction/meshTxBuilder/type.ts",
			"qualifiedName": "ScriptSourceInfo"
		},
		"1083": {
			"sourceFileName": "src/transaction/meshTxBuilder/type.ts",
			"qualifiedName": "__type"
		},
		"1084": {
			"sourceFileName": "src/transaction/meshTxBuilder/type.ts",
			"qualifiedName": "__type.txHash"
		},
		"1085": {
			"sourceFileName": "src/transaction/meshTxBuilder/type.ts",
			"qualifiedName": "__type.txIndex"
		},
		"1086": {
			"sourceFileName": "src/transaction/meshTxBuilder/type.ts",
			"qualifiedName": "__type.spendingScriptHash"
		},
		"1087": {
			"sourceFileName": "src/transaction/meshTxBuilder/type.ts",
			"qualifiedName": "__type.version"
		},
		"1088": {
			"sourceFileName": "src/transaction/meshTxBuilder/type.ts",
			"qualifiedName": "RefTxIn"
		},
		"1089": {
			"sourceFileName": "src/transaction/meshTxBuilder/type.ts",
			"qualifiedName": "__type"
		},
		"1090": {
			"sourceFileName": "src/transaction/meshTxBuilder/type.ts",
			"qualifiedName": "__type.txHash"
		},
		"1091": {
			"sourceFileName": "src/transaction/meshTxBuilder/type.ts",
			"qualifiedName": "__type.txIndex"
		},
		"1092": {
			"sourceFileName": "src/transaction/meshTxBuilder/type.ts",
			"qualifiedName": "Output"
		},
		"1093": {
			"sourceFileName": "src/transaction/meshTxBuilder/type.ts",
			"qualifiedName": "__type"
		},
		"1094": {
			"sourceFileName": "src/transaction/meshTxBuilder/type.ts",
			"qualifiedName": "__type.address"
		},
		"1095": {
			"sourceFileName": "src/transaction/meshTxBuilder/type.ts",
			"qualifiedName": "__type.amount"
		},
		"1096": {
			"sourceFileName": "src/transaction/meshTxBuilder/type.ts",
			"qualifiedName": "__type.datum"
		},
		"1097": {
			"sourceFileName": "src/transaction/meshTxBuilder/type.ts",
			"qualifiedName": "__type"
		},
		"1098": {
			"sourceFileName": "src/transaction/meshTxBuilder/type.ts",
			"qualifiedName": "__type.type"
		},
		"1099": {
			"sourceFileName": "src/transaction/meshTxBuilder/type.ts",
			"qualifiedName": "__type.data"
		},
		"1100": {
			"sourceFileName": "src/transaction/meshTxBuilder/type.ts",
			"qualifiedName": "__type.referenceScript"
		},
		"1101": {
			"sourceFileName": "src/transaction/meshTxBuilder/type.ts",
			"qualifiedName": "MintItem"
		},
		"1102": {
			"sourceFileName": "src/transaction/meshTxBuilder/type.ts",
			"qualifiedName": "__type"
		},
		"1103": {
			"sourceFileName": "src/transaction/meshTxBuilder/type.ts",
			"qualifiedName": "__type.type"
		},
		"1104": {
			"sourceFileName": "src/transaction/meshTxBuilder/type.ts",
			"qualifiedName": "__type.policyId"
		},
		"1105": {
			"sourceFileName": "src/transaction/meshTxBuilder/type.ts",
			"qualifiedName": "__type.assetName"
		},
		"1106": {
			"sourceFileName": "src/transaction/meshTxBuilder/type.ts",
			"qualifiedName": "__type.amount"
		},
		"1107": {
			"sourceFileName": "src/transaction/meshTxBuilder/type.ts",
			"qualifiedName": "__type.redeemer"
		},
		"1108": {
			"sourceFileName": "src/transaction/meshTxBuilder/type.ts",
			"qualifiedName": "__type.scriptSource"
		},
		"1109": {
			"sourceFileName": "src/transaction/meshTxBuilder/type.ts",
			"qualifiedName": "__type"
		},
		"1110": {
			"sourceFileName": "src/transaction/meshTxBuilder/type.ts",
			"qualifiedName": "__type.type"
		},
		"1111": {
			"sourceFileName": "src/transaction/meshTxBuilder/type.ts",
			"qualifiedName": "__type.script"
		},
		"1112": {
			"sourceFileName": "src/transaction/meshTxBuilder/type.ts",
			"qualifiedName": "__type"
		},
		"1113": {
			"sourceFileName": "src/transaction/meshTxBuilder/type.ts",
			"qualifiedName": "__type.type"
		},
		"1114": {
			"sourceFileName": "src/transaction/meshTxBuilder/type.ts",
			"qualifiedName": "__type.txHash"
		},
		"1115": {
			"sourceFileName": "src/transaction/meshTxBuilder/type.ts",
			"qualifiedName": "__type.txIndex"
		},
		"1116": {
			"sourceFileName": "src/transaction/meshTxBuilder/type.ts",
			"qualifiedName": "__type.version"
		},
		"1117": {
			"sourceFileName": "src/transaction/meshTxBuilder/type.ts",
			"qualifiedName": "ValidityRange"
		},
		"1118": {
			"sourceFileName": "src/transaction/meshTxBuilder/type.ts",
			"qualifiedName": "__type"
		},
		"1119": {
			"sourceFileName": "src/transaction/meshTxBuilder/type.ts",
			"qualifiedName": "__type.invalidBefore"
		},
		"1120": {
			"sourceFileName": "src/transaction/meshTxBuilder/type.ts",
			"qualifiedName": "__type.invalidHereafter"
		},
		"1121": {
			"sourceFileName": "src/transaction/meshTxBuilder/type.ts",
			"qualifiedName": "BuilderData"
		},
		"1122": {
			"sourceFileName": "src/transaction/meshTxBuilder/type.ts",
			"qualifiedName": "__type"
		},
		"1123": {
			"sourceFileName": "src/transaction/meshTxBuilder/type.ts",
			"qualifiedName": "__type.type"
		},
		"1124": {
			"sourceFileName": "src/transaction/meshTxBuilder/type.ts",
			"qualifiedName": "__type.content"
		},
		"1125": {
			"sourceFileName": "src/transaction/meshTxBuilder/type.ts",
			"qualifiedName": "__type"
		},
		"1126": {
			"sourceFileName": "src/transaction/meshTxBuilder/type.ts",
			"qualifiedName": "__type.type"
		},
		"1127": {
			"sourceFileName": "src/transaction/meshTxBuilder/type.ts",
			"qualifiedName": "__type.content"
		},
		"1128": {
			"sourceFileName": "src/transaction/meshTxBuilder/type.ts",
			"qualifiedName": "__type"
		},
		"1129": {
			"sourceFileName": "src/transaction/meshTxBuilder/type.ts",
			"qualifiedName": "__type.type"
		},
		"1130": {
			"sourceFileName": "src/transaction/meshTxBuilder/type.ts",
			"qualifiedName": "__type.content"
		},
		"1131": {
			"sourceFileName": "src/transaction/meshTxBuilder/type.ts",
			"qualifiedName": "Redeemer"
		},
		"1132": {
			"sourceFileName": "src/transaction/meshTxBuilder/type.ts",
			"qualifiedName": "__type"
		},
		"1133": {
			"sourceFileName": "src/transaction/meshTxBuilder/type.ts",
			"qualifiedName": "__type.data"
		},
		"1134": {
			"sourceFileName": "src/transaction/meshTxBuilder/type.ts",
			"qualifiedName": "__type.exUnits"
		},
		"1135": {
			"sourceFileName": "src/transaction/meshTxBuilder/type.ts",
			"qualifiedName": "Metadata"
		},
		"1136": {
			"sourceFileName": "src/transaction/meshTxBuilder/type.ts",
			"qualifiedName": "__type"
		},
		"1137": {
			"sourceFileName": "src/transaction/meshTxBuilder/type.ts",
			"qualifiedName": "__type.tag"
		},
		"1138": {
			"sourceFileName": "src/transaction/meshTxBuilder/type.ts",
			"qualifiedName": "__type.metadata"
		},
		"1139": {
			"sourceFileName": "src/transaction/meshTxBuilder/type.ts",
			"qualifiedName": "Certificate"
		},
		"1140": {
			"sourceFileName": "src/transaction/meshTxBuilder/type.ts",
			"qualifiedName": "__type"
		},
		"1141": {
			"sourceFileName": "src/transaction/meshTxBuilder/type.ts",
			"qualifiedName": "__type.type"
		},
		"1142": {
			"sourceFileName": "src/transaction/meshTxBuilder/type.ts",
			"qualifiedName": "__type.poolParams"
		},
		"1143": {
			"sourceFileName": "src/transaction/meshTxBuilder/type.ts",
			"qualifiedName": "__type"
		},
		"1144": {
			"sourceFileName": "src/transaction/meshTxBuilder/type.ts",
			"qualifiedName": "__type.type"
		},
		"1145": {
			"sourceFileName": "src/transaction/meshTxBuilder/type.ts",
			"qualifiedName": "__type.stakeKeyHash"
		},
		"1146": {
			"sourceFileName": "src/transaction/meshTxBuilder/type.ts",
			"qualifiedName": "__type"
		},
		"1147": {
			"sourceFileName": "src/transaction/meshTxBuilder/type.ts",
			"qualifiedName": "__type.type"
		},
		"1148": {
			"sourceFileName": "src/transaction/meshTxBuilder/type.ts",
			"qualifiedName": "__type.stakeKeyHash"
		},
		"1149": {
			"sourceFileName": "src/transaction/meshTxBuilder/type.ts",
			"qualifiedName": "__type.poolId"
		},
		"1150": {
			"sourceFileName": "src/transaction/meshTxBuilder/type.ts",
			"qualifiedName": "__type"
		},
		"1151": {
			"sourceFileName": "src/transaction/meshTxBuilder/type.ts",
			"qualifiedName": "__type.type"
		},
		"1152": {
			"sourceFileName": "src/transaction/meshTxBuilder/type.ts",
			"qualifiedName": "__type.stakeKeyHash"
		},
		"1153": {
			"sourceFileName": "src/transaction/meshTxBuilder/type.ts",
			"qualifiedName": "__type"
		},
		"1154": {
			"sourceFileName": "src/transaction/meshTxBuilder/type.ts",
			"qualifiedName": "__type.type"
		},
		"1155": {
			"sourceFileName": "src/transaction/meshTxBuilder/type.ts",
			"qualifiedName": "__type.poolId"
		},
		"1156": {
			"sourceFileName": "src/transaction/meshTxBuilder/type.ts",
			"qualifiedName": "__type.epoch"
		},
		"1157": {
			"sourceFileName": "src/transaction/meshTxBuilder/type.ts",
			"qualifiedName": "RequiredWith"
		},
		"1158": {
			"sourceFileName": "src/transaction/meshTxBuilder/type.ts",
			"qualifiedName": "T"
		},
		"1159": {
			"sourceFileName": "src/transaction/meshTxBuilder/type.ts",
			"qualifiedName": "K"
		},
		"1160": {
			"sourceFileName": "src/wallet/app.service.ts",
			"qualifiedName": "CreateAppWalletOptions"
		},
		"1161": {
			"sourceFileName": "src/wallet/app.service.ts",
			"qualifiedName": "__type"
		},
		"1162": {
			"sourceFileName": "src/wallet/app.service.ts",
			"qualifiedName": "__type.networkId"
		},
		"1163": {
			"sourceFileName": "src/wallet/app.service.ts",
			"qualifiedName": "__type.fetcher"
		},
		"1164": {
			"sourceFileName": "src/wallet/app.service.ts",
			"qualifiedName": "__type.submitter"
		},
		"1165": {
			"sourceFileName": "src/wallet/app.service.ts",
			"qualifiedName": "__type.key"
		},
		"1166": {
			"sourceFileName": "src/wallet/app.service.ts",
			"qualifiedName": "__type"
		},
		"1167": {
			"sourceFileName": "src/wallet/app.service.ts",
			"qualifiedName": "__type.type"
		},
		"1168": {
			"sourceFileName": "src/wallet/app.service.ts",
			"qualifiedName": "__type.bech32"
		},
		"1169": {
			"sourceFileName": "src/wallet/app.service.ts",
			"qualifiedName": "__type"
		},
		"1170": {
			"sourceFileName": "src/wallet/app.service.ts",
			"qualifiedName": "__type.type"
		},
		"1171": {
			"sourceFileName": "src/wallet/app.service.ts",
			"qualifiedName": "__type.payment"
		},
		"1172": {
			"sourceFileName": "src/wallet/app.service.ts",
			"qualifiedName": "__type.stake"
		},
		"1173": {
			"sourceFileName": "src/wallet/app.service.ts",
			"qualifiedName": "__type"
		},
		"1174": {
			"sourceFileName": "src/wallet/app.service.ts",
			"qualifiedName": "__type.type"
		},
		"1175": {
			"sourceFileName": "src/wallet/app.service.ts",
			"qualifiedName": "__type.words"
		},
		"1176": {
			"sourceFileName": "src/wallet/app.service.ts",
			"qualifiedName": "AppWallet"
		},
		"1177": {
			"sourceFileName": "src/wallet/app.service.ts",
			"qualifiedName": "AppWallet.brew"
		},
		"1178": {
			"sourceFileName": "src/wallet/app.service.ts",
			"qualifiedName": "AppWallet.brew"
		},
		"1179": {
			"sourceFileName": "src/wallet/app.service.ts",
			"qualifiedName": "strength"
		},
		"1180": {
			"sourceFileName": "src/wallet/app.service.ts",
			"qualifiedName": "AppWallet.__constructor"
		},
		"1181": {
			"sourceFileName": "src/wallet/app.service.ts",
			"qualifiedName": "AppWallet"
		},
		"1182": {
			"sourceFileName": "src/wallet/app.service.ts",
			"qualifiedName": "options"
		},
		"1183": {
			"sourceFileName": "src/wallet/app.service.ts",
			"qualifiedName": "AppWallet._fetcher"
		},
		"1184": {
			"sourceFileName": "src/wallet/app.service.ts",
			"qualifiedName": "AppWallet._submitter"
		},
		"1185": {
			"sourceFileName": "src/wallet/app.service.ts",
			"qualifiedName": "AppWallet._wallet"
		},
		"1186": {
			"sourceFileName": "src/wallet/app.service.ts",
			"qualifiedName": "AppWallet.getBaseAddress"
		},
		"1187": {
			"sourceFileName": "src/wallet/app.service.ts",
			"qualifiedName": "AppWallet.getBaseAddress"
		},
		"1188": {
			"sourceFileName": "src/wallet/app.service.ts",
			"qualifiedName": "accountIndex"
		},
		"1189": {
			"sourceFileName": "src/wallet/app.service.ts",
			"qualifiedName": "AppWallet.getPaymentAddress"
		},
		"1190": {
			"sourceFileName": "src/wallet/app.service.ts",
			"qualifiedName": "AppWallet.getPaymentAddress"
		},
		"1191": {
			"sourceFileName": "src/wallet/app.service.ts",
			"qualifiedName": "accountIndex"
		},
		"1192": {
			"sourceFileName": "src/wallet/app.service.ts",
			"qualifiedName": "AppWallet.getRewardAddress"
		},
		"1193": {
			"sourceFileName": "src/wallet/app.service.ts",
			"qualifiedName": "AppWallet.getRewardAddress"
		},
		"1194": {
			"sourceFileName": "src/wallet/app.service.ts",
			"qualifiedName": "accountIndex"
		},
		"1195": {
			"sourceFileName": "src/wallet/app.service.ts",
			"qualifiedName": "AppWallet.getUsedAddress"
		},
		"1196": {
			"sourceFileName": "src/wallet/app.service.ts",
			"qualifiedName": "AppWallet.getUsedAddress"
		},
		"1197": {
			"sourceFileName": "src/wallet/app.service.ts",
			"qualifiedName": "accountIndex"
		},
		"1198": {
			"sourceFileName": "src/wallet/app.service.ts",
			"qualifiedName": "AppWallet.getUsedCollateral"
		},
		"1199": {
			"sourceFileName": "src/wallet/app.service.ts",
			"qualifiedName": "AppWallet.getUsedCollateral"
		},
		"1200": {
			"sourceFileName": "src/wallet/app.service.ts",
			"qualifiedName": "_limit"
		},
		"1201": {
			"sourceFileName": "src/wallet/app.service.ts",
			"qualifiedName": "AppWallet.getUsedUTxOs"
		},
		"1202": {
			"sourceFileName": "src/wallet/app.service.ts",
			"qualifiedName": "AppWallet.getUsedUTxOs"
		},
		"1203": {
			"sourceFileName": "src/wallet/app.service.ts",
			"qualifiedName": "accountIndex"
		},
		"1204": {
			"sourceFileName": "src/wallet/app.service.ts",
			"qualifiedName": "AppWallet.signData"
		},
		"1205": {
			"sourceFileName": "src/wallet/app.service.ts",
			"qualifiedName": "AppWallet.signData"
		},
		"1206": {
			"sourceFileName": "src/wallet/app.service.ts",
			"qualifiedName": "address"
		},
		"1207": {
			"sourceFileName": "src/wallet/app.service.ts",
			"qualifiedName": "payload"
		},
		"1208": {
			"sourceFileName": "src/wallet/app.service.ts",
			"qualifiedName": "accountIndex"
		},
		"1209": {
			"sourceFileName": "src/wallet/app.service.ts",
			"qualifiedName": "AppWallet.signTx"
		},
		"1210": {
			"sourceFileName": "src/wallet/app.service.ts",
			"qualifiedName": "AppWallet.signTx"
		},
		"1211": {
			"sourceFileName": "src/wallet/app.service.ts",
			"qualifiedName": "unsignedTx"
		},
		"1212": {
			"sourceFileName": "src/wallet/app.service.ts",
			"qualifiedName": "partialSign"
		},
		"1213": {
			"sourceFileName": "src/wallet/app.service.ts",
			"qualifiedName": "accountIndex"
		},
		"1214": {
			"sourceFileName": "src/wallet/app.service.ts",
			"qualifiedName": "AppWallet.signTxs"
		},
		"1215": {
			"sourceFileName": "src/wallet/app.service.ts",
			"qualifiedName": "AppWallet.signTxs"
		},
		"1216": {
			"sourceFileName": "src/wallet/app.service.ts",
			"qualifiedName": "unsignedTxs"
		},
		"1217": {
			"sourceFileName": "src/wallet/app.service.ts",
			"qualifiedName": "partialSign"
		},
		"1218": {
			"sourceFileName": "src/wallet/app.service.ts",
			"qualifiedName": "AppWallet.submitTx"
		},
		"1219": {
			"sourceFileName": "src/wallet/app.service.ts",
			"qualifiedName": "AppWallet.submitTx"
		},
		"1220": {
			"sourceFileName": "src/wallet/app.service.ts",
			"qualifiedName": "tx"
		},
		"1221": {
			"sourceFileName": "src/wallet/app.service.ts",
			"qualifiedName": "AppWallet.getUtxos"
		},
		"1222": {
			"sourceFileName": "src/wallet/app.service.ts",
			"qualifiedName": "AppWallet.getUtxos"
		},
		"1223": {
			"sourceFileName": "src/wallet/app.service.ts",
			"qualifiedName": "AppWallet.getCollateral"
		},
		"1224": {
			"sourceFileName": "src/wallet/app.service.ts",
			"qualifiedName": "AppWallet.getCollateral"
		},
		"1225": {
			"sourceFileName": "src/wallet/app.service.ts",
			"qualifiedName": "AppWallet.getUsedAddresses"
		},
		"1226": {
			"sourceFileName": "src/wallet/app.service.ts",
			"qualifiedName": "AppWallet.getUsedAddresses"
		},
		"1227": {
			"sourceFileName": "src/wallet/browser.service.ts",
			"qualifiedName": "BrowserWallet"
		},
		"1228": {
			"sourceFileName": "src/wallet/browser.service.ts",
			"qualifiedName": "BrowserWallet.getInstalledWallets"
		},
		"1229": {
			"sourceFileName": "src/wallet/browser.service.ts",
			"qualifiedName": "BrowserWallet.getInstalledWallets"
		},
		"1230": {
			"sourceFileName": "src/wallet/browser.service.ts",
			"qualifiedName": "BrowserWallet.enable"
		},
		"1231": {
			"sourceFileName": "src/wallet/browser.service.ts",
			"qualifiedName": "BrowserWallet.enable"
		},
		"1232": {
			"sourceFileName": "src/wallet/browser.service.ts",
			"qualifiedName": "walletName"
		},
		"1233": {
			"sourceFileName": "src/wallet/browser.service.ts",
			"qualifiedName": "BrowserWallet.resolveInstance"
		},
		"1234": {
			"sourceFileName": "src/wallet/browser.service.ts",
			"qualifiedName": "BrowserWallet.resolveInstance"
		},
		"1235": {
			"sourceFileName": "src/wallet/browser.service.ts",
			"qualifiedName": "walletName"
		},
		"1236": {
			"sourceFileName": "src/wallet/browser.service.ts",
			"qualifiedName": "BrowserWallet.__constructor"
		},
		"1237": {
			"sourceFileName": "src/wallet/browser.service.ts",
			"qualifiedName": "BrowserWallet"
		},
		"1238": {
			"sourceFileName": "src/wallet/browser.service.ts",
			"qualifiedName": "_walletInstance"
		},
		"1239": {
			"sourceFileName": "src/wallet/browser.service.ts",
			"qualifiedName": "_walletName"
		},
		"1240": {
			"sourceFileName": "src/wallet/browser.service.ts",
			"qualifiedName": "BrowserWallet.walletInstance"
		},
		"1241": {
			"sourceFileName": "src/wallet/browser.service.ts",
			"qualifiedName": "BrowserWallet._walletInstance"
		},
		"1242": {
			"sourceFileName": "src/wallet/browser.service.ts",
			"qualifiedName": "BrowserWallet._walletName"
		},
		"1243": {
			"sourceFileName": "src/wallet/browser.service.ts",
			"qualifiedName": "BrowserWallet.getBalance"
		},
		"1244": {
			"sourceFileName": "src/wallet/browser.service.ts",
			"qualifiedName": "BrowserWallet.getBalance"
		},
		"1245": {
			"sourceFileName": "src/wallet/browser.service.ts",
			"qualifiedName": "BrowserWallet.getChangeAddress"
		},
		"1246": {
			"sourceFileName": "src/wallet/browser.service.ts",
			"qualifiedName": "BrowserWallet.getChangeAddress"
		},
		"1247": {
			"sourceFileName": "src/wallet/browser.service.ts",
			"qualifiedName": "BrowserWallet.getCollateral"
		},
		"1248": {
			"sourceFileName": "src/wallet/browser.service.ts",
			"qualifiedName": "BrowserWallet.getCollateral"
		},
		"1249": {
			"sourceFileName": "src/wallet/browser.service.ts",
			"qualifiedName": "limit"
		},
		"1250": {
			"sourceFileName": "src/wallet/browser.service.ts",
			"qualifiedName": "BrowserWallet.getNetworkId"
		},
		"1251": {
			"sourceFileName": "src/wallet/browser.service.ts",
			"qualifiedName": "BrowserWallet.getNetworkId"
		},
		"1252": {
			"sourceFileName": "src/wallet/browser.service.ts",
			"qualifiedName": "BrowserWallet.getRewardAddresses"
		},
		"1253": {
			"sourceFileName": "src/wallet/browser.service.ts",
			"qualifiedName": "BrowserWallet.getRewardAddresses"
		},
		"1254": {
			"sourceFileName": "src/wallet/browser.service.ts",
			"qualifiedName": "BrowserWallet.getUnusedAddresses"
		},
		"1255": {
			"sourceFileName": "src/wallet/browser.service.ts",
			"qualifiedName": "BrowserWallet.getUnusedAddresses"
		},
		"1256": {
			"sourceFileName": "src/wallet/browser.service.ts",
			"qualifiedName": "BrowserWallet.getUsedAddresses"
		},
		"1257": {
			"sourceFileName": "src/wallet/browser.service.ts",
			"qualifiedName": "BrowserWallet.getUsedAddresses"
		},
		"1258": {
			"sourceFileName": "src/wallet/browser.service.ts",
			"qualifiedName": "BrowserWallet.getUtxos"
		},
		"1259": {
			"sourceFileName": "src/wallet/browser.service.ts",
			"qualifiedName": "BrowserWallet.getUtxos"
		},
		"1260": {
			"sourceFileName": "src/wallet/browser.service.ts",
			"qualifiedName": "amount"
		},
		"1261": {
			"sourceFileName": "src/wallet/browser.service.ts",
			"qualifiedName": "BrowserWallet.signData"
		},
		"1262": {
			"sourceFileName": "src/wallet/browser.service.ts",
			"qualifiedName": "BrowserWallet.signData"
		},
		"1263": {
			"sourceFileName": "src/wallet/browser.service.ts",
			"qualifiedName": "address"
		},
		"1264": {
			"sourceFileName": "src/wallet/browser.service.ts",
			"qualifiedName": "payload"
		},
		"1265": {
			"sourceFileName": "src/wallet/browser.service.ts",
			"qualifiedName": "BrowserWallet.signTx"
		},
		"1266": {
			"sourceFileName": "src/wallet/browser.service.ts",
			"qualifiedName": "BrowserWallet.signTx"
		},
		"1267": {
			"sourceFileName": "src/wallet/browser.service.ts",
			"qualifiedName": "unsignedTx"
		},
		"1268": {
			"sourceFileName": "src/wallet/browser.service.ts",
			"qualifiedName": "partialSign"
		},
		"1269": {
			"sourceFileName": "src/wallet/browser.service.ts",
			"qualifiedName": "BrowserWallet.signTxs"
		},
		"1270": {
			"sourceFileName": "src/wallet/browser.service.ts",
			"qualifiedName": "BrowserWallet.signTxs"
		},
		"1271": {
			"sourceFileName": "src/wallet/browser.service.ts",
			"qualifiedName": "unsignedTxs"
		},
		"1272": {
			"sourceFileName": "src/wallet/browser.service.ts",
			"qualifiedName": "partialSign"
		},
		"1273": {
			"sourceFileName": "src/wallet/browser.service.ts",
			"qualifiedName": "BrowserWallet.submitTx"
		},
		"1274": {
			"sourceFileName": "src/wallet/browser.service.ts",
			"qualifiedName": "BrowserWallet.submitTx"
		},
		"1275": {
			"sourceFileName": "src/wallet/browser.service.ts",
			"qualifiedName": "tx"
		},
		"1276": {
			"sourceFileName": "src/wallet/browser.service.ts",
			"qualifiedName": "BrowserWallet.getUsedAddress"
		},
		"1277": {
			"sourceFileName": "src/wallet/browser.service.ts",
			"qualifiedName": "BrowserWallet.getUsedAddress"
		},
		"1278": {
			"sourceFileName": "src/wallet/browser.service.ts",
			"qualifiedName": "BrowserWallet.getUsedCollateral"
		},
		"1279": {
			"sourceFileName": "src/wallet/browser.service.ts",
			"qualifiedName": "BrowserWallet.getUsedCollateral"
		},
		"1280": {
			"sourceFileName": "src/wallet/browser.service.ts",
			"qualifiedName": "limit"
		},
		"1281": {
			"sourceFileName": "src/wallet/browser.service.ts",
			"qualifiedName": "BrowserWallet.getUsedUTxOs"
		},
		"1282": {
			"sourceFileName": "src/wallet/browser.service.ts",
			"qualifiedName": "BrowserWallet.getUsedUTxOs"
		},
		"1283": {
			"sourceFileName": "src/wallet/browser.service.ts",
			"qualifiedName": "amount"
		},
		"1284": {
			"sourceFileName": "src/wallet/browser.service.ts",
			"qualifiedName": "BrowserWallet.getAssets"
		},
		"1285": {
			"sourceFileName": "src/wallet/browser.service.ts",
			"qualifiedName": "BrowserWallet.getAssets"
		},
		"1286": {
			"sourceFileName": "src/wallet/browser.service.ts",
			"qualifiedName": "BrowserWallet.getLovelace"
		},
		"1287": {
			"sourceFileName": "src/wallet/browser.service.ts",
			"qualifiedName": "BrowserWallet.getLovelace"
		},
		"1288": {
			"sourceFileName": "src/wallet/browser.service.ts",
			"qualifiedName": "BrowserWallet.getPolicyIdAssets"
		},
		"1289": {
			"sourceFileName": "src/wallet/browser.service.ts",
			"qualifiedName": "BrowserWallet.getPolicyIdAssets"
		},
		"1290": {
			"sourceFileName": "src/wallet/browser.service.ts",
			"qualifiedName": "policyId"
		},
		"1291": {
			"sourceFileName": "src/wallet/browser.service.ts",
			"qualifiedName": "BrowserWallet.getPolicyIds"
		},
		"1292": {
			"sourceFileName": "src/wallet/browser.service.ts",
			"qualifiedName": "BrowserWallet.getPolicyIds"
		},
		"1293": {
			"sourceFileName": "src/wallet/embedded.service.ts",
			"qualifiedName": "EmbeddedWallet"
		},
		"1294": {
			"sourceFileName": "src/wallet/embedded.service.ts",
			"qualifiedName": "EmbeddedWallet.encryptMnemonic"
		},
		"1295": {
			"sourceFileName": "src/wallet/embedded.service.ts",
			"qualifiedName": "EmbeddedWallet.encryptMnemonic"
		},
		"1296": {
			"sourceFileName": "src/wallet/embedded.service.ts",
			"qualifiedName": "words"
		},
		"1297": {
			"sourceFileName": "src/wallet/embedded.service.ts",
			"qualifiedName": "password"
		},
		"1298": {
			"sourceFileName": "src/wallet/embedded.service.ts",
			"qualifiedName": "EmbeddedWallet.encryptPrivateKey"
		},
		"1299": {
			"sourceFileName": "src/wallet/embedded.service.ts",
			"qualifiedName": "EmbeddedWallet.encryptPrivateKey"
		},
		"1300": {
			"sourceFileName": "src/wallet/embedded.service.ts",
			"qualifiedName": "bech32"
		},
		"1301": {
			"sourceFileName": "src/wallet/embedded.service.ts",
			"qualifiedName": "password"
		},
		"1302": {
			"sourceFileName": "src/wallet/embedded.service.ts",
			"qualifiedName": "EmbeddedWallet.encryptSigningKeys"
		},
		"1303": {
			"sourceFileName": "src/wallet/embedded.service.ts",
			"qualifiedName": "EmbeddedWallet.encryptSigningKeys"
		},
		"1304": {
			"sourceFileName": "src/wallet/embedded.service.ts",
			"qualifiedName": "cborPaymentKey"
		},
		"1305": {
			"sourceFileName": "src/wallet/embedded.service.ts",
			"qualifiedName": "cborStakeKey"
		},
		"1306": {
			"sourceFileName": "src/wallet/embedded.service.ts",
			"qualifiedName": "password"
		},
		"1307": {
			"sourceFileName": "src/wallet/embedded.service.ts",
			"qualifiedName": "EmbeddedWallet.generateMnemonic"
		},
		"1308": {
			"sourceFileName": "src/wallet/embedded.service.ts",
			"qualifiedName": "EmbeddedWallet.generateMnemonic"
		},
		"1309": {
			"sourceFileName": "src/wallet/embedded.service.ts",
			"qualifiedName": "strength"
		},
		"1310": {
			"sourceFileName": "src/wallet/embedded.service.ts",
			"qualifiedName": "EmbeddedWallet.decrypt"
		},
		"1311": {
			"sourceFileName": "src/wallet/embedded.service.ts",
			"qualifiedName": "EmbeddedWallet.decrypt"
		},
		"1312": {
			"sourceFileName": "src/wallet/embedded.service.ts",
			"qualifiedName": "data"
		},
		"1313": {
			"sourceFileName": "src/wallet/embedded.service.ts",
			"qualifiedName": "password"
		},
		"1314": {
			"sourceFileName": "src/wallet/embedded.service.ts",
			"qualifiedName": "EmbeddedWallet.encrypt"
		},
		"1315": {
			"sourceFileName": "src/wallet/embedded.service.ts",
			"qualifiedName": "EmbeddedWallet.encrypt"
		},
		"1316": {
			"sourceFileName": "src/wallet/embedded.service.ts",
			"qualifiedName": "data"
		},
		"1317": {
			"sourceFileName": "src/wallet/embedded.service.ts",
			"qualifiedName": "password"
		},
		"1318": {
			"sourceFileName": "src/wallet/embedded.service.ts",
			"qualifiedName": "EmbeddedWallet.resolveAddress"
		},
		"1319": {
			"sourceFileName": "src/wallet/embedded.service.ts",
			"qualifiedName": "EmbeddedWallet.resolveAddress"
		},
		"1320": {
			"sourceFileName": "src/wallet/embedded.service.ts",
			"qualifiedName": "networkId"
		},
		"1321": {
			"sourceFileName": "src/wallet/embedded.service.ts",
			"qualifiedName": "bech32"
		},
		"1322": {
			"sourceFileName": "src/wallet/embedded.service.ts",
			"qualifiedName": "payment"
		},
		"1323": {
			"sourceFileName": "src/wallet/embedded.service.ts",
			"qualifiedName": "stake"
		},
		"1324": {
			"sourceFileName": "src/wallet/embedded.service.ts",
			"qualifiedName": "EmbeddedWallet.resolveKeys"
		},
		"1325": {
			"sourceFileName": "src/wallet/embedded.service.ts",
			"qualifiedName": "EmbeddedWallet.resolveKeys"
		},
		"1326": {
			"sourceFileName": "src/wallet/embedded.service.ts",
			"qualifiedName": "accountIndex"
		},
		"1327": {
			"sourceFileName": "src/wallet/embedded.service.ts",
			"qualifiedName": "password"
		},
		"1328": {
			"sourceFileName": "src/wallet/embedded.service.ts",
			"qualifiedName": "encryptedSecret"
		},
		"1329": {
			"sourceFileName": "src/wallet/embedded.service.ts",
			"qualifiedName": "__type"
		},
		"1330": {
			"sourceFileName": "src/wallet/embedded.service.ts",
			"qualifiedName": "__type.paymentKey"
		},
		"1331": {
			"sourceFileName": "src/wallet/embedded.service.ts",
			"qualifiedName": "__type.stakeKey"
		},
		"1332": {
			"sourceFileName": "src/wallet/embedded.service.ts",
			"qualifiedName": "EmbeddedWallet.resolveSigners"
		},
		"1333": {
			"sourceFileName": "src/wallet/embedded.service.ts",
			"qualifiedName": "EmbeddedWallet.resolveSigners"
		},
		"1334": {
			"sourceFileName": "src/wallet/embedded.service.ts",
			"qualifiedName": "cborTx"
		},
		"1335": {
			"sourceFileName": "src/wallet/embedded.service.ts",
			"qualifiedName": "utxos"
		},
		"1336": {
			"sourceFileName": "src/wallet/embedded.service.ts",
			"qualifiedName": "paymentKeyHash"
		},
		"1337": {
			"sourceFileName": "src/wallet/embedded.service.ts",
			"qualifiedName": "EmbeddedWallet.__constructor"
		},
		"1338": {
			"sourceFileName": "src/wallet/embedded.service.ts",
			"qualifiedName": "EmbeddedWallet"
		},
		"1339": {
			"sourceFileName": "src/wallet/embedded.service.ts",
			"qualifiedName": "_networkId"
		},
		"1340": {
			"sourceFileName": "src/wallet/embedded.service.ts",
			"qualifiedName": "_encryptedSecret"
		},
		"1341": {
			"sourceFileName": "src/wallet/embedded.service.ts",
			"qualifiedName": "EmbeddedWallet._networkId"
		},
		"1342": {
			"sourceFileName": "src/wallet/embedded.service.ts",
			"qualifiedName": "EmbeddedWallet._encryptedSecret"
		},
		"1343": {
			"sourceFileName": "src/wallet/embedded.service.ts",
			"qualifiedName": "EmbeddedWallet.getAccount"
		},
		"1344": {
			"sourceFileName": "src/wallet/embedded.service.ts",
			"qualifiedName": "EmbeddedWallet.getAccount"
		},
		"1345": {
			"sourceFileName": "src/wallet/embedded.service.ts",
			"qualifiedName": "accountIndex"
		},
		"1346": {
			"sourceFileName": "src/wallet/embedded.service.ts",
			"qualifiedName": "password"
		},
		"1347": {
			"sourceFileName": "src/wallet/embedded.service.ts",
			"qualifiedName": "EmbeddedWallet.signData"
		},
		"1348": {
			"sourceFileName": "src/wallet/embedded.service.ts",
			"qualifiedName": "EmbeddedWallet.signData"
		},
		"1349": {
			"sourceFileName": "src/wallet/embedded.service.ts",
			"qualifiedName": "accountIndex"
		},
		"1350": {
			"sourceFileName": "src/wallet/embedded.service.ts",
			"qualifiedName": "password"
		},
		"1351": {
			"sourceFileName": "src/wallet/embedded.service.ts",
			"qualifiedName": "address"
		},
		"1352": {
			"sourceFileName": "src/wallet/embedded.service.ts",
			"qualifiedName": "payload"
		},
		"1353": {
			"sourceFileName": "src/wallet/embedded.service.ts",
			"qualifiedName": "EmbeddedWallet.signTx"
		},
		"1354": {
			"sourceFileName": "src/wallet/embedded.service.ts",
			"qualifiedName": "EmbeddedWallet.signTx"
		},
		"1355": {
			"sourceFileName": "src/wallet/embedded.service.ts",
			"qualifiedName": "accountIndex"
		},
		"1356": {
			"sourceFileName": "src/wallet/embedded.service.ts",
			"qualifiedName": "password"
		},
		"1357": {
			"sourceFileName": "src/wallet/embedded.service.ts",
			"qualifiedName": "utxos"
		},
		"1358": {
			"sourceFileName": "src/wallet/embedded.service.ts",
			"qualifiedName": "unsignedTx"
		},
		"1359": {
			"sourceFileName": "src/wallet/embedded.service.ts",
			"qualifiedName": "partialSign"
		},
		"1360": {
			"sourceFileName": "src/wallet/embedded.service.ts",
			"qualifiedName": "EmbeddedWallet.accountContext"
		},
		"1361": {
			"sourceFileName": "src/wallet/embedded.service.ts",
			"qualifiedName": "EmbeddedWallet.accountContext"
		},
		"1362": {
			"sourceFileName": "src/wallet/embedded.service.ts",
			"qualifiedName": "T"
		},
		"1363": {
			"sourceFileName": "src/wallet/embedded.service.ts",
			"qualifiedName": "accountIndex"
		},
		"1364": {
			"sourceFileName": "src/wallet/embedded.service.ts",
			"qualifiedName": "password"
		},
		"1365": {
			"sourceFileName": "src/wallet/embedded.service.ts",
			"qualifiedName": "callback"
		},
		"1366": {
			"sourceFileName": "src/wallet/embedded.service.ts",
			"qualifiedName": "__type"
		},
		"1367": {
			"sourceFileName": "src/wallet/embedded.service.ts",
			"qualifiedName": "__type"
		},
		"1368": {
			"sourceFileName": "src/wallet/embedded.service.ts",
			"qualifiedName": "paymentKey"
		},
		"1369": {
			"sourceFileName": "src/wallet/embedded.service.ts",
			"qualifiedName": "stakeKey"
		},
		"1370": {
			"sourceFileName": "src/wallet/mesh.service.ts",
			"qualifiedName": "CreateMeshWalletOptions"
		},
		"1371": {
			"sourceFileName": "src/wallet/mesh.service.ts",
			"qualifiedName": "__type"
		},
		"1372": {
			"sourceFileName": "src/wallet/mesh.service.ts",
			"qualifiedName": "__type.networkId"
		},
		"1373": {
			"sourceFileName": "src/wallet/mesh.service.ts",
			"qualifiedName": "__type.fetcher"
		},
		"1374": {
			"sourceFileName": "src/wallet/mesh.service.ts",
			"qualifiedName": "__type.submitter"
		},
		"1375": {
			"sourceFileName": "src/wallet/mesh.service.ts",
			"qualifiedName": "__type.key"
		},
		"1376": {
			"sourceFileName": "src/wallet/mesh.service.ts",
			"qualifiedName": "__type"
		},
		"1377": {
			"sourceFileName": "src/wallet/mesh.service.ts",
			"qualifiedName": "__type.type"
		},
		"1378": {
			"sourceFileName": "src/wallet/mesh.service.ts",
			"qualifiedName": "__type.bech32"
		},
		"1379": {
			"sourceFileName": "src/wallet/mesh.service.ts",
			"qualifiedName": "__type"
		},
		"1380": {
			"sourceFileName": "src/wallet/mesh.service.ts",
			"qualifiedName": "__type.type"
		},
		"1381": {
			"sourceFileName": "src/wallet/mesh.service.ts",
			"qualifiedName": "__type.payment"
		},
		"1382": {
			"sourceFileName": "src/wallet/mesh.service.ts",
			"qualifiedName": "__type.stake"
		},
		"1383": {
			"sourceFileName": "src/wallet/mesh.service.ts",
			"qualifiedName": "__type"
		},
		"1384": {
			"sourceFileName": "src/wallet/mesh.service.ts",
			"qualifiedName": "__type.type"
		},
		"1385": {
			"sourceFileName": "src/wallet/mesh.service.ts",
			"qualifiedName": "__type.words"
		},
		"1386": {
			"sourceFileName": "src/wallet/mesh.service.ts",
			"qualifiedName": "MeshWallet"
		},
		"1387": {
			"sourceFileName": "src/wallet/mesh.service.ts",
			"qualifiedName": "MeshWallet.brew"
		},
		"1388": {
			"sourceFileName": "src/wallet/mesh.service.ts",
			"qualifiedName": "MeshWallet.brew"
		},
		"1389": {
			"sourceFileName": "src/wallet/mesh.service.ts",
			"qualifiedName": "privateKey"
		},
		"1390": {
			"sourceFileName": "src/wallet/mesh.service.ts",
			"qualifiedName": "strength"
		},
		"1391": {
			"sourceFileName": "src/wallet/mesh.service.ts",
			"qualifiedName": "MeshWallet.__constructor"
		},
		"1392": {
			"sourceFileName": "src/wallet/mesh.service.ts",
			"qualifiedName": "MeshWallet"
		},
		"1393": {
			"sourceFileName": "src/wallet/mesh.service.ts",
			"qualifiedName": "options"
		},
		"1394": {
			"sourceFileName": "src/wallet/mesh.service.ts",
			"qualifiedName": "MeshWallet._wallet"
		},
		"1395": {
			"sourceFileName": "src/wallet/mesh.service.ts",
			"qualifiedName": "MeshWallet._network"
		},
		"1396": {
			"sourceFileName": "src/wallet/mesh.service.ts",
			"qualifiedName": "MeshWallet.getBalance"
		},
		"1397": {
			"sourceFileName": "src/wallet/mesh.service.ts",
			"qualifiedName": "MeshWallet.getBalance"
		},
		"1398": {
			"sourceFileName": "src/wallet/mesh.service.ts",
			"qualifiedName": "MeshWallet.getChangeAddress"
		},
		"1399": {
			"sourceFileName": "src/wallet/mesh.service.ts",
			"qualifiedName": "MeshWallet.getChangeAddress"
		},
		"1400": {
			"sourceFileName": "src/wallet/mesh.service.ts",
			"qualifiedName": "MeshWallet.getCollateral"
		},
		"1401": {
			"sourceFileName": "src/wallet/mesh.service.ts",
			"qualifiedName": "MeshWallet.getCollateral"
		},
		"1402": {
			"sourceFileName": "src/wallet/mesh.service.ts",
			"qualifiedName": "MeshWallet.getNetworkId"
		},
		"1403": {
			"sourceFileName": "src/wallet/mesh.service.ts",
			"qualifiedName": "MeshWallet.getNetworkId"
		},
		"1404": {
			"sourceFileName": "src/wallet/mesh.service.ts",
			"qualifiedName": "MeshWallet.getRewardAddresses"
		},
		"1405": {
			"sourceFileName": "src/wallet/mesh.service.ts",
			"qualifiedName": "MeshWallet.getRewardAddresses"
		},
		"1406": {
			"sourceFileName": "src/wallet/mesh.service.ts",
			"qualifiedName": "MeshWallet.getUnusedAddresses"
		},
		"1407": {
			"sourceFileName": "src/wallet/mesh.service.ts",
			"qualifiedName": "MeshWallet.getUnusedAddresses"
		},
		"1408": {
			"sourceFileName": "src/wallet/mesh.service.ts",
			"qualifiedName": "MeshWallet.getUsedAddresses"
		},
		"1409": {
			"sourceFileName": "src/wallet/mesh.service.ts",
			"qualifiedName": "MeshWallet.getUsedAddresses"
		},
		"1410": {
			"sourceFileName": "src/wallet/mesh.service.ts",
			"qualifiedName": "MeshWallet.getUtxos"
		},
		"1411": {
			"sourceFileName": "src/wallet/mesh.service.ts",
			"qualifiedName": "MeshWallet.getUtxos"
		},
		"1412": {
			"sourceFileName": "src/wallet/mesh.service.ts",
			"qualifiedName": "MeshWallet.signData"
		},
		"1413": {
			"sourceFileName": "src/wallet/mesh.service.ts",
			"qualifiedName": "MeshWallet.signData"
		},
		"1414": {
			"sourceFileName": "src/wallet/mesh.service.ts",
			"qualifiedName": "payload"
		},
		"1415": {
			"sourceFileName": "src/wallet/mesh.service.ts",
			"qualifiedName": "MeshWallet.signTx"
		},
		"1416": {
			"sourceFileName": "src/wallet/mesh.service.ts",
			"qualifiedName": "MeshWallet.signTx"
		},
		"1417": {
			"sourceFileName": "src/wallet/mesh.service.ts",
			"qualifiedName": "unsignedTx"
		},
		"1418": {
			"sourceFileName": "src/wallet/mesh.service.ts",
			"qualifiedName": "partialSign"
		},
		"1419": {
			"sourceFileName": "src/wallet/mesh.service.ts",
			"qualifiedName": "MeshWallet.signTxs"
		},
		"1420": {
			"sourceFileName": "src/wallet/mesh.service.ts",
			"qualifiedName": "MeshWallet.signTxs"
		},
		"1421": {
			"sourceFileName": "src/wallet/mesh.service.ts",
			"qualifiedName": "unsignedTxs"
		},
		"1422": {
			"sourceFileName": "src/wallet/mesh.service.ts",
			"qualifiedName": "partialSign"
		},
		"1423": {
			"sourceFileName": "src/wallet/mesh.service.ts",
			"qualifiedName": "MeshWallet.submitTx"
		},
		"1424": {
			"sourceFileName": "src/wallet/mesh.service.ts",
			"qualifiedName": "MeshWallet.submitTx"
		},
		"1425": {
			"sourceFileName": "src/wallet/mesh.service.ts",
			"qualifiedName": "tx"
		},
		"1426": {
			"sourceFileName": "src/wallet/mesh.service.ts",
			"qualifiedName": "MeshWallet.getUsedAddress"
		},
		"1427": {
			"sourceFileName": "src/wallet/mesh.service.ts",
			"qualifiedName": "MeshWallet.getUsedAddress"
		},
		"1428": {
			"sourceFileName": "src/wallet/mesh.service.ts",
			"qualifiedName": "MeshWallet.getUsedCollateral"
		},
		"1429": {
			"sourceFileName": "src/wallet/mesh.service.ts",
			"qualifiedName": "MeshWallet.getUsedCollateral"
		},
		"1430": {
			"sourceFileName": "src/wallet/mesh.service.ts",
			"qualifiedName": "MeshWallet.getUsedUTxOs"
		},
		"1431": {
			"sourceFileName": "src/wallet/mesh.service.ts",
			"qualifiedName": "MeshWallet.getUsedUTxOs"
		},
		"1432": {
			"sourceFileName": "src/wallet/mesh.service.ts",
			"qualifiedName": "MeshWallet.getAssets"
		},
		"1433": {
			"sourceFileName": "src/wallet/mesh.service.ts",
			"qualifiedName": "MeshWallet.getAssets"
		},
		"1434": {
			"sourceFileName": "src/wallet/mesh.service.ts",
			"qualifiedName": "MeshWallet.getLovelace"
		},
		"1435": {
			"sourceFileName": "src/wallet/mesh.service.ts",
			"qualifiedName": "MeshWallet.getLovelace"
		},
		"1436": {
			"sourceFileName": "src/wallet/mesh.service.ts",
			"qualifiedName": "MeshWallet.getPolicyIdAssets"
		},
		"1437": {
			"sourceFileName": "src/wallet/mesh.service.ts",
			"qualifiedName": "MeshWallet.getPolicyIdAssets"
		},
		"1438": {
			"sourceFileName": "src/wallet/mesh.service.ts",
			"qualifiedName": "policyId"
		},
		"1439": {
			"sourceFileName": "src/wallet/mesh.service.ts",
			"qualifiedName": "MeshWallet.getPolicyIds"
		},
		"1440": {
			"sourceFileName": "src/wallet/mesh.service.ts",
			"qualifiedName": "MeshWallet.getPolicyIds"
		},
		"1441": {
			"sourceFileName": "src/wallet/mesh.service.ts",
			"qualifiedName": "MeshWallet.createCollateral"
		},
		"1442": {
			"sourceFileName": "src/wallet/mesh.service.ts",
			"qualifiedName": "MeshWallet.createCollateral"
		}
	}
}